System.register(["./3890c6c9.js","./63c48ac8.js","./d21801f0.js","./beb499ec.js","./5f3e257e.js","./0c36a7cc.js","./43192ce9.js"],(function(e){"use strict";var n,t,i,a,s,o,r,d,l,c,u,h,p,g,m,f,b,v,y,w,x,k,E,M;return{setters:[function(e){n=e._,t=e.a,i=e.f,a=e.g,s=e.i,o=e.b,r=e.e,d=e.x,l=e.aZ,c=e.c,u=e.d,h=e.o,p=e.t,g=e.aA,m=e.u,f=e.M,b=e.N,v=e.aE,y=e.aF,w=e.p,x=e.b7,k=e.b6,E=e.s},function(e){M=e.HAXCMSSiteEditorUI},function(){},function(){},function(){},function(){},function(){}],execute:function(){var D,I,S,A,C={url:new URL("./elements/chat-agent/lib/chat-button.js",document.baseURI).href},L=function(e){function l(){var e;return c(this,l),(e=u(this,l)).isFullView,e.isInterfaceHidden,h((function(){e.isFullView=p(re.isFullView),e.isInterfaceHidden=p(re.isInterfaceHidden)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(D||(D=o(['\n      <div class="chat-button-wrapper" @click='," @keypress=",' tabindex="0">\n        <div class="icon-wrapper">\n          <simple-icon-lite icon="','"></simple-icon-lite>\n        </div>\n        <div class="label-wrapper">\n          <slot name="label">',"</slot>\n        </div>\n      </div>\n    "])),this.handleChatButton,this.keyPress,re.buttonIcon,re.buttonLabel)}},{key:"keyPress",value:function(e){"Enter"===e.key&&(e.preventDefault(),re.developerModeEnabled&&console.info("HAX-DEV-MODE: Chat button pressed using Enter key."),this.handleChatButton())}},{key:"handleChatButton",value:function(){re.developerModeEnabled&&console.info("HAX-DEV-MODE: Chat button pressed."),re.isInterfaceHidden=!this.isInterfaceHidden}}],[{key:"tag",get:function(){return"chat-button"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(I||(I=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n        \n        :host {\n          display: block;\n          z-index: 999998;\n        }\n\n        .chat-button-wrapper {\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          display: flex;\n          width: 96px;\n          height: 96px;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          border-radius: var(--ddd-radius-lg);\n          cursor: pointer;\n          box-shadow: var(--ddd-boxShadow-xl);\n        }\n\n        /* TODO transition CSS button moving off screen */\n        :host([is-full-view]:not([is-interface-hidden])) .chat-button-wrapper {\n          display: none;\n        }\n\n        .chat-button-wrapper:hover .label-wrapper, .chat-button-wrapper:focus .label-wrapper {\n          text-decoration: underline;\n        }\n\n        .icon-wrapper {\n          width: 56px;\n          height: 56px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-circle);\n          margin-bottom: var(--ddd-spacing-1);\n        }\n\n        simple-icon-lite {\n          color: var(--data-theme-primary, var(--ddd-primary-13));\n          --simple-icon-height: var(--ddd-icon-md);\n          --simple-icon-width: var(--ddd-icon-md);\n        }\n\n        .label-wrapper {\n          padding: var(--ddd-spacing-1);\n          background-color: var(--ddd-theme-default-white);\n          color: var(--ddd-theme-default-potentialMidnight);\n          border-radius: var(--ddd-radius-xs);\n          font-size: var(--ddd-font-size-4xs);\n          font-weight: var(--ddd-font-weight-medium);\n          max-width: var(--ddd-spacing-19);\n          text-align: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{buttonIcon:{type:String,attribute:"button-icon"},buttonLabel:{type:String,attribute:"button-label"},isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0},isInterfaceHidden:{type:Boolean,attribute:"is-interface-hidden",reflect:!0}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),C.url).href}}])}(l);globalThis.customElements.define(L.tag,L);var H,V,j={url:new URL("./elements/chat-agent/lib/chat-control-bar.js",document.baseURI).href},q=function(e){function l(){var e;return c(this,l),(e=u(this,l)).isFullView=null,e.isInterfaceHidden=null,h((function(){e.isFullView=p(re.isFullView),e.isInterfaceHidden=p(re.isInterfaceHidden)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(S||(S=o(['\n      \x3c!-- https://haxapi.vercel.app/?path=/story/media-icons--hax-iconset-story --\x3e\n      \n      <div class="chat-control-bar-wrapper">\n        <div class="left-side">\n          \x3c!-- https://stackoverflow.com/questions/72654466/how-do-i-make-a-button-that-will-download-a-file --\x3e\n          <button id="download-button" @click=','>\n            <simple-icon-lite icon="icons:file-download"></simple-icon-lite>\n          </button>\n          <button id="reset-button" @click=','>\n            <simple-icon-lite icon="icons:refresh"></simple-icon-lite>\n          </button>\n        </div>\n        <div class="right-side">\n          <button id="view-button" @click=','>\n            <simple-icon-lite icon="','"></simple-icon-lite>\n          </button>\n          <button id="hide-button" @click=','>\n            <simple-icon-lite icon="lrn:arrow-right"></simple-icon-lite>\n          </button>\n        </div>\n      </div>\n    '])),this.handleDownloadLogButton,this.handleResetButton,this.handleViewButton,this.isFullView?"icons:fullscreen-exit":"icons:fullscreen",this.handleHideButton)}},{key:"handleDownloadLogButton",value:function(){re.developerModeEnabled&&console.info("HAX-DEV-MODE: Download log button pressed."),this.downloadChatLog()}},{key:"handleResetButton",value:function(){re.developerModeEnabled&&console.info("HAX-DEV-MODE: Reset button pressed."),confirm("Download the chat log before you reset?")?(re.developerModeEnabled&&console.info("HAX-DEV-MODE: Download chat log before reset confirmed."),this.downloadChatLog()):re.developerModeEnabled&&console.info("HAX-DEV-MODE: Download chat log before reset denied."),this.resetChat()}},{key:"handleViewButton",value:function(){re.developerModeEnabled&&console.info("HAX-DEV-MODE: View switch button pressed."),re.isFullView=!this.isFullView,this.requestUpdate(),re.developerModeEnabled&&console.info("HAX-DEV-MODE: View switched to: "+(re.isFullView?"full":"standard"))}},{key:"handleHideButton",value:function(){re.developerModeEnabled&&console.info("HAX-DEV-MODE: Hide button pressed."),this.isInterfaceHidden||(re.isInterfaceHidden=!0)}},{key:"downloadChatLog",value:function(){re.developerModeEnabled&&console.info("HAX-DEV-MODE: Downloading chat log..."),re.handleDownload("txt")}},{key:"resetChat",value:function(){re.developerModeEnabled&&console.info("HAX-DEV-MODE: Resetting chat..."),re.chatLog=[],re.merlinIndex=0,re.messageIndex=0,re.userIndex=0,re.loadAI()}}],[{key:"tag",get:function(){return"chat-control-bar"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(A||(A=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n        \n        :host {\n          display: block;\n        }\n\n        .chat-control-bar-wrapper {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-0);\n        }\n      "])))]}},{key:"properties",get:function(){return r({},i(a(l),"properties",this))}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),j.url).href}}])}(l);globalThis.customElements.define(q.tag,q);var P,R,T={url:new URL("./elements/chat-agent/lib/chat-developer-panel.js",document.baseURI).href},B=function(e){function l(){var e;return c(this,l),(e=u(this,l)).chatLog=[],e.engine=null,h((function(){e.chatLog=p(re.chatLog),e.engine=p(re.engine)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(H||(H=o(['\n      <div class="chat-developer-panel-wrapper">\n\n        <div class="console-table">\n          \x3c!-- Maybe convert buttons to simple-cta --\x3e\n          <button id="console-table-user" @click=','>\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite> \n              <simple-icon-lite icon="lrn:user"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() user chat log</span>\n            </div> \n          </button>\n\n          <button id="console-table-merlin" @click=','>\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="hax:wizard-hat"></simple-icon-lite> \n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() merlin chat log</span>\n            </div>\n          </button>\n\n          <button id="console-table-all" @click=','>\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="book"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() entire chat log</span>  \n            </div>\n          </button>\n\n          <button id="download-as-json" @click=','>\n            <div class="button-icon">\n              <simple-icon-lite icon="icons:file-download"></simple-icon-lite>\n              <simple-icon-lite icon="hax:code-json"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">Download chat log as .json</span>\n            </div>\n          </button>\n        </div>\n\n        <div class="switch-engine-controls">\n          <button id="switch-engine-btn">\n          <div class="button-icon">\n              <simple-icon-lite icon="hardware:memory"></simple-icon-lite>\n            </div>\n            <div class="button-text" @click=','>\n              <span class="btn-txt">Switch LLM Engine</span> <span class="switch-engine-txt">(Current Engine = <em>',"</em>)</span>\n            </div>\n          </button>\n        </div>\n      </div>\n    "])),this.handleConsoleTableButton,this.handleConsoleTableButton,this.handleConsoleTableButton,this.handleDownloadAsJsonButton,this.handleSwitchEngineButton,this.engine)}},{key:"handleConsoleTableButton",value:function(e){var n=e.currentTarget.id;switch(console.info("HAX-DEV-MODE: ".concat(n," button pressed.")),n){case"console-table-user":console.table(this.compileChatLog(re.userName));break;case"console-table-merlin":console.table(this.compileChatLog("merlin"));break;case"console-table-all":console.table(this.chatLog)}}},{key:"compileChatLog",value:function(e){console.info('HAX-DEV-MODE: Compiling "'.concat(e,'" chat log'));var n=[];return this.chatLog.forEach((function(t){t.author===e&&n.push(t)})),n}},{key:"handleDownloadAsJsonButton",value:function(){console.info("HAX-DEV-MODE: Downloading chat log as .json..."),re.handleDownload("json")}},{key:"handleSwitchEngineButton",value:function(){switch(this.engine){case"alfred":re.engine="robin";break;case"robin":re.engine="alfred"}console.info("HAX-DEV-MODE: Engine switched to ".concat(re.engine," (store) & ").concat(this.engine," (autorun)")),this.shadowRoot.querySelector(".switch-engine-txt").innerHTML="(Current Engine = <em>".concat(this.engine,"</em>)")}}],[{key:"tag",get:function(){return"chat-developer-panel"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(V||(V=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          container-type: inline-size;\n        }\n\n        .chat-developer-panel-wrapper {\n          background-color: var(--ddd-theme-default-keystoneYellow);\n          padding: var(--ddd-spacing-1) var(--ddd-spacing-1);\n          border-radius: var(--ddd-radius-sm);\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-2);\n        }\n\n        .console-table {\n          display: flex;\n          gap: var(--ddd-spacing-1);\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .switch-engine-controls {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          gap: var(--ddd-spacing-1);\n        }\n\n        @container (max-width: 500px) {\n          .btn-txt {\n            display: none;\n          }\n        }\n\n        @container (max-width: 180px) {\n          .console-table {\n            flex-wrap: wrap;\n            justify-content: center;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r({},i(a(l),"properties",this))}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),T.url).href}}])}(l);globalThis.customElements.define(B.tag,B);var O,U,X,F,N={url:new URL("./elements/chat-agent/lib/chat-input.js",document.baseURI).href},z=function(e){function l(){var e;return c(this,l),(e=u(this,l)).messageIndex=null,e.userIndex=null,h((function(){e.messageIndex=p(re.messageIndex),e.userIndex=p(re.userIndex)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(P||(P=o(['\n      <div class="chat-input-wrapper">\n        <textarea name="prompt-input" id="user-input" placeholder="','" @keypress=','></textarea>\n        <div class="send-button" @click=',' tabindex="0">\n          <simple-icon-lite icon="icons:send"></simple-icon-lite>\n        </div>\n      </div>\n    '])),re.promptPlaceholder,this.handleKeyPress,this.handleSendButton)}},{key:"handleKeyPress",value:function(e){"Enter"===e.key&&e.shiftKey&&(e.preventDefault(),this.handleSendButton()),"Enter"===e.key&&e.preventDefault()}},{key:"handleSendButton",value:function(){var e=this.shadowRoot.querySelector("#user-input").value;re.promptCharacterLimit>0&&e.length>re.promptCharacterLimit&&alert("Please shorten your prompt to no more than ".concat(re.promptCharacterLimit," characters.")),""!==e?(re.developerModeEnabled&&console.info("HAX-DEV-MODE: Send button activated. Prompt to send: "+e),re.handleMessage(re.userName,e),this.shadowRoot.querySelector("#user-input").value=""):re.developerModeEnabled&&console.info("HAX-DEV-MODE: Send button activated. No prompt to send")}},{key:"firstUpdated",value:function(e){i(a(l.prototype),"firstUpdated",this)&&i(a(l.prototype),"firstUpdated",this).call(this,e),re.promptCharacterLimit>0&&this.shadowRoot.querySelector("#user-input").setAttribute("maxlength","".concat(re.promptCharacterLimit))}}],[{key:"tag",get:function(){return"chat-input"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(R||(R=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n        \n        :host {\n          display: block;\n          font-family: var(--ddd-font-primary);\n        }\n\n        .chat-input-wrapper {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: var(--ddd-spacing-3);\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n        }\n\n        #user-input {\n          border-radius: var(--ddd-radius-lg);\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n          background-color: var(--ddd-theme-default-white);\n          color: #000;\n          resize: none;\n          scrollbar-width: none;\n          width: 85%;\n        }\n\n        .send-button {\n          width: 52px;\n          height: 52px;\n          border-radius: var(--ddd-radius-circle);\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n        }\n\n        simple-icon-lite {\n          color: var(\n            --lowContrast-override,\n            var(--ddd-theme-bgContrast, white)\n          );\n        }\n      "])))]}},{key:"properties",get:function(){return r({},i(a(l),"properties",this))}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),N.url).href}}])}(l);globalThis.customElements.define(z.tag,z);var W,J,K,Q,Y,Z=function(e){function l(){var e;return c(this,l),(e=u(this,l)).chatLog=[],e.isFullView=null,e.isInterfaceHidden=null,h((function(){e.chatLog=p(re.chatLog),e.isFullView=p(re.isFullView),e.isInterfaceHidden=p(re.isInterfaceHidden);var n=document.querySelector("#site");e.isFullView?n.style.width="75%":n.style.width="100%"})),e}return n(l,e),t(l,[{key:"updated",value:function(e){i(a(l.prototype),"updated",this)&&i(a(l.prototype),"updated",this).call(this,e),re.isInterfaceHidden?this.style.display="none":this.style.display="block"}},{key:"render",value:function(){return d(O||(O=o(['\n      <div class="chat-interface-wrapper">\n        <div class="chat-wrapper">\n          ','\n          <div class="main-wrapper">\n            <chat-control-bar></chat-control-bar>\n            <div class="chat-container">\n              <div class="chat-messages">\n                  ','\n              </div>\n              <chat-input placeholder="','"></chat-input>\n            </div>\n          </div>\n        </div>\n      </div>\n    '])),re.developerModeEnabled?d(U||(U=o(["\n            <chat-developer-panel></chat-developer-panel>\n          "]))):"",this.chatLog.map((function(e){return d(X||(X=o(['\n                    <chat-message message="','" ?sent-prompt="','" ?suggested-prompts="','"></chat-message>\n                  '])),e.message,e.author===re.userName,"merlin"===e.author)})),re.promptPlaceholder)}}],[{key:"tag",get:function(){return"chat-interface"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(F||(F=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n        \n        :host {\n          display: block;\n          z-index: 999999;\n          width: 100%;\n        }\n\n        .chat-interface-wrapper {\n          background-color: transparent;\n        }\n\n        :host([is-full-view]) .chat-interface-wrapper {\n          background-color: var(--ddd-theme-default-potentialMidnight);\n          padding: var(--ddd-spacing-3);\n        }\n\n        :host([is-full-view]) .chat-messages {\n          max-height: 100%;\n          /* TODO finish this, max-height is what is causing it to not grow at least somewhat */\n        }\n\n        .chat-wrapper {\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          padding: var(--ddd-spacing-0) var(--ddd-spacing-2) var(--ddd-spacing-2) var(--ddd-spacing-2);\n          border-radius: var(--ddd-radius-sm);\n          box-shadow: var(--ddd-boxShadow-xl);\n        }\n\n        :host([enableDeveloperPanel]), .chat-wrapper {\n          padding-top: var(--ddd-spacing-1);\n        }\n\n        .chat-container {\n          width: 100%;\n          height: 100%;\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-sm);\n        }\n\n        .chat-messages {\n          max-height: 300px;\n          overflow-x: hidden;\n          overflow-y: auto;\n          scrollbar-width: thin;\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{chatLog:{type:Array},isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0},isInterfaceHidden:{type:Boolean,attribute:"is-interface-hidden",reflect:!0}})}}])}(l);globalThis.customElements.define(Z.tag,Z);var _,G,$={url:new URL("./elements/chat-agent/lib/chat-message.js",document.baseURI).href},ee=function(e){function l(){var e;return c(this,l),(e=u(this,l)).hasSuggestedPrompts=!1,e.isSentPrompt=!1,e.message="",e.messageWasSuggestedPrompt=!1,e.suggestedPrompts=["Who are you?","What can you do?","this is proof the array map works (plz work I need this)"],e.suggestionsDisabled=!1,e}return n(l,e),t(l,[{key:"render",value:function(){return d(W||(W=o(['\n      <div class="chat-message-wrapper">\n        ',"\n      </div>\n    "])),this.isSentPrompt?this.renderSentMessage():this.renderReceivedMessage())}},{key:"renderReceivedMessage",value:function(){var e=this;return d(J||(J=o(['\n      <div class="received-chat-message">\n        <div class="message">\n          <div class="author-icon">\n            <simple-icon-lite icon="hax:wizard-hat"></simple-icon-lite>\n          </div>\n          <type-writer class="message-content" text="','" speed="','"></type-writer>\n        </div>\n        <div class="suggested-prompts">\n          ',"\n        </div>\n      </div>\n    "])),this.message,re.merlinTypeWriterSpeed,this.suggestedPrompts.map((function(n){return d(K||(K=o(['\n            <chat-suggestion suggestion="','" @click='," @keypress=","></chat-suggestion>\n          "])),n,e.disableSuggestions,e.disableSuggestions)})))}},{key:"renderSentMessage",value:function(){return d(Q||(Q=o(['\n      <div class="sent-chat-message">\n        <type-writer class="message-content" speed="','" text="','"></type-writer>\n        <div class="author-icon">\n          <rpg-character seed="','"></rpg-character>\n        </div>\n      </div>\n    '])),re.userTypeWriterSpeed,this.message,re.userName)}},{key:"disableSuggestions",value:function(e){this.suggestionsDisabled||(this.shadowRoot.querySelectorAll("chat-suggestion").forEach((function(e){e.setAttribute("disabled","")})),e.currentTarget.setAttribute("chosen-prompt",""),this.suggestionsDisabled=!0)}}],[{key:"tag",get:function(){return"chat-message"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(Y||(Y=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n        \n        :host {\n          display: block;\n          container-type: inline-size;\n        }\n\n        .chat-message-wrapper {\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n          border-bottom: var(--ddd-border-md);\n          border-bottom-style: dashed;\n        }\n\n        .sent-chat-message, .message {\n          display: flex;\n          flex-direction: row;\n          gap: var(--ddd-spacing-3);\n          align-items: center;\n        }\n\n        .received-chat-message {\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-1);\n        }\n\n        .author-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border: var(--ddd-border-md);\n          border-color: var(--ddd-theme-default-potentialMidnight);\n          border-radius: var(--ddd-radius-circle);\n          width: var(--ddd-spacing-18);\n          height: var(--ddd-spacing-18);\n        }\n\n        simple-icon-lite {\n          color: var(--data-theme-primary, var(--ddd-primary-13));\n          --simple-icon-height: var(--ddd-icon-md);\n          --simple-icon-width: var(--ddd-icon-md);\n        }\n\n        rpg-character {\n          width: var(--ddd-spacing-12);\n          height: var(--ddd-spacing-12);\n          margin-bottom: var(--ddd-spacing-3);\n        }\n\n        .message-content {\n          color: #000;\n          border: var(--ddd-border-md);\n          border-color: var(--ddd-theme-default-potentialMidnight);\n          border-radius: var(--ddd-radius-sm);\n          padding: var(--ddd-spacing-2);\n          margin: var(--ddd-spacing-0);\n          width: 80%;\n          font-family: var(--ddd-font-primary);\n          font-size: var(--ddd-font-size-4xs);\n        }\n\n        .suggested-prompts {\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          gap: var(--ddd-spacing-5);\n          justify-content: center;\n        }\n\n        @container (max-width: 190px) {\n          .author-icon {\n            display: none;\n          }\n\n          .received-chat-message .message-content {\n            background: rgba(73, 29, 112, 0.1);\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{hasSuggestedPrompts:{type:Boolean,attribute:"suggested-prompts"},isSentPrompt:{type:Boolean,attribute:"sent-prompt"},message:{type:String},messageWasSuggestedPrompt:{type:Boolean,attribute:"suggested-message"},suggestedPrompts:{type:Array},suggestionsDisabled:{type:Boolean,attribute:"suggestions-disabled"}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),$.url).href}}])}(l);globalThis.customElements.define(ee.tag,ee);var ne,te,ie={url:new URL("./elements/chat-agent/lib/chat-suggestion.js",document.baseURI).href},ae=function(e){function l(){var e;return c(this,l),(e=u(this,l)).chosenPrompt=!1,e.disabled=!1,e.suggestion="",e.messageIndex=null,e.userIndex=null,h((function(){e.messageIndex=p(re.messageIndex),e.userIndex=p(re.userIndex)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(_||(_=o(['\n      <div class="chat-suggestion-wrapper" @click='," @keypress=",' tabindex="0">\n        <p class="chat-suggestion">\n          ',"\n        </p>  \n      </div>\n    "])),this.handleSuggestion,this.handleSuggestion,this.suggestion)}},{key:"handleSuggestion",value:function(){this.disabled?re.developerModeEnabled&&console.info("HAX-DEV-MODE: Suggestion buttons disabled, ignoring request"):(re.developerModeEnabled&&console.info("HAX-DEV-MODE: Suggestion button pressed. Suggested prompt to send to Merlin: "+this.suggestion),re.handleMessage(re.userName,this.suggestion))}},{key:"updated",value:function(e){i(a(l.prototype),"updated",this)&&i(a(l.prototype),"updated",this).call(this,e),this.disabled&&this.shadowRoot.querySelector(".chat-suggestion-wrapper").removeAttribute("tabindex")}}],[{key:"tag",get:function(){return"chat-suggestion"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(G||(G=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          border-radius: var(--ddd-radius-rounded);\n        }\n\n        .chat-suggestion-wrapper {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background-color: var(--ddd-theme-default-successLight);\n          border: var(--ddd-border-sm);\n          border-radius: var(--ddd-radius-rounded);\n          border-color: var(--ddd-theme-default-potentialMidnight);\n          opacity: 1.0;\n          cursor: pointer;\n          box-shadow: var(--ddd-boxShadow-xl);\n        }\n\n        :host([disabled]) .chat-suggestion-wrapper {\n          background-color: var(--ddd-theme-default-discoveryCoral);\n          opacity: 0.6;\n          cursor: default;\n        }\n\n        :host([chosen-prompt]) .chat-suggestion-wrapper {\n          background-color: var(--ddd-theme-default-futureLime);\n        }\n\n        .chat-suggestion-wrapper:hover, .chat-suggestion-wrapper:focus {\n          background-color: var(--ddd-theme-default-futureLime);\n        }\n\n        .chat-suggestion-wrapper:hover p, .chat-suggestion-wrapper:focus p {\n          text-decoration: underline;\n        }\n        \n        :host([disabled]) p {\n          text-decoration: none;\n        }\n\n        p {\n          color: var(--ddd-theme-default-potentialMidnight);\n          font-family: var(--ddd-font-primary);\n          font-size: var(--ddd-font-size-4xs);\n          width: 80%;\n          text-align: center;\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{chosenPrompt:{type:Boolean,attribute:"chosen-prompt"},disabled:{type:Boolean},suggestion:{type:String}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),ie.url).href}}])}(l);globalThis.customElements.define(ae.tag,ae),g({enforceActions:!1}),m(["haxcms"]),f.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});var se=function(e){function l(){var e;return c(this,l),(e=u(this,l)).chatLog=[],e.engine="alfred",void 0!==b.userData.userName?e.userName=b.userData.userName:e.userName="guest",void 0!==b.userData.userPicture&&(e.userPicture=b.userData.userPicture),e.buttonIcon="hax:wizard-hat",e.buttonLabel="Merlin-AI",e.developerModeEnabled=!0,e.promptCharacterLimit,e.promptPlaceholder="Enter your prompt here...",e.isFullView=!1,e.isInterfaceHidden=!1,e.merlinIndex=0,e.messageIndex=0,e.userIndex=0,e.userTypeWriterSpeed=1,e.merlinTypeWriterSpeed=30,e.isSiteEditorOpen=M.userMenuOpen,console.log(e.isSiteEditorOpen),v(e,{chatLog:y,engine:y,isFullView:y,isInterfaceHidden:y,merlinIndex:y,messageIndex:y,userIndex:y}),h((function(){p(e.chatLog),p(e.engine);var n=p(e.isFullView),t=p(e.isInterfaceHidden);p(e.merlinIndex),p(e.messageIndex),p(e.userIndex),n?e.setAttribute("is-full-view",""):e.removeAttribute("is-full-view"),t?e.setAttribute("is-interface-hidden",""):e.removeAttribute("is-interface-hidden")})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(ne||(ne=o(['\n      <div class="chat-agent-wrapper">\n        <div class="agent-interface-wrapper">\n          <chat-interface></chat-interface>\n        </div>\n        <div class="agent-button-wrapper">\n          <chat-button>\n            <span slot="label">',"</span>\n          </chat-button>\n        </div>\n      </div>\n    "])),this.buttonLabel)}},{key:"firstUpdated",value:function(e){i(a(l.prototype),"firstUpdated",this)&&i(a(l.prototype),"firstUpdated",this).call(this,e),this.handleMessage("merlin","Hello! My name is Merlin. How can I assist you today?")}},{key:"handleMessage",value:function(e,n){var t;switch(this.developerModeEnabled&&console.info("HAX-DEV-MODE: Writing message ".concat(n," by ").concat(e," to chatLog.")),this.messageIndex++,e){case"merlin":this.merlinIndex++,t=this.merlinIndex;break;case this.userName:this.userIndex++,t=this.userIndex}var i=new Date,a={messageID:this.messageIndex,author:e,message:n,authorMessageIndex:t,timestamp:i.toString().replace(/\s/g,"-")};this.chatLog.push(a),e===this.userName&&this.handleInteraction(n)}},{key:"handleInteraction",value:function(e){var n=this;this.developerModeEnabled&&console.info("HAX-DEV-MODE: Prompt sent to: ".concat(this.engine,". Prompt sent: ").concat(e)),globalThis.document.querySelector("base")&&globalThis.document.querySelector("base").href;var t={site:{file:"https://haxtheweb.org/site.json"},type:"site",question:e,engine:this.engine,context:this.context};this.loading=!0,f.call("@haxcms/aiChat",t).then((function(e){200==e.status&&(n.answers=[e.data.answer],console.log(n.answers),n.question=e.data.question),n.loading=!1,n.handleMessage("merlin",e.data.answer)})).catch((function(e){n.loading=!1,console.error(e)}))}},{key:"handleDownload",value:function(e){if(this.developerModeEnabled&&console.info("HAX-DEV-MODE: Downloading chatlog as ".concat(e,".")),0!==this.chatLog.length){var n=JSON.stringify(this.chatLog,void 0,2),t=new Date,i="".concat(this.userName,"-chat-log-").concat(t.toString().replace(/\s/g,"-"),".").concat(e),a=document.createElement("a");a.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(n)),a.setAttribute("download",i),a.click(),a.remove()}}}],[{key:"tag",get:function(){return"chat-agent"}},{key:"styles",get:function(){return[i(a(l),"styles",this),s(te||(te=o(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          container-type: normal;\n        }\n\n        .chat-agent-wrapper {\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-2);\n          position: fixed;\n          bottom: var(--ddd-spacing-2);\n          right: var(--ddd-spacing-2);\n          width: 40%; /* Switch to 30% when working with hax environment */\n        }\n\n        :host([is-full-view]) .chat-agent-wrapper {\n          bottom: var(--ddd-spacing-0);\n          right: var(--ddd-spacing-0);\n          gap: var(--ddd-spacing-0);\n          width: 25%;\n        }\n\n        :host([is-full-view]:host([is-interface-hidden])) .chat-agent-wrapper {\n          bottom: var(--ddd-spacing-2);\n          right: var(--ddd-spacing-2);\n          gap: var(--ddd-spacing-2);\n        }\n\n        .agent-interface-wrapper {\n          display: flex;\n          justify-content: right;\n        }\n\n        .agent-button-wrapper {\n          display: flex;\n          justify-content: right;\n        }\n\n        @container (max-width: 600px) {\n          .chat-agent-wrapper {\n            width: 30%;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{userName:{type:String,attribute:"user-name"},userPicture:{type:String,attribute:"user-picture"},developerModeEnabled:{type:Boolean,attribute:"developer-mode"},promptCharacterLimit:{type:Number,attribute:"maxlength"},promptPlaceholder:{type:String,attribute:"placeholder"},merlinTypeWriterSpeed:{type:Number,attribute:"merlin-type-writer-speed"},userTypeWriterSpeed:{type:Number,attribute:"user-type-writer-speed"}})}}])}(l);customElements.define(se.tag,se),globalThis.ChatAgentModal=globalThis.ChatAgentModal||{},globalThis.ChatAgentModal.requestAvailability=function(){return globalThis.ChatAgentModal.instance||(globalThis.ChatAgentModal.instance=document.createElement("chat-agent"),document.body.appendChild(globalThis.ChatAgentModal.instance)),globalThis.ChatAgentModal.instance};var oe,re=globalThis.ChatAgentModal.requestAvailability();m(["haxcms"]),f.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});var de=e("SiteAiChat",function(e){function d(){var e;return c(this,d),(e=u(this,d)).opened=!1,e.question=null,e.answers=[],e.loading=!1,e.context=p(b.manifest.metadata.site.name),e.engine="alfred",e.dataPulse="1",e}return n(d,e),t(d,[{key:"askQuestion",value:function(e){e.preventDefault(),this.engine=e.target.getAttribute("name"),this.context=this.shadowRoot.querySelector("#context").value,this.question=this.shadowRoot.querySelector("#question").value,this.requestAIFeedback()}},{key:"updated",value:function(e){i(a(d.prototype),"updated",this)&&i(a(d.prototype),"updated",this).call(this,e),e.has("opened")&&(this.opened?this.shadowRoot.querySelector("dialog").showModal():this.shadowRoot.querySelector("dialog").close())}},{key:"requestAIFeedback",value:function(){var e=this,n=p(b.manifest),t="";globalThis.document.querySelector("base")&&(t=globalThis.document.querySelector("base").href);var i={site:{file:t+"site.json",metadata:n.metadata},type:"site",question:this.question,engine:this.engine,context:this.context};this.loading=!0,f.call("@haxcms/aiChat",i).then((function(n){200==n.status&&(e.answers=w(n.data.answers),e.question=n.data.question),e.loading=!1})).catch((function(n){e.loading=!1,console.error(n)}))}},{key:"closeChat",value:function(){this.opened=!1}},{key:"openChat",value:function(){var e=this;this.opened=!0,setTimeout((function(){e.shadowRoot.querySelector("#question").focus(),e.shadowRoot.querySelector("#question").select()}),300)}}],[{key:"tag",get:function(){return"site-ai-chat"}},{key:"styles",get:function(){return[i(a(d),"styles",this),s(oe||(oe=o(["\n        :host {\n          display: block;\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(d),"properties",this)),{},{engine:{type:String},question:{type:String},context:{type:String},answers:{type:Array},opened:{type:Boolean,reflect:!0},loading:{type:Boolean,reflect:!0}})}}])}(x(k(E))));globalThis.customElements.define(de.tag,de)}}}));
