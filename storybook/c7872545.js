System.register(["./bfad1b78.js","./94200907.js","./171d7390.js","./a245fb08.js","./6ff8e574.js","./6365267e.js","./01b45e8a.js"],(function(e){"use strict";var n,t,i,a,o,s,r,d,l,h,c,u,p,g,m,v,f,w,b,y,x,k,E,I;return{setters:[function(e){n=e._,t=e.a,i=e.f,a=e.g,o=e.i,s=e.b,r=e.e,d=e.x,l=e.aZ,h=e.c,c=e.d,u=e.o,p=e.t,g=e.aA,m=e.u,v=e.M,f=e.N,w=e.aE,b=e.aF,y=e.p,x=e.b7,k=e.b6,E=e.s},function(e){I=e.HAXCMSSiteEditorUI},function(){},function(){},function(){},function(){},function(){}],execute:function(){var M,A,S,D,C,H={url:new URL("./elements/chat-agent/lib/chat-button.js",document.baseURI).href},L=function(e){function l(){var e;return h(this,l),(e=c(this,l)).buttonIcon=null,e.isFullView=null,e.isInterfaceHidden=null,u((function(){e.buttonIcon=p(de.buttonIcon),e.isFullView=p(de.isFullView),e.isInterfaceHidden=p(de.isInterfaceHidden)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(M||(M=s(['\n      <div\n        class="chat-button-wrapper"\n        @click=',"\n        @keypress=",'\n        tabindex="0"\n      >\n        <div class="icon-wrapper">\n          <simple-icon-lite\n            icon="','"\n          ></simple-icon-lite>\n        </div>\n        <div class="label-wrapper">\n          <slot name="label">',"</slot>\n        </div>\n      </div>\n    "])),this.handleChatButton,this.keyPress,de.buttonIcon,de.buttonLabel)}},{key:"keyPress",value:function(e){"Enter"===e.key&&(e.preventDefault(),de.developerModeEnabled&&console.info("HAX-DEV-MODE: Chat button pressed using Enter key."),this.handleChatButton())}},{key:"handleChatButton",value:function(){de.developerModeEnabled&&console.info("HAX-DEV-MODE: Chat button pressed."),de.isInterfaceHidden=!this.isInterfaceHidden}}],[{key:"tag",get:function(){return"chat-button"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o(A||(A=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          z-index: 999998;\n        }\n\n        .chat-button-wrapper {\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          display: flex;\n          width: 96px;\n          height: 96px;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          border-radius: var(--ddd-radius-lg);\n          cursor: pointer;\n          box-shadow: var(--ddd-boxShadow-xl);\n        }\n\n        /* TODO transition CSS button moving off screen */\n        :host([is-full-view]:not([is-interface-hidden])) .chat-button-wrapper {\n          display: none;\n        }\n\n        /* TODO modfiy focus to lose focus when no longer hovering or after click https://stackoverflow.com/questions/19053181/how-to-remove-focus-around-buttons-on-click */\n        .chat-button-wrapper:hover .label-wrapper,\n        .chat-button-wrapper:focus .label-wrapper {\n          text-decoration: underline;\n        }\n\n        .icon-wrapper {\n          width: 56px;\n          height: 56px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-circle);\n          margin-bottom: var(--ddd-spacing-1);\n        }\n\n        simple-icon-lite {\n          color: var(--data-theme-primary, var(--ddd-primary-13));\n          --simple-icon-height: var(--ddd-icon-md);\n          --simple-icon-width: var(--ddd-icon-md);\n        }\n\n        .label-wrapper {\n          padding: var(--ddd-spacing-1);\n          background-color: var(--ddd-theme-default-white);\n          color: var(--ddd-theme-default-potentialMidnight);\n          border-radius: var(--ddd-radius-xs);\n          font-size: var(--ddd-font-size-4xs);\n          font-weight: var(--ddd-font-weight-medium);\n          max-width: var(--ddd-spacing-19);\n          text-align: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{buttonIcon:{type:String,attribute:"button-icon"},buttonLabel:{type:String,attribute:"button-label"},isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0},isInterfaceHidden:{type:Boolean,attribute:"is-interface-hidden",reflect:!0}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),H.url).href}}])}(l);globalThis.customElements.define(L.tag,L);var q,V,j={url:new URL("./elements/chat-agent/lib/chat-control-bar.js",document.baseURI).href},P=function(e){function l(){var e;return h(this,l),(e=c(this,l)).isFullView=null,e.isInterfaceHidden=null,e.dataCollectionEnabled=null,u((function(){e.isFullView=p(de.isFullView),e.isInterfaceHidden=p(de.isInterfaceHidden),e.dataCollectionEnabled=p(de.dataCollectionEnabled)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(S||(S=s(['\n      \x3c!-- https://haxapi.vercel.app/?path=/story/media-icons--hax-iconset-story --\x3e\n\n      <div class="chat-control-bar-wrapper">\n        <div class="left-side">\n          \x3c!-- https://stackoverflow.com/questions/72654466/how-do-i-make-a-button-that-will-download-a-file --\x3e\n          <button id="download-button" @click=','>\n            <simple-icon-lite icon="icons:file-download"></simple-icon-lite>\n          </button>\n          <button id="reset-button" @click=','>\n            <simple-icon-lite icon="icons:refresh"></simple-icon-lite>\n          </button>\n          <button\n            id="data-collection-button"\n            @click=','\n          >\n            <simple-icon-lite\n              icon="lrn:data_usage"\n              class="data-collection-icon"\n            ></simple-icon-lite>\n            <span>Data Collection</span>\n          </button>\n        </div>\n        <div class="right-side">\n          <button id="view-button" @click=','>\n            <simple-icon-lite\n              icon="','"\n            ></simple-icon-lite>\n          </button>\n          ',"\n        </div>\n      </div>\n    "])),this.handleDownloadLogButton,this.handleResetButton,this.handleDataCollectionButton,this.handleViewButton,this.isFullView?"icons:fullscreen-exit":"icons:fullscreen",this.isFullView?d(D||(D=s(['\n                <button id="hide-button" @click=','>\n                  <simple-icon-lite icon="lrn:arrow-right"></simple-icon-lite>\n                </button>\n              '])),this.handleHideButton):"")}},{key:"handleDownloadLogButton",value:function(){de.developerModeEnabled&&console.info("HAX-DEV-MODE: Download log button pressed."),this.downloadChatLog()}},{key:"handleResetButton",value:function(){de.developerModeEnabled&&console.info("HAX-DEV-MODE: Reset button pressed."),confirm("Reset the chat?")&&(confirm("Download the chat log before you reset?")?(de.developerModeEnabled&&console.info("HAX-DEV-MODE: Download chat log before reset confirmed."),this.downloadChatLog()):de.developerModeEnabled&&console.info("HAX-DEV-MODE: Download chat log before reset denied."),this.resetChat())}},{key:"handleDataCollectionButton",value:function(){de.dataCollectionEnabled=!de.dataCollectionEnabled,this.dataCollectionEnabled?alert("Data will not be collected to train our AI models"):alert("Data will be collected to train our AI models")}},{key:"handleViewButton",value:function(){de.developerModeEnabled&&console.info("HAX-DEV-MODE: View switch button pressed."),de.isFullView=!this.isFullView,this.requestUpdate(),de.developerModeEnabled&&console.info("HAX-DEV-MODE: View switched to: "+(de.isFullView?"full":"standard"))}},{key:"handleHideButton",value:function(){de.developerModeEnabled&&console.info("HAX-DEV-MODE: Hide button pressed."),this.isInterfaceHidden||(de.isInterfaceHidden=!0)}},{key:"downloadChatLog",value:function(){de.developerModeEnabled&&console.info("HAX-DEV-MODE: Downloading chat log..."),de.handleDownload("txt")}},{key:"resetChat",value:function(){de.developerModeEnabled&&console.info("HAX-DEV-MODE: Resetting chat..."),de.chatLog=[],de.merlinIndex=0,de.messageIndex=0,de.userIndex=0,de.startAI()}}],[{key:"tag",get:function(){return"chat-control-bar"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o(C||(C=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n        }\n\n        .chat-control-bar-wrapper {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-0);\n        }\n\n        .data-collection-icon {\n          --simple-icon-color: var(--ddd-theme-default-original87Pink);\n        }\n\n        :host([data-collection-enabled]) .data-collection-icon {\n          --simple-icon-color: var(--ddd-theme-default-futureLime);\n        }\n\n        /* Phones */\n        @media only screen and (max-width: 425px),\n          only screen and (max-height: 616px) {\n          #view-button {\n            display: none;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{dataCollectionEnabled:{type:Boolean,attribute:"data-collection-enabled",reflect:!0}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),j.url).href}}])}(l);globalThis.customElements.define(P.tag,P);var R,T,B={url:new URL("./elements/chat-agent/lib/chat-developer-panel.js",document.baseURI).href},O=function(e){function l(){var e;return h(this,l),(e=c(this,l)).chatLog=[],e.engine=null,u((function(){e.chatLog=p(de.chatLog),e.engine=p(de.engine)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(q||(q=s(['\n      <div class="chat-developer-panel-wrapper">\n        <div class="console-table">\n          \x3c!-- Maybe convert buttons to simple-cta --\x3e\n          <button\n            id="console-table-user"\n            @click=','\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="lrn:user"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() user chat log</span>\n            </div>\n          </button>\n\n          <button\n            id="console-table-merlin"\n            @click=','\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="hax:wizard-hat"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() merlin chat log</span>\n            </div>\n          </button>\n\n          <button\n            id="console-table-all"\n            @click=','\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="book"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() entire chat log</span>\n            </div>\n          </button>\n\n          <button\n            id="download-as-json"\n            @click=','\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="icons:file-download"></simple-icon-lite>\n              <simple-icon-lite icon="hax:code-json"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">Download chat log as .json</span>\n            </div>\n          </button>\n        </div>\n\n        <div class="switch-engine-controls">\n          <button id="switch-engine-btn">\n            <div class="button-icon">\n              <simple-icon-lite icon="hardware:memory"></simple-icon-lite>\n            </div>\n            <div class="button-text" @click=','>\n              <span class="btn-txt">Switch LLM Engine</span>\n              <span class="switch-engine-txt"\n                >(Current Engine = <em>',"</em>)</span\n              >\n            </div>\n          </button>\n        </div>\n      </div>\n    "])),this.handleConsoleTableButton,this.handleConsoleTableButton,this.handleConsoleTableButton,this.handleDownloadAsJsonButton,this.handleSwitchEngineButton,this.engine)}},{key:"handleConsoleTableButton",value:function(e){var n=e.currentTarget.id;switch(console.info("HAX-DEV-MODE: ".concat(n," button pressed.")),n){case"console-table-user":console.table(this.compileChatLog(de.userName));break;case"console-table-merlin":console.table(this.compileChatLog("merlin"));break;case"console-table-all":console.table(this.chatLog)}}},{key:"compileChatLog",value:function(e){console.info('HAX-DEV-MODE: Compiling "'.concat(e,'" chat log'));var n=[];return this.chatLog.forEach((function(t){t.author===e&&n.push(t)})),n}},{key:"handleDownloadAsJsonButton",value:function(){console.info("HAX-DEV-MODE: Downloading chat log as .json..."),de.handleDownload("json")}},{key:"handleSwitchEngineButton",value:function(){switch(this.engine){case"alfred":de.engine="robin";break;case"robin":de.engine="alfred"}console.info("HAX-DEV-MODE: Engine switched to ".concat(de.engine," (store) & ").concat(this.engine," (autorun)")),this.shadowRoot.querySelector(".switch-engine-txt").innerHTML="(Current Engine = <em>".concat(this.engine,"</em>)")}}],[{key:"tag",get:function(){return"chat-developer-panel"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o(V||(V=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          container-type: inline-size;\n        }\n\n        .chat-developer-panel-wrapper {\n          background-color: var(--ddd-theme-default-keystoneYellow);\n          padding: var(--ddd-spacing-1) var(--ddd-spacing-1);\n          border-radius: var(--ddd-radius-sm);\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-2);\n        }\n\n        .console-table {\n          display: flex;\n          gap: var(--ddd-spacing-1);\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .switch-engine-controls {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        button {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          gap: var(--ddd-spacing-1);\n        }\n\n        @container (max-width: 500px) {\n          .btn-txt {\n            display: none;\n          }\n        }\n\n        @container (max-width: 180px) {\n          .console-table {\n            flex-wrap: wrap;\n            justify-content: center;\n          }\n        }\n\n        @media only screen and (max-height: 575px) {\n          :host {\n            display: none;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r({},i(a(l),"properties",this))}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),B.url).href}}])}(l);globalThis.customElements.define(O.tag,O);var U,X,W,F,N={url:new URL("./elements/chat-agent/lib/chat-input.js",document.baseURI).href},z=function(e){function l(){var e;return h(this,l),(e=c(this,l)).chatLog=[],e.messageIndex=null,e.userIndex=null,e.previousMessageIndex=null,u((function(){e.chatLog=p(de.chatLog),e.messageIndex=p(de.messageIndex),e.userIndex=p(de.userIndex),e.previousMessageIndex=p(e.messageIndex)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(R||(R=s(['\n      <div class="chat-input-wrapper">\n        <textarea\n          name="prompt-input"\n          id="user-input"\n          placeholder="','"\n          @keydown=','\n        ></textarea>\n        <div class="send-button" @click=',' tabindex="0">\n          <simple-icon-lite icon="icons:send"></simple-icon-lite>\n        </div>\n      </div>\n    '])),de.promptPlaceholder,this.handleKeyPress,this.handleSendButton)}},{key:"handleKeyPress",value:function(e){var n=this.shadowRoot.querySelector("#user-input");switch(e.key){case"Enter":de.developerModeEnabled&&console.info("HAX-DEV-MODE: Enter key pressed."),e.preventDefault(),this.handleSendButton();break;case"ArrowUp":de.developerModeEnabled&&console.info("HAX-DEV-MODE: Arrow Up pressed. Previous message index = ".concat(this.previousMessageIndex," and message index = ").concat(this.messageIndex)),this.previousMessageIndex===this.messageIndex&&(de.developerModeEnabled&&console.info("HAX-DEV-MODE: Message to display: ".concat(this.chatLog[this.previousMessageIndex].message)),n.value=this.chatLog[this.previousMessageIndex].message,this.requestUpdate());break;case"ArrowDown":de.developerModeEnabled&&console.info("HAX-DEV-MODE: Arrow Down pressed."),e.preventDefault()}}},{key:"handleSendButton",value:function(){var e=this.shadowRoot.querySelector("#user-input").value;de.promptCharacterLimit>0&&e.length>de.promptCharacterLimit&&alert("Please shorten your prompt to no more than ".concat(de.promptCharacterLimit," characters.")),""!==e?(de.developerModeEnabled&&console.info("HAX-DEV-MODE: Send button activated. Prompt to send: "+e),de.handleMessage(de.userName,e),this.shadowRoot.querySelector("#user-input").value=""):de.developerModeEnabled&&console.info("HAX-DEV-MODE: Send button activated. No prompt to send")}},{key:"firstUpdated",value:function(e){i(a(l.prototype),"firstUpdated",this)&&i(a(l.prototype),"firstUpdated",this).call(this,e),de.promptCharacterLimit>0&&this.shadowRoot.querySelector("#user-input").setAttribute("maxlength","".concat(de.promptCharacterLimit))}}],[{key:"tag",get:function(){return"chat-input"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o(T||(T=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          font-family: var(--ddd-font-primary);\n        }\n\n        .chat-input-wrapper {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: var(--ddd-spacing-3);\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n        }\n\n        #user-input {\n          border-radius: var(--ddd-radius-lg);\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n          background-color: var(--ddd-theme-default-white);\n          color: #000;\n          resize: none;\n          scrollbar-width: none;\n          width: 85%;\n        }\n\n        .send-button {\n          width: 52px;\n          height: 52px;\n          border-radius: var(--ddd-radius-circle);\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n        }\n\n        simple-icon-lite {\n          color: var(\n            --lowContrast-override,\n            var(--ddd-theme-bgContrast, white)\n          );\n        }\n      "])))]}},{key:"properties",get:function(){return r({},i(a(l),"properties",this))}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),N.url).href}}])}(l);globalThis.customElements.define(z.tag,z);var K,J,Q,Y,_,G=function(e){function l(){var e;return h(this,l),(e=c(this,l)).chatLog=[],e.developerModeEnabled=null,e.isFullView=null,e.isInterfaceHidden=null,e.hasEditorUI=null,u((function(){e.chatLog=p(de.chatLog),e.developerModeEnabled=p(de.developerModeEnabled),e.isFullView=p(de.isFullView),e.isInterfaceHidden=p(de.isInterfaceHidden);var n=document.querySelector("#site");window.innerHeight>1e3?e.isFullView&&!e.isInterfaceHidden?n.style.width="65%":n.style.width="100%":e.isFullView&&!e.isInterfaceHidden?n.style.width="75%":n.style.width="100%",document.querySelector("haxcms-site-editor-ui")?e.hasEditorUI=!0:e.hasEditorUI=!1,console.log(hasEditorUI)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(U||(U=s(['\n      <div class="chat-interface-wrapper">\n        <div class="chat-wrapper">\n          ','\n          <div class="main-wrapper">\n            <chat-control-bar></chat-control-bar>\n            <div class="chat-container">\n              <div class="chat-messages">\n                ','\n              </div>\n              <chat-input\n                placeholder="','"\n              ></chat-input>\n            </div>\n          </div>\n        </div>\n      </div>\n    '])),de.developerModeEnabled?d(X||(X=s([" <chat-developer-panel></chat-developer-panel> "]))):"",this.chatLog.map((function(e){return d(W||(W=s(['\n                    <chat-message\n                      message="','"\n                      ?sent-prompt="','"\n                      ?suggested-prompts="','"\n                    ></chat-message>\n                  '])),e.message,e.author===de.userName,de.currentSuggestions.length>0)})),de.promptPlaceholder)}}],[{key:"tag",get:function(){return"chat-interface"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o(F||(F=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          z-index: 999999;\n          width: 100%;\n        }\n\n        /* Chat Interface Wrapper */\n        .chat-interface-wrapper {\n          background-color: transparent;\n        }\n\n        :host([is-full-view]) .chat-interface-wrapper {\n          background-color: var(--ddd-theme-default-potentialMidnight);\n          padding: var(--ddd-spacing-3);\n          height: 100vh;\n        }\n\n        :host([is-interface-hidden]) .chat-interface-wrapper {\n          display: none;\n        }\n\n        /* Chat Wrapper */\n        .chat-wrapper {\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          padding: var(--ddd-spacing-0) var(--ddd-spacing-2)\n            var(--ddd-spacing-2) var(--ddd-spacing-2);\n          border-radius: var(--ddd-radius-sm);\n          box-shadow: var(--ddd-boxShadow-xl);\n        }\n\n        :host([is-full-view]) .chat-wrapper {\n          margin: var(--ddd-spacing-6) var(--ddd-spacing-0) var(--ddd-spacing-6)\n            var(--ddd-spacing-0);\n          height: 94%;\n        }\n\n        :host([is-full-view][has-editor-ui]) .chat-wrapper {\n          margin: var(--ddd-spacing-18) var(--ddd-spacing-0)\n            var(--ddd-spacing-0) var(--ddd-spacing-0);\n          height: 87%;\n        }\n\n        :host([developer-mode]),\n        .chat-wrapper {\n          padding-top: var(--ddd-spacing-1);\n        }\n\n        /* Main Wrapper */\n        .main-wrapper {\n          display: flex;\n          flex-direction: column;\n        }\n\n        :host([is-full-view]) .main-wrapper {\n          height: 100%;\n        }\n\n        :host([is-full-view][developer-mode]) .main-wrapper {\n          height: 88%;\n        }\n\n        /* Chat Container */\n        .chat-container {\n          width: 100%;\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-sm);\n          display: flex;\n          flex-direction: column;\n        }\n\n        :host([is-full-view]) .chat-container {\n          height: 92%;\n        }\n\n        :host([is-full-view][developer-mode]) .chat-container {\n          height: 90%;\n        }\n\n        /* Chat Messages */\n        .chat-messages {\n          max-height: 300px;\n          overflow-x: hidden;\n          overflow-y: auto;\n          scrollbar-width: thin;\n        }\n\n        :host([is-full-view]) .chat-messages {\n          max-height: 100%;\n          height: 100%;\n        }\n\n        /* TODO test the media queries for quality assurance, and test without editor ui & without developer mode */\n        /* This should coveer a lot of horizontal monitors */\n        @media only screen and (min-width: 1081px) {\n          @media only screen and (min-height: 1201px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 98%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 105.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 101%;\n            }\n          }\n\n          @media only screen and (max-height: 1200px) and (min-height: 940px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 102%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 96%;\n            }\n          }\n\n          @media only screen and (max-height: 939px) and (min-height: 880px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 91%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 99%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 95%;\n            }\n          }\n\n          @media only screen and (max-height: 879px) and (min-height: 780px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 90%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 90%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 97%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 93%;\n            }\n          }\n\n          @media only screen and (max-height: 779px) and (min-height: 752px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 89%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 89%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 92%;\n            }\n          }\n\n          @media only screen and (max-height: 751px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 91%;\n            }\n          }\n\n          @media only screen and (max-height: 748px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 94%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 89%;\n            }\n          }\n        }\n\n        /* This should cover a lot of vertical monitors */\n        @media only screen and (max-width: 1080px) {\n          @media only screen and (min-height: 1720px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 98%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 105.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 103%;\n            }\n          }\n\n          @media only screen and (max-height: 1719px) and (min-height: 1600px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 97.5%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 105%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 102.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1599px) and (min-height: 1500px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 97%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 104.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 102%;\n            }\n          }\n\n          @media only screen and (max-height: 1499px) and (min-height: 1440px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96.5%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 103.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 101.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1439px) and (min-height: 1420px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 103%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 101%;\n            }\n          }\n\n          @media only screen and (max-height: 1419px) and (min-height: 1400px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 94.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 102.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 100.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1399px) and (min-height: 1300px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 94%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 101.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 100%;\n            }\n          }\n\n          @media only screen and (max-height: 1299px) and (min-height: 1220px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 93.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 101%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 99.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1219px) and (min-height: 1160px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 93%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 100.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 99%;\n            }\n          }\n\n          @media only screen and (max-height: 1159px) and (min-height: 1100px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 92.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 100%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 98%;\n            }\n          }\n\n          @media only screen and (max-height: 1099px) and (min-height: 1000px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 92%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 99.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 97%;\n            }\n          }\n\n          @media only screen and (max-height: 999px) and (min-height: 880px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 99%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 88%;\n            }\n          }\n\n          @media only screen and (max-height: 879px) and (min-height: 800px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 98.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 87%;\n            }\n          }\n\n          @media only screen and (max-height: 799px) and (min-height: 750px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 90.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 98%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 86%;\n            }\n          }\n        }\n\n        @media only screen and (max-height: 749px) and (min-height: 720px) {\n          :host([is-full-view]) .chat-wrapper {\n            height: 96%;\n          }\n\n          :host([is-full-view][has-editor-ui]) .chat-wrapper {\n            height: 90%;\n          }\n\n          :host([is-full-view]) .main-wrapper {\n            height: 98%;\n          }\n\n          :host([is-full-view][developer-mode]) .main-wrapper {\n            height: 85%;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{chatLog:{type:Array},developerModeEnabled:{type:Boolean,attribute:"developer-mode",reflect:!0},hasEditorUI:{type:Boolean,attribute:"has-editor-ui",reflect:!0},isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0},isInterfaceHidden:{type:Boolean,attribute:"is-interface-hidden",reflect:!0}})}}])}(l);globalThis.customElements.define(G.tag,G);var Z,$,ee={url:new URL("./elements/chat-agent/lib/chat-message.js",document.baseURI).href},ne=function(e){function l(){var e;return h(this,l),(e=c(this,l)).hasSuggestedPrompts=!1,e.isSentPrompt=!1,e.message="",e.messageWasSuggestedPrompt=!1,e.suggestedPrompts=de.currentSuggestions,e}return n(l,e),t(l,[{key:"render",value:function(){return d(K||(K=s(['\n      <div class="chat-message-wrapper">\n        ',"\n      </div>\n    "])),this.isSentPrompt?this.renderSentMessage():this.renderReceivedMessage())}},{key:"renderReceivedMessage",value:function(){var e=this;return d(J||(J=s(['\n      <div class="received-chat-message">\n        <div class="message">\n          <div class="author-icon">\n            <simple-icon-lite icon="hax:wizard-hat"></simple-icon-lite>\n          </div>\n          <type-writer\n            class="message-content"\n            text="','"\n            speed="','"\n          ></type-writer>\n        </div>\n        <div class="suggested-prompts">\n          ',"\n        </div>\n      </div>\n    "])),this.message,de.merlinTypeWriterSpeed,this.suggestedPrompts.map((function(n){return d(Q||(Q=s(['\n              <chat-suggestion\n                suggestion="','"\n                prompt-type="','"\n                @click=',"\n                @keypress=","\n              ></chat-suggestion>\n            "])),n.suggestion,n.type,e.disableSuggestions,e.disableSuggestions)})))}},{key:"renderSentMessage",value:function(){return d(Y||(Y=s(['\n      <div class="sent-chat-message">\n        \x3c!-- <type-writer class="message-content" speed="','" text="','"></type-writer> --\x3e\n        <p class="message-content">','</p>\n        <div class="author-icon">\n          <rpg-character seed="','"></rpg-character>\n        </div>\n      </div>\n    '])),de.userTypeWriterSpeed,this.message,this.message,de.userName)}},{key:"disableSuggestions",value:function(e){var n=this.shadowRoot.querySelectorAll("chat-suggestion");if(n.forEach((function(e){e.hasAttribute("disabled")||e.setAttribute("disabled","")})),!e.currentTarget.hasAttribute("chosen-prompt")){var t=!1;n.forEach((function(e){e.hasAttribute("chosen-prompt")&&(t=!0)})),t||e.currentTarget.setAttribute("chosen-prompt","")}}}],[{key:"tag",get:function(){return"chat-message"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o(_||(_=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          container-type: inline-size;\n        }\n\n        .chat-message-wrapper {\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n          border-bottom: var(--ddd-border-md);\n          border-bottom-style: dashed;\n        }\n\n        .sent-chat-message,\n        .message {\n          display: flex;\n          flex-direction: row;\n          gap: var(--ddd-spacing-3);\n          align-items: center;\n        }\n\n        .received-chat-message {\n          display: flex;\n          flex-direction: column;\n          /* gap: var(--ddd-spacing-1); */\n        }\n\n        .author-icon {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border: var(--ddd-border-md);\n          border-color: var(--ddd-theme-default-potentialMidnight);\n          border-radius: var(--ddd-radius-circle);\n          width: var(--ddd-spacing-18);\n          height: var(--ddd-spacing-18);\n        }\n\n        .received-chat-message .author-icon {\n          border-radius: var(--ddd-radius-xl);\n        }\n\n        simple-icon-lite {\n          color: var(--data-theme-primary, var(--ddd-primary-13));\n          --simple-icon-height: var(--ddd-icon-md);\n          --simple-icon-width: var(--ddd-icon-md);\n        }\n\n        rpg-character {\n          width: var(--ddd-spacing-12);\n          height: var(--ddd-spacing-12);\n          margin-bottom: var(--ddd-spacing-3);\n        }\n\n        .message-content {\n          color: #000;\n          border: var(--ddd-border-md);\n          border-color: var(--ddd-theme-default-potentialMidnight);\n          border-radius: var(--ddd-radius-sm);\n          padding: var(--ddd-spacing-2);\n          margin: var(--ddd-spacing-0);\n          width: 80%;\n          font-family: var(--ddd-font-primary);\n          font-size: var(--ddd-font-size-4xs);\n        }\n\n        .suggested-prompts {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          padding-top: var(--ddd-spacing-3);\n          gap: var(--ddd-spacing-2);\n        }\n\n        @container (max-width: 190px) {\n          .author-icon {\n            display: none;\n          }\n\n          .received-chat-message .message-content {\n            background: rgba(73, 29, 112, 0.1);\n          }\n\n          .message {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{hasSuggestedPrompts:{type:Boolean,attribute:"suggested-prompts"},isSentPrompt:{type:Boolean,attribute:"sent-prompt"},message:{type:String},messageWasSuggestedPrompt:{type:Boolean,attribute:"suggested-message"},suggestedPrompts:{type:Array}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),ee.url).href}}])}(l);globalThis.customElements.define(ne.tag,ne);var te,ie,ae={url:new URL("./elements/chat-agent/lib/chat-suggestion.js",document.baseURI).href},oe=function(e){function l(){var e;return h(this,l),(e=c(this,l)).chosenPrompt=!1,e.disabled=!1,e.promptType="",e.suggestion="",e.messageIndex=null,e.userIndex=null,u((function(){e.messageIndex=p(de.messageIndex),e.userIndex=p(de.userIndex)})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(Z||(Z=s(['\n      <div\n        class="chat-suggestion-wrapper"\n        @click=',"\n        @keypress=",'\n        tabindex="0"\n      >\n        <div class="suggestion-icon">\n          <div class="circle-wrapper">\n            <simple-icon-lite></simple-icon-lite>\n          </div>\n        </div>\n        <div class="suggestion-text">\n          <p class="chat-suggestion">',"</p>\n        </div>\n      </div>\n    "])),this.handleSuggestion,this.handleSuggestion,this.suggestion)}},{key:"handleSuggestion",value:function(){this.disabled?de.developerModeEnabled&&console.info("HAX-DEV-MODE: Suggestion buttons disabled, ignoring request"):(de.developerModeEnabled&&console.info("HAX-DEV-MODE: Suggestion button pressed. Suggested prompt to send to Merlin: "+this.suggestion),de.handleMessage(de.userName,this.suggestion))}},{key:"firstUpdated",value:function(e){i(a(l.prototype),"firstUpdated",this)&&i(a(l.prototype),"firstUpdated",this).call(this,e);var n=this.shadowRoot.querySelector("simple-icon-lite");switch(this.promptType){case"suggestion":n.setAttribute("icon","question-answer"),n.style.color="var(--data-theme-primary, var(--ddd-primary-13))";break;case"network":n.setAttribute("icon","device:signal-cellular-connected-no-internet-0-bar"),n.style.color="var(--ddd-theme-default-coalyGray)";break;case"help":n.setAttribute("icon","help-outline"),n.style.color="var(--ddd-theme-default-original87Pink)";break;case"hax":n.setAttribute("icon","lrn:network"),n.style.color="var(--data-theme-primary, var(--ddd-primary-13))";break;default:n.setAttribute("icon","lrn:info"),n.style.color="var(--ddd-theme-default-skyBlue)"}}},{key:"updated",value:function(e){i(a(l.prototype),"updated",this)&&i(a(l.prototype),"updated",this).call(this,e),this.disabled&&this.shadowRoot.querySelector(".chat-suggestion-wrapper").removeAttribute("tabindex")}}],[{key:"tag",get:function(){return"chat-suggestion"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o($||($=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n        }\n\n        .chat-suggestion-wrapper {\n          display: flex;\n          flex-direction: row;\n          justify-content: center;\n          align-items: center;\n          background-color: var(--ddd-theme-default-successLight);\n          border: var(--ddd-border-sm);\n          border-radius: var(--ddd-radius-xl);\n          border-color: var(--ddd-theme-default-potentialMidnight);\n          opacity: 1;\n          cursor: pointer;\n          box-shadow: var(--ddd-boxShadow-xl);\n        }\n\n        .suggestion-icon {\n          width: 20%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-right: var(--ddd-border-md);\n          border-right-style: solid;\n        }\n\n        .circle-wrapper {\n          background-color: white;\n          border-radius: var(--ddd-radius-circle);\n          padding: var(--ddd-spacing-2);\n        }\n\n        simple-icon-lite {\n          --simple-icon-height: var(--ddd-icon-xs);\n          --simple-icon-width: var(--ddd-icon-xs);\n        }\n\n        .suggestion-text {\n          width: 80%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        :host([disabled]) .chat-suggestion-wrapper {\n          background-color: var(--ddd-theme-default-discoveryCoral);\n          opacity: 0.6;\n          cursor: default;\n        }\n\n        :host([chosen-prompt]) .chat-suggestion-wrapper {\n          background-color: var(--ddd-theme-default-futureLime);\n        }\n\n        .chat-suggestion-wrapper:hover,\n        .chat-suggestion-wrapper:focus {\n          background-color: var(--ddd-theme-default-futureLime);\n        }\n\n        .chat-suggestion-wrapper:hover p,\n        .chat-suggestion-wrapper:focus p {\n          text-decoration: underline;\n        }\n\n        :host([disabled]) p {\n          text-decoration: none;\n        }\n\n        p {\n          color: var(--ddd-theme-default-potentialMidnight);\n          font-family: var(--ddd-font-primary);\n          font-size: var(--ddd-font-size-4xs);\n          width: 80%;\n          text-align: center;\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{chosenPrompt:{type:Boolean,attribute:"chosen-prompt"},disabled:{type:Boolean},promptType:{type:String,attribute:"prompt-type"},suggestion:{type:String}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),ae.url).href}}])}(l);globalThis.customElements.define(oe.tag,oe),g({enforceActions:!1}),m(["haxcms"]),v.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});var se=function(e){function l(){var e;return h(this,l),(e=c(this,l)).chatLog=[],e.engine="alfred",void 0!==f.userData.userName?e.userName=f.userData.userName:e.userName="guest",void 0!==f.userData.userPicture&&(e.userPicture=f.userData.userPicture),e.context="phys211",e.isLoading=null,e.dataCollectionEnabled=!0,e.buttonIcon="hax:wizard-hat",e.buttonLabel="Merlin-AI",e.developerModeEnabled=!0,e.promptCharacterLimit,e.promptPlaceholder="Enter your prompt here...",e.isFullView=!1,e.isInterfaceHidden=!1,e.merlinIndex=0,e.messageIndex=0,e.userIndex=0,e.userTypeWriterSpeed=0,e.merlinTypeWriterSpeed=4,e.currentSuggestions=[],e.isSiteEditorOpen=I.userMenuOpen,console.log(e.isSiteEditorOpen),w(e,{buttonIcon:b,chatLog:b,dataCollectionEnabled:b,engine:b,isFullView:b,isInterfaceHidden:b,isLoading:b,merlinIndex:b,messageIndex:b,userIndex:b}),u((function(){p(e.buttonIcon),p(e.chatLog),p(e.dataCollectionEnabled),p(e.engine);var n=p(e.isFullView),t=p(e.isInterfaceHidden),i=p(e.isLoading);p(e.merlinIndex),p(e.messageIndex),p(e.userIndex),n?e.setAttribute("is-full-view",""):e.removeAttribute("is-full-view"),t?e.setAttribute("is-interface-hidden",""):e.removeAttribute("is-interface-hidden"),e.buttonIcon=i?"hax:loading":"hax:wizard-hat"})),e}return n(l,e),t(l,[{key:"render",value:function(){return d(te||(te=s(['\n      <div class="chat-agent-wrapper">\n        <div class="agent-interface-wrapper">\n          <chat-interface></chat-interface>\n        </div>\n        <div class="agent-button-wrapper">\n          <chat-button>\n            <span slot="label">',"</span>\n          </chat-button>\n        </div>\n      </div>\n    "])),this.buttonLabel)}},{key:"firstUpdated",value:function(e){i(a(l.prototype),"firstUpdated",this)&&i(a(l.prototype),"firstUpdated",this).call(this,e),this.startAI()}},{key:"startAI",value:function(){this.handleMessage("merlin","Hello! My name is Merlin. I am currently in beta, and may not yet be feature complete, so you may encounter some bugs. I can currently only answer questions related to physics. How can I assist you today?"),this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"What can you do for me?",type:"help"},{suggestion:"How do I use you?",type:"help"}],this.shadowRoot.querySelector("chat-interface").shadowRoot.querySelector("chat-message").shadowRoot.querySelectorAll("chat-suggestion").forEach((function(e){e.hasAttribute("disabled")&&e.removeAttribute("disabled"),e.hasAttribute("chosen-prompt")&&e.removeAttribute("chosen-prompt")}))}},{key:"handleMessage",value:function(e,n){var t;switch(this.developerModeEnabled&&console.info('HAX-DEV-MODE: Writing message "'.concat(n,'" by ').concat(e," to chatLog.")),this.messageIndex++,e){case"merlin":this.merlinIndex++,t=this.merlinIndex;break;case this.userName:this.userIndex++,t=this.userIndex}var i=new Date,a={messageID:this.messageIndex,author:e,message:n,authorMessageIndex:t,timestamp:i.toString().replace(/\s/g,"-")};this.chatLog.push(a),e===this.userName&&this.handleInteraction(n)}},{key:"handleInteraction",value:function(e){var n=this;switch(this.developerModeEnabled&&console.info("HAX-DEV-MODE: Prompt sent to: ".concat(this.engine,". Prompt sent: ").concat(e)),this.currentSuggestions=[],e){case"Who are you?":this.currentSuggestions=[{suggestion:"What can you do for me?",type:"help"},{suggestion:"How do I use you?",type:"help"}],this.handleMessage("merlin","I am Merlin. I was created for use within HAX websites as an assistant to help you with your questions. How may I help you today?");break;case"What can you do for me?":this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"How do I use you?",type:"help"}],this.handleMessage("merlin","I can answer questions and chat with you about information relevant to the website you are navigating. How can I help you?");break;case"How do I use you?":this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"What can you do for me?",type:"help"}],this.handleMessage("merlin","I support numerous functions. You can ask me questions, as well as download our chat log and reset our chat. You can start asking me questions by clicking on one of the suggested prompts, or by typing a prompt in the input box below and pressing the send button or pressing the enter key on your keyboard. Here are some of the keyboard controls you can utilize: \n 1. Tab Key - Navigates you through the numerous usable buttons. \n 2. Enter Key (in text area) - Will submit the prompt you wrote. \n 3. Enter key (When focusing on a button) - Will act in the same way as clicking the button. \n 4. Up & Down Arrow Keys (in text area) - will navigate you through previously sent prompts so you can send them again.");break;case"Why can't you connect?":this.currentSuggestions=[{suggestion:"How do I fix this connection issue?",type:"network"}],this.handleMessage("merlin","I am either unable to connect to the internet, or a service I connect to is not available, meaning I cannot research how to respond to your prompt.");break;case"How do I fix this connection issue?":this.currentSuggestions=[{suggestion:"Why can't you connect?",type:"network"}],this.handleMessage("merlin","Please ensure you are connected to the internet. I cannot respond to (most of) your questions if you are not connected to the internet. If you are connected, it is likely one of my connected services is having an issue, I will try to fix that and be back to help you soon.");break;default:globalThis.document.querySelector("base")&&globalThis.document.querySelector("base").href;var t={site:{file:"https://haxtheweb.org/site.json"},type:"site",question:e,engine:this.engine,context:this.context};this.isLoading=!0,v.call("@haxcms/aiChat",t).then((function(e){200==e.status&&(n.answers=[e.data.answers],n.developerModeEnabled&&console.info(n.answers),n.question=e.data.question,n.currentSuggestions=[]),n.isLoading=!1,n.handleMessage("merlin",e.data.answers)})).catch((function(e){n.isLoading=!1,n.currentSuggestions=[{suggestion:"Why can't you connect?",type:"network"},{suggestion:"How do I fix this connection issue?",type:"network"}],n.handleMessage("merlin","I'm sorry, I'm having trouble connecting right now. Please try again soon. If you'd like to learn more, please click on one of the suggested prompts."),console.error(e)}))}}},{key:"handleDownload",value:function(e){if(this.developerModeEnabled&&console.info("HAX-DEV-MODE: Downloading chatlog as ".concat(e,".")),0!==this.chatLog.length){var n=JSON.stringify(this.chatLog,void 0,2),t=new Date,i="".concat(this.userName,"-chat-log-").concat(t.toString().replace(/\s/g,"-"),".").concat(e),a=document.createElement("a");a.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(n)),a.setAttribute("download",i),a.click(),a.remove()}}}],[{key:"tag",get:function(){return"chat-agent"}},{key:"styles",get:function(){return[i(a(l),"styles",this),o(ie||(ie=s(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          container-type: normal;\n        }\n\n        .chat-agent-wrapper {\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-2);\n          position: fixed;\n          bottom: var(--ddd-spacing-2);\n          right: var(--ddd-spacing-2);\n          width: 40%; /* Switch to 30% when working with hax environment */\n        }\n\n        :host([is-full-view]) .chat-agent-wrapper {\n          bottom: var(--ddd-spacing-0);\n          right: var(--ddd-spacing-0);\n          gap: var(--ddd-spacing-0);\n          width: 25%;\n          @media only screen and (min-height: 1000px) {\n            width: 35%;\n          }\n        }\n\n        :host([is-full-view]:host([is-interface-hidden])) .chat-agent-wrapper {\n          bottom: var(--ddd-spacing-2);\n          right: var(--ddd-spacing-2);\n          gap: var(--ddd-spacing-2);\n        }\n\n        .agent-interface-wrapper {\n          display: flex;\n          justify-content: right;\n        }\n\n        .agent-button-wrapper {\n          display: flex;\n          justify-content: right;\n        }\n\n        @container (max-width: 600px) {\n          .chat-agent-wrapper {\n            width: 30%;\n          }\n        }\n\n        /* TODO adjust all media queries for HAX environment, not demo environment */\n        @media only screen and (max-width: 425px) {\n          .chat-agent-wrapper {\n            width: 90%;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(l),"properties",this)),{},{userName:{type:String,attribute:"user-name"},userPicture:{type:String,attribute:"user-picture"},developerModeEnabled:{type:Boolean,attribute:"developer-mode"},promptCharacterLimit:{type:Number,attribute:"maxlength"},promptPlaceholder:{type:String,attribute:"placeholder"},merlinTypeWriterSpeed:{type:Number,attribute:"merlin-type-writer-speed"},userTypeWriterSpeed:{type:Number,attribute:"user-type-writer-speed"}})}}])}(l);customElements.define(se.tag,se),globalThis.ChatAgentModal=globalThis.ChatAgentModal||{},globalThis.ChatAgentModal.requestAvailability=function(){return globalThis.ChatAgentModal.instance||(globalThis.ChatAgentModal.instance=document.createElement("chat-agent"),document.body.appendChild(globalThis.ChatAgentModal.instance)),globalThis.ChatAgentModal.instance};var re,de=globalThis.ChatAgentModal.requestAvailability();m(["haxcms"]),v.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});var le=e("SiteAiChat",function(e){function d(){var e;return h(this,d),(e=c(this,d)).opened=!1,e.question=null,e.answers=[],e.loading=!1,e.context=p(f.manifest.metadata.site.name),e.engine="alfred",e.dataPulse="1",e}return n(d,e),t(d,[{key:"askQuestion",value:function(e){e.preventDefault(),this.engine=e.target.getAttribute("name"),this.context=this.shadowRoot.querySelector("#context").value,this.question=this.shadowRoot.querySelector("#question").value,this.requestAIFeedback()}},{key:"updated",value:function(e){i(a(d.prototype),"updated",this)&&i(a(d.prototype),"updated",this).call(this,e),e.has("opened")&&(this.opened?this.shadowRoot.querySelector("dialog").showModal():this.shadowRoot.querySelector("dialog").close())}},{key:"requestAIFeedback",value:function(){var e=this,n=p(f.manifest),t="";globalThis.document.querySelector("base")&&(t=globalThis.document.querySelector("base").href);var i={site:{file:t+"site.json",metadata:n.metadata},type:"site",question:this.question,engine:this.engine,context:this.context};this.loading=!0,v.call("@haxcms/aiChat",i).then((function(n){200==n.status&&(e.answers=y(n.data.answers),e.question=n.data.question),e.loading=!1})).catch((function(n){e.loading=!1,console.error(n)}))}},{key:"closeChat",value:function(){this.opened=!1}},{key:"openChat",value:function(){var e=this;this.opened=!0,setTimeout((function(){e.shadowRoot.querySelector("#question").focus(),e.shadowRoot.querySelector("#question").select()}),300)}}],[{key:"tag",get:function(){return"site-ai-chat"}},{key:"styles",get:function(){return[i(a(d),"styles",this),o(re||(re=s(["\n        :host {\n          display: block;\n        }\n      "])))]}},{key:"properties",get:function(){return r(r({},i(a(d),"properties",this)),{},{engine:{type:String},question:{type:String},context:{type:String},answers:{type:Array},opened:{type:Boolean,reflect:!0},loading:{type:Boolean,reflect:!0}})}}])}(x(k(E))));globalThis.customElements.define(le.tag,le)}}}));
