{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "multiple-choice.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`multiple-choice`\n`Ask the user a question from a set of possible answers.`",
          "name": "MultipleChoice",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "renderDirections",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "description": "haxProperties integration via file reference",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "haxinlineContextMenu",
              "parameters": [
                {
                  "name": "ceMenu"
                }
              ],
              "description": "add buttons when it is in context",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxClickInlineAdd",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "haxClickInlineRemove",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getGuess",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "guessCount",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkedEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "resetAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Reset user answers and shuffle the board again.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isCorrect",
              "description": "Return if the current answers are correct",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "makeItRain",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Verify the answers of the user based on their saying\nthat they want to see how they did.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkAnswerCallback",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "_computeDisplayedAnswers",
              "parameters": [
                {
                  "name": "answers"
                },
                {
                  "name": "randomize"
                }
              ],
              "description": "Figure out the order of the answers which will be displayed",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "playSound",
              "parameters": [
                {
                  "name": "sound"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxpreProcessNodeToContent",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "description": "HAX preprocess Node to Content hook",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxpreProcessInsertContent",
              "parameters": [
                {
                  "name": "detail"
                },
                {
                  "name": "activeNode"
                }
              ],
              "description": "HAX preprocess insert content hook",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderInteraction",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "inactiveCase",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderButtons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderLegend",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderFeedback",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "clickSingle",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "cleanAnswerData",
              "parameters": [
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "cleanAnswerDataBeforeSend",
              "parameters": [
                {
                  "name": "answer"
                },
                {
                  "name": "index"
                },
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "answerPrototype",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "processInput",
              "parameters": [
                {
                  "name": "index"
                },
                {
                  "name": "inputs"
                },
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "loadLightDomData",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxactiveElementChanged",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxeditModeChanged",
              "parameters": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditModeFeedbackAreas",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxHooks",
              "description": "Implements haxHooks to tie into life-cycle if hax exists.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxToggleEdit",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "guessDataValue",
              "type": {
                "text": "string"
              },
              "default": "\"display\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "object"
              },
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "maxAttempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-attempts",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "attempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "attempts",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "showAnswer",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "show-answer",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "randomize",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "attribute": "randomize",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "hideButtons",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "attribute": "hide-buttons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "attribute": "disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "singleOption",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "false",
              "attribute": "single-option",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "media",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "media",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "question",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "attribute": "question",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "answers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "attribute": "answers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "displayedAnswers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "attribute": "displayedAnswers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "correctText",
              "type": {
                "text": "string"
              },
              "default": "\"You are correct!\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "incorrectText",
              "type": {
                "text": "string"
              },
              "default": "\"Try again!\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "quizName",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "attribute": "quiz-name",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "t",
              "type": {
                "text": "object"
              },
              "default": "{ numCorrectLeft: \"You have\", numCorrectRight: \"correct\", checkAnswer: \"Check answer\", tryAgain: \"Try again\", }",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "edit",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "edit",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "relatedResource",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "attribute": "related-resource",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ],
          "superclass": {
            "name": "QuestionElement",
            "module": "/lib/QuestionElement.js"
          },
          "tagName": "multiple-choice",
          "customElement": true,
          "attributes": [
            {
              "name": "edit",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "edit",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "show-answer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showAnswer",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "media",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "media",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "max-attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAttempts",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "attempts",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "single-option",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "false",
              "fieldName": "singleOption",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "related-resource",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "fieldName": "relatedResource",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "question",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "fieldName": "question",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "answers",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "fieldName": "answers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "displayedAnswers",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "fieldName": "displayedAnswers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "quiz-name",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "fieldName": "quizName",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "randomize",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "fieldName": "randomize",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "hide-buttons",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "fieldName": "hideButtons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "user-engagement",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "MultipleChoice",
            "module": "multiple-choice.js"
          }
        },
        {
          "kind": "js",
          "name": "MultipleChoice",
          "declaration": {
            "name": "MultipleChoice",
            "module": "multiple-choice.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/QuestionElement.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QuestionElement",
          "members": [
            {
              "kind": "method",
              "name": "getGuess"
            },
            {
              "kind": "method",
              "name": "guessCount"
            },
            {
              "kind": "method",
              "name": "checkedEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "resetAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Reset user answers and shuffle the board again."
            },
            {
              "kind": "method",
              "name": "isCorrect",
              "description": "Return if the current answers are correct"
            },
            {
              "kind": "method",
              "name": "makeItRain"
            },
            {
              "kind": "method",
              "name": "checkAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Verify the answers of the user based on their saying\nthat they want to see how they did."
            },
            {
              "kind": "method",
              "name": "checkAnswerCallback"
            },
            {
              "kind": "method",
              "name": "_computeDisplayedAnswers",
              "parameters": [
                {
                  "name": "answers"
                },
                {
                  "name": "randomize"
                }
              ],
              "description": "Figure out the order of the answers which will be displayed"
            },
            {
              "kind": "method",
              "name": "playSound",
              "parameters": [
                {
                  "name": "sound"
                }
              ]
            },
            {
              "kind": "method",
              "name": "haxpreProcessNodeToContent",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "description": "HAX preprocess Node to Content hook"
            },
            {
              "kind": "method",
              "name": "haxpreProcessInsertContent",
              "parameters": [
                {
                  "name": "detail"
                },
                {
                  "name": "activeNode"
                }
              ],
              "description": "HAX preprocess insert content hook"
            },
            {
              "kind": "method",
              "name": "renderInteraction"
            },
            {
              "kind": "method",
              "name": "inactiveCase"
            },
            {
              "kind": "method",
              "name": "renderButtons"
            },
            {
              "kind": "method",
              "name": "renderDirections"
            },
            {
              "kind": "method",
              "name": "renderLegend"
            },
            {
              "kind": "method",
              "name": "renderFeedback"
            },
            {
              "kind": "method",
              "name": "clickSingle",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "cleanAnswerData",
              "parameters": [
                {
                  "name": "answers"
                }
              ]
            },
            {
              "kind": "method",
              "name": "cleanAnswerDataBeforeSend",
              "parameters": [
                {
                  "name": "answer"
                },
                {
                  "name": "index"
                },
                {
                  "name": "answers"
                }
              ]
            },
            {
              "kind": "method",
              "name": "answerPrototype"
            },
            {
              "kind": "method",
              "name": "processInput",
              "parameters": [
                {
                  "name": "index"
                },
                {
                  "name": "inputs"
                },
                {
                  "name": "answers"
                }
              ]
            },
            {
              "kind": "method",
              "name": "loadLightDomData"
            },
            {
              "kind": "method",
              "name": "haxactiveElementChanged",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "value"
                }
              ]
            },
            {
              "kind": "method",
              "name": "haxeditModeChanged",
              "parameters": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderEditModeFeedbackAreas"
            },
            {
              "kind": "method",
              "name": "haxHooks",
              "description": "Implements haxHooks to tie into life-cycle if hax exists."
            },
            {
              "kind": "method",
              "name": "haxinlineContextMenu",
              "parameters": [
                {
                  "name": "ceMenu"
                }
              ],
              "description": "add buttons when it is in context"
            },
            {
              "kind": "method",
              "name": "haxToggleEdit",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "guessDataValue",
              "type": {
                "text": "string"
              },
              "default": "\"display\""
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "object"
              },
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }"
            },
            {
              "kind": "field",
              "name": "maxAttempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-attempts",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "attempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "attempts",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showAnswer",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "show-answer",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "randomize",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "attribute": "randomize",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideButtons",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "attribute": "hide-buttons"
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "singleOption",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "false",
              "attribute": "single-option"
            },
            {
              "kind": "field",
              "name": "media",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "media"
            },
            {
              "kind": "field",
              "name": "question",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "attribute": "question"
            },
            {
              "kind": "field",
              "name": "answers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "attribute": "answers"
            },
            {
              "kind": "field",
              "name": "displayedAnswers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "attribute": "displayedAnswers"
            },
            {
              "kind": "field",
              "name": "correctText",
              "type": {
                "text": "string"
              },
              "default": "\"You are correct!\""
            },
            {
              "kind": "field",
              "name": "incorrectText",
              "type": {
                "text": "string"
              },
              "default": "\"Try again!\""
            },
            {
              "kind": "field",
              "name": "quizName",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "attribute": "quiz-name"
            },
            {
              "kind": "field",
              "name": "t",
              "type": {
                "text": "object"
              },
              "default": "{ numCorrectLeft: \"You have\", numCorrectRight: \"correct\", checkAnswer: \"Check answer\", tryAgain: \"Try again\", }"
            },
            {
              "kind": "field",
              "name": "edit",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "edit",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "relatedResource",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "attribute": "related-resource"
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "user-engagement",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "edit",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "edit"
            },
            {
              "name": "show-answer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showAnswer"
            },
            {
              "name": "media",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "media"
            },
            {
              "name": "max-attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAttempts"
            },
            {
              "name": "attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "attempts"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "single-option",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "false",
              "fieldName": "singleOption"
            },
            {
              "name": "related-resource",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "fieldName": "relatedResource"
            },
            {
              "name": "question",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "fieldName": "question"
            },
            {
              "name": "answers",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "fieldName": "answers"
            },
            {
              "name": "displayedAnswers",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "fieldName": "displayedAnswers"
            },
            {
              "name": "quiz-name",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "fieldName": "quizName"
            },
            {
              "name": "randomize",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "fieldName": "randomize"
            },
            {
              "name": "hide-buttons",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "fieldName": "hideButtons"
            }
          ],
          "mixins": [
            {
              "name": "SchemaBehaviors",
              "package": "@haxtheweb/schema-behaviors/schema-behaviors.js"
            },
            {
              "name": "I18NMixin",
              "package": "@haxtheweb/i18n-manager/lib/I18NMixin.js"
            },
            {
              "name": "DDDSuper",
              "package": "@haxtheweb/d-d-d/d-d-d.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QuestionElement",
          "declaration": {
            "name": "QuestionElement",
            "module": "lib/QuestionElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/confetti-container.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Confetti",
          "members": [
            {
              "kind": "method",
              "name": "popConfetti"
            },
            {
              "kind": "field",
              "name": "canvas",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "confetti",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "sequins",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "object"
              },
              "default": "{ confettiCount: 55, sequinCount: 30, gravityConfetti: 0.25, gravitySequins: 0.35, dragConfetti: 0.025, dragSequins: 0.02, terminalVelocity: 4, }"
            }
          ],
          "attributes": [
            {
              "name": "popped"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "confetti-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "confetti-container",
          "declaration": {
            "name": "Confetti",
            "module": "lib/confetti-container.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/short-answer-question.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`short-answer-question`\n`Ask the user a question from a set of possible answers.`",
          "name": "ShortAnswerQuestion",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "description": "haxProperties integration via file reference",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "inactiveCase",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDirections",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderInteraction",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "resetAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Reset user answers and shuffle the board again.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "valueUpdate",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "isCorrect",
              "description": "Return if the current answers are correct",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "guessDataValue",
              "type": {
                "text": "string"
              },
              "default": "\"shortanswer\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "shortanswer",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "shortanswer"
            },
            {
              "kind": "field",
              "name": "singleOption",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "true",
              "attribute": "single-option",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "getGuess",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "guessCount",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkedEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "makeItRain",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Verify the answers of the user based on their saying\nthat they want to see how they did.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkAnswerCallback",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "_computeDisplayedAnswers",
              "parameters": [
                {
                  "name": "answers"
                },
                {
                  "name": "randomize"
                }
              ],
              "description": "Figure out the order of the answers which will be displayed",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "playSound",
              "parameters": [
                {
                  "name": "sound"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxpreProcessNodeToContent",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "description": "HAX preprocess Node to Content hook",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxpreProcessInsertContent",
              "parameters": [
                {
                  "name": "detail"
                },
                {
                  "name": "activeNode"
                }
              ],
              "description": "HAX preprocess insert content hook",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderButtons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderLegend",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderFeedback",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "clickSingle",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "cleanAnswerData",
              "parameters": [
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "cleanAnswerDataBeforeSend",
              "parameters": [
                {
                  "name": "answer"
                },
                {
                  "name": "index"
                },
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "answerPrototype",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "processInput",
              "parameters": [
                {
                  "name": "index"
                },
                {
                  "name": "inputs"
                },
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "loadLightDomData",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxactiveElementChanged",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxeditModeChanged",
              "parameters": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditModeFeedbackAreas",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxHooks",
              "description": "Implements haxHooks to tie into life-cycle if hax exists.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxinlineContextMenu",
              "parameters": [
                {
                  "name": "ceMenu"
                }
              ],
              "description": "add buttons when it is in context",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxToggleEdit",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "object"
              },
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "maxAttempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-attempts",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "attempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "attempts",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "showAnswer",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "show-answer",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "randomize",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "attribute": "randomize",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "hideButtons",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "attribute": "hide-buttons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "attribute": "disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "media",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "media",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "question",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "attribute": "question",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "answers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "attribute": "answers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "displayedAnswers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "attribute": "displayedAnswers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "correctText",
              "type": {
                "text": "string"
              },
              "default": "\"You are correct!\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "incorrectText",
              "type": {
                "text": "string"
              },
              "default": "\"Try again!\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "quizName",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "attribute": "quiz-name",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "t",
              "type": {
                "text": "object"
              },
              "default": "{ numCorrectLeft: \"You have\", numCorrectRight: \"correct\", checkAnswer: \"Check answer\", tryAgain: \"Try again\", }",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "edit",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "edit",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "relatedResource",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "attribute": "related-resource",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "shortanswer",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "shortanswer"
            },
            {
              "name": "edit",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "edit",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "show-answer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showAnswer",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "media",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "media",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "max-attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAttempts",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "attempts",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "single-option",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "false",
              "fieldName": "singleOption",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "related-resource",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "fieldName": "relatedResource",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "question",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "fieldName": "question",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "answers",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "fieldName": "answers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "displayedAnswers",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "fieldName": "displayedAnswers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "quiz-name",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "fieldName": "quizName",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "randomize",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "fieldName": "randomize",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "hide-buttons",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "fieldName": "hideButtons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ],
          "superclass": {
            "name": "QuestionElement",
            "module": "/lib/QuestionElement.js"
          },
          "tagName": "short-answer-question",
          "customElement": true,
          "events": [
            {
              "name": "eventName",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "user-engagement",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "ShortAnswerQuestion",
            "module": "lib/short-answer-question.js"
          }
        },
        {
          "kind": "js",
          "name": "ShortAnswerQuestion",
          "declaration": {
            "name": "ShortAnswerQuestion",
            "module": "lib/short-answer-question.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/true-false-question.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`true-false-question`\n`Ask the user a question from a set of possible answers.`",
          "name": "TrueFalseQuestion",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "description": "haxProperties integration via file reference",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_tfanswer",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "_tfanswer"
            },
            {
              "kind": "field",
              "name": "singleOption",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "true",
              "attribute": "single-option",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "getGuess",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "guessCount",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkedEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "resetAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Reset user answers and shuffle the board again.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isCorrect",
              "description": "Return if the current answers are correct",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "makeItRain",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkAnswer",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Verify the answers of the user based on their saying\nthat they want to see how they did.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "checkAnswerCallback",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "_computeDisplayedAnswers",
              "parameters": [
                {
                  "name": "answers"
                },
                {
                  "name": "randomize"
                }
              ],
              "description": "Figure out the order of the answers which will be displayed",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "playSound",
              "parameters": [
                {
                  "name": "sound"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxpreProcessNodeToContent",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "description": "HAX preprocess Node to Content hook",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxpreProcessInsertContent",
              "parameters": [
                {
                  "name": "detail"
                },
                {
                  "name": "activeNode"
                }
              ],
              "description": "HAX preprocess insert content hook",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderInteraction",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "inactiveCase",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderButtons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDirections",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderLegend",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderFeedback",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "clickSingle",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "cleanAnswerData",
              "parameters": [
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "cleanAnswerDataBeforeSend",
              "parameters": [
                {
                  "name": "answer"
                },
                {
                  "name": "index"
                },
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "answerPrototype",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "processInput",
              "parameters": [
                {
                  "name": "index"
                },
                {
                  "name": "inputs"
                },
                {
                  "name": "answers"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "loadLightDomData",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxactiveElementChanged",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxeditModeChanged",
              "parameters": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditModeFeedbackAreas",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxHooks",
              "description": "Implements haxHooks to tie into life-cycle if hax exists.",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxinlineContextMenu",
              "parameters": [
                {
                  "name": "ceMenu"
                }
              ],
              "description": "add buttons when it is in context",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "method",
              "name": "haxToggleEdit",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "guessDataValue",
              "type": {
                "text": "string"
              },
              "default": "\"display\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "object"
              },
              "default": "{ ...LitElement.shadowRootOptions, delegatesFocus: true, }",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "maxAttempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-attempts",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "attempts",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "attempts",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "showAnswer",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "show-answer",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "randomize",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "attribute": "randomize",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "hideButtons",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "attribute": "hide-buttons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "attribute": "disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "media",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "media",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "question",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "attribute": "question",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "answers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "attribute": "answers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "displayedAnswers",
              "privacy": "public",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "attribute": "displayedAnswers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "correctText",
              "type": {
                "text": "string"
              },
              "default": "\"You are correct!\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "incorrectText",
              "type": {
                "text": "string"
              },
              "default": "\"Try again!\"",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "quizName",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "attribute": "quiz-name",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "t",
              "type": {
                "text": "object"
              },
              "default": "{ numCorrectLeft: \"You have\", numCorrectRight: \"correct\", checkAnswer: \"Check answer\", tryAgain: \"Try again\", }",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "edit",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "edit",
              "reflects": true,
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "kind": "field",
              "name": "relatedResource",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "attribute": "related-resource",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "_tfanswer",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "_tfanswer"
            },
            {
              "name": "edit",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "edit",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "show-answer",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showAnswer",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "media",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "media",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "max-attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAttempts",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "attempts",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "attempts",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Support disabling interaction with the entire board",
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "single-option",
              "type": {
                "text": "boolean"
              },
              "description": "Simple option, otherwise allow multiple via checkbox",
              "default": "false",
              "fieldName": "singleOption",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "related-resource",
              "type": {
                "text": "string"
              },
              "description": "Related Resource ID",
              "fieldName": "relatedResource",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "question",
              "type": {
                "text": "string"
              },
              "description": "Question to ask",
              "default": "\"\"",
              "fieldName": "question",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "answers",
              "type": {
                "text": "array"
              },
              "description": "Array of possible answers",
              "default": "[]",
              "fieldName": "answers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "displayedAnswers",
              "type": {
                "text": "array"
              },
              "description": "Displayed Answer set.",
              "default": "[]",
              "fieldName": "displayedAnswers",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "quiz-name",
              "type": {
                "text": "string"
              },
              "description": "Name of the quiz - hardcoded for now from HTML",
              "default": "\"default\"",
              "fieldName": "quizName",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "randomize",
              "type": {
                "text": "boolean"
              },
              "description": "Randomize the display of the answers",
              "default": "false",
              "fieldName": "randomize",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "hide-buttons",
              "type": {
                "text": "boolean"
              },
              "description": "flag to hide buttons",
              "default": "false",
              "fieldName": "hideButtons",
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ],
          "superclass": {
            "name": "QuestionElement",
            "module": "/lib/QuestionElement.js"
          },
          "tagName": "true-false-question",
          "customElement": true,
          "events": [
            {
              "name": "eventName",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            },
            {
              "name": "user-engagement",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QuestionElement",
                "module": "lib/QuestionElement.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "TrueFalseQuestion",
            "module": "lib/true-false-question.js"
          }
        },
        {
          "kind": "js",
          "name": "TrueFalseQuestion",
          "declaration": {
            "name": "TrueFalseQuestion",
            "module": "lib/true-false-question.js"
          }
        }
      ]
    }
  ]
}
