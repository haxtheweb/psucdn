{
  "version": 1,
  "tags": [
    {
      "name": "confetti-container",
      "description": "Attributes:\n\n  * `popped` {} - \n\nProperties:\n\n  * `canvas` - \n\n  * `confetti` {`never[]`} - \n\n  * `sequins` {`never[]`} - \n\n  * `options` - ",
      "attributes": [
        {
          "name": "popped",
          "description": "`popped` {} - \n\n"
        }
      ]
    },
    {
      "name": "short-answer-question",
      "description": "`short-answer-question`\n`Ask the user a question from a set of possible answers.`\n\nEvents:\n\n  * `simple-toast-hide` {`CustomEvent<boolean>`} - \n\n  * `simple-toast-show` {`CustomEvent<{ hat: string; fire: boolean; text: string; accentColor: string; duration: number; slot: HTMLElement; }>`} - \n\n  * `user-engagement` {`CustomEvent<{ activityDisplay: string; objectName: string; resultSuccess: boolean; }>`} - \n\n  * `playaudio` {`CustomEvent<{ sound: any; }>`} - \n\nAttributes:\n\n  * `shortanswer` {`string`} - \n\n  * `related-resource` {`string`} - Related Resource ID\n\n  * `max-attempts` {`number`} - \n\n  * `attempts` {`number`} - \n\n  * `show-answer` {`boolean`} - \n\n  * `randomize` {`boolean`} - Randomize the display of the answers\n\n  * `hide-buttons` {`boolean`} - flag to hide buttons\n\n  * `disabled` {`boolean`} - Support disabling interaction with the entire board\n\n  * `single-option` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\n  * `media` {`string`} - \n\n  * `question` {`string`} - Question to ask\n\n  * `answers` {`any[]`} - Array of possible answers\n\n  * `displayedAnswers` {`any[]`} - Displayed Answer set.\n\n  * `quiz-name` {`string`} - Name of the quiz - hardcoded for now from HTML\n\n  * `edit` {`boolean`} - \n\n  * `schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\n  * `t` - \n\n  * `is-safari` {`boolean`} - \n\nProperties:\n\n  * `shortanswer` {`string`} - \n\n  * `relatedResource` {`string`} - Related Resource ID\n\n  * `guessDataValue` {`string`} - \n\n  * `shadowRootOptions` - \n\n  * `maxAttempts` {`number`} - \n\n  * `attempts` {`number`} - \n\n  * `showAnswer` {`boolean`} - \n\n  * `randomize` {`boolean`} - Randomize the display of the answers\n\n  * `hideButtons` {`boolean`} - flag to hide buttons\n\n  * `disabled` {`boolean`} - Support disabling interaction with the entire board\n\n  * `singleOption` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\n  * `media` {`string`} - \n\n  * `question` {`string`} - Question to ask\n\n  * `answers` {`any[]`} - Array of possible answers\n\n  * `displayedAnswers` {`any[]`} - Displayed Answer set.\n\n  * `correctText` {`string`} - \n\n  * `incorrectText` {`string`} - \n\n  * `quizName` {`string`} - Name of the quiz - hardcoded for now from HTML\n\n  * `edit` {`boolean`} - \n\n  * `schemaResourceID` {`string`} - \n\n  * `schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\n  * `t` - \n\n  * `isSafari` {`boolean`} - ",
      "attributes": [
        {
          "name": "shortanswer",
          "description": "`shortanswer` {`string`} - \n\nProperty: shortanswer\n\nDefault: null"
        },
        {
          "name": "related-resource",
          "description": "`related-resource` {`string`} - Related Resource ID\n\nProperty: relatedResource"
        },
        {
          "name": "max-attempts",
          "description": "`max-attempts` {`number`} - \n\nProperty: maxAttempts\n\nDefault: 0"
        },
        {
          "name": "attempts",
          "description": "`attempts` {`number`} - \n\nProperty: attempts\n\nDefault: 0"
        },
        {
          "name": "show-answer",
          "description": "`show-answer` {`boolean`} - \n\nProperty: showAnswer\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "randomize",
          "description": "`randomize` {`boolean`} - Randomize the display of the answers\n\nProperty: randomize\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-buttons",
          "description": "`hide-buttons` {`boolean`} - flag to hide buttons\n\nProperty: hideButtons\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Support disabling interaction with the entire board\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "single-option",
          "description": "`single-option` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\nProperty: singleOption\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "media",
          "description": "`media` {`string`} - \n\nProperty: media\n\nDefault: null"
        },
        {
          "name": "question",
          "description": "`question` {`string`} - Question to ask\n\nProperty: question\n\nDefault: "
        },
        {
          "name": "answers",
          "description": "`answers` {`any[]`} - Array of possible answers\n\nProperty: answers\n\nDefault: "
        },
        {
          "name": "displayedAnswers",
          "description": "`displayedAnswers` {`any[]`} - Displayed Answer set.\n\nProperty: displayedAnswers\n\nDefault: "
        },
        {
          "name": "quiz-name",
          "description": "`quiz-name` {`string`} - Name of the quiz - hardcoded for now from HTML\n\nProperty: quizName\n\nDefault: default"
        },
        {
          "name": "edit",
          "description": "`edit` {`boolean`} - \n\nProperty: edit\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "schemaMap",
          "description": "`schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\nProperty: schemaMap\n\nDefault: [object Object]"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "is-safari",
          "description": "`is-safari` {`boolean`} - \n\nProperty: isSafari",
          "valueSet": "v"
        },
        {
          "name": "onsimple-toast-hide",
          "description": "`simple-toast-hide` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ hat: string; fire: boolean; text: string; accentColor: string; duration: number; slot: HTMLElement; }>`} - "
        },
        {
          "name": "onuser-engagement",
          "description": "`user-engagement` {`CustomEvent<{ activityDisplay: string; objectName: string; resultSuccess: boolean; }>`} - "
        },
        {
          "name": "onplayaudio",
          "description": "`playaudio` {`CustomEvent<{ sound: any; }>`} - "
        }
      ]
    },
    {
      "name": "true-false-question",
      "description": "`true-false-question`\n`Ask the user a question from a set of possible answers.`\n\nEvents:\n\n  * `simple-toast-hide` {`CustomEvent<boolean>`} - \n\n  * `simple-toast-show` {`CustomEvent<{ hat: string; fire: boolean; text: string; accentColor: string; duration: number; slot: HTMLElement; }>`} - \n\n  * `user-engagement` {`CustomEvent<{ activityDisplay: string; objectName: string; resultSuccess: boolean; }>`} - \n\n  * `playaudio` {`CustomEvent<{ sound: any; }>`} - \n\nAttributes:\n\n  * `_tfanswer` {`string`} - \n\n  * `related-resource` {`string`} - Related Resource ID\n\n  * `max-attempts` {`number`} - \n\n  * `attempts` {`number`} - \n\n  * `show-answer` {`boolean`} - \n\n  * `randomize` {`boolean`} - Randomize the display of the answers\n\n  * `hide-buttons` {`boolean`} - flag to hide buttons\n\n  * `disabled` {`boolean`} - Support disabling interaction with the entire board\n\n  * `single-option` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\n  * `media` {`string`} - \n\n  * `question` {`string`} - Question to ask\n\n  * `answers` {`any[]`} - Array of possible answers\n\n  * `displayedAnswers` {`any[]`} - Displayed Answer set.\n\n  * `quiz-name` {`string`} - Name of the quiz - hardcoded for now from HTML\n\n  * `edit` {`boolean`} - \n\n  * `schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\n  * `t` - \n\n  * `is-safari` {`boolean`} - \n\nProperties:\n\n  * `_tfanswer` {`string`} - \n\n  * `relatedResource` {`string`} - Related Resource ID\n\n  * `guessDataValue` {`string`} - \n\n  * `shadowRootOptions` - \n\n  * `maxAttempts` {`number`} - \n\n  * `attempts` {`number`} - \n\n  * `showAnswer` {`boolean`} - \n\n  * `randomize` {`boolean`} - Randomize the display of the answers\n\n  * `hideButtons` {`boolean`} - flag to hide buttons\n\n  * `disabled` {`boolean`} - Support disabling interaction with the entire board\n\n  * `singleOption` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\n  * `media` {`string`} - \n\n  * `question` {`string`} - Question to ask\n\n  * `answers` {`any[]`} - Array of possible answers\n\n  * `displayedAnswers` {`any[]`} - Displayed Answer set.\n\n  * `correctText` {`string`} - \n\n  * `incorrectText` {`string`} - \n\n  * `quizName` {`string`} - Name of the quiz - hardcoded for now from HTML\n\n  * `edit` {`boolean`} - \n\n  * `schemaResourceID` {`string`} - \n\n  * `schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\n  * `t` - \n\n  * `isSafari` {`boolean`} - ",
      "attributes": [
        {
          "name": "_tfanswer",
          "description": "`_tfanswer` {`string`} - \n\nProperty: _tfanswer\n\nDefault: null"
        },
        {
          "name": "related-resource",
          "description": "`related-resource` {`string`} - Related Resource ID\n\nProperty: relatedResource"
        },
        {
          "name": "max-attempts",
          "description": "`max-attempts` {`number`} - \n\nProperty: maxAttempts\n\nDefault: 0"
        },
        {
          "name": "attempts",
          "description": "`attempts` {`number`} - \n\nProperty: attempts\n\nDefault: 0"
        },
        {
          "name": "show-answer",
          "description": "`show-answer` {`boolean`} - \n\nProperty: showAnswer\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "randomize",
          "description": "`randomize` {`boolean`} - Randomize the display of the answers\n\nProperty: randomize\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-buttons",
          "description": "`hide-buttons` {`boolean`} - flag to hide buttons\n\nProperty: hideButtons\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Support disabling interaction with the entire board\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "single-option",
          "description": "`single-option` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\nProperty: singleOption\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "media",
          "description": "`media` {`string`} - \n\nProperty: media\n\nDefault: null"
        },
        {
          "name": "question",
          "description": "`question` {`string`} - Question to ask\n\nProperty: question\n\nDefault: "
        },
        {
          "name": "answers",
          "description": "`answers` {`any[]`} - Array of possible answers\n\nProperty: answers\n\nDefault: "
        },
        {
          "name": "displayedAnswers",
          "description": "`displayedAnswers` {`any[]`} - Displayed Answer set.\n\nProperty: displayedAnswers\n\nDefault: "
        },
        {
          "name": "quiz-name",
          "description": "`quiz-name` {`string`} - Name of the quiz - hardcoded for now from HTML\n\nProperty: quizName\n\nDefault: default"
        },
        {
          "name": "edit",
          "description": "`edit` {`boolean`} - \n\nProperty: edit\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "schemaMap",
          "description": "`schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\nProperty: schemaMap\n\nDefault: [object Object]"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "is-safari",
          "description": "`is-safari` {`boolean`} - \n\nProperty: isSafari",
          "valueSet": "v"
        },
        {
          "name": "onsimple-toast-hide",
          "description": "`simple-toast-hide` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ hat: string; fire: boolean; text: string; accentColor: string; duration: number; slot: HTMLElement; }>`} - "
        },
        {
          "name": "onuser-engagement",
          "description": "`user-engagement` {`CustomEvent<{ activityDisplay: string; objectName: string; resultSuccess: boolean; }>`} - "
        },
        {
          "name": "onplayaudio",
          "description": "`playaudio` {`CustomEvent<{ sound: any; }>`} - "
        }
      ]
    },
    {
      "name": "multiple-choice",
      "description": "`multiple-choice`\n`Ask the user a question from a set of possible answers.`\n\nEvents:\n\n  * `simple-toast-hide` {`CustomEvent<boolean>`} - \n\n  * `simple-toast-show` {`CustomEvent<{ hat: string; fire: boolean; text: string; accentColor: string; duration: number; slot: HTMLElement; }>`} - \n\n  * `user-engagement` {`CustomEvent<{ activityDisplay: string; objectName: string; resultSuccess: boolean; }>`} - \n\n  * `playaudio` {`CustomEvent<{ sound: any; }>`} - \n\nAttributes:\n\n  * `related-resource` {`string`} - Related Resource ID\n\n  * `max-attempts` {`number`} - \n\n  * `attempts` {`number`} - \n\n  * `show-answer` {`boolean`} - \n\n  * `randomize` {`boolean`} - Randomize the display of the answers\n\n  * `hide-buttons` {`boolean`} - flag to hide buttons\n\n  * `disabled` {`boolean`} - Support disabling interaction with the entire board\n\n  * `single-option` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\n  * `media` {`string`} - \n\n  * `question` {`string`} - Question to ask\n\n  * `answers` {`any[]`} - Array of possible answers\n\n  * `displayedAnswers` {`any[]`} - Displayed Answer set.\n\n  * `quiz-name` {`string`} - Name of the quiz - hardcoded for now from HTML\n\n  * `edit` {`boolean`} - \n\n  * `schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\n  * `t` - \n\n  * `is-safari` {`boolean`} - \n\nProperties:\n\n  * `relatedResource` {`string`} - Related Resource ID\n\n  * `guessDataValue` {`string`} - \n\n  * `shadowRootOptions` - \n\n  * `maxAttempts` {`number`} - \n\n  * `attempts` {`number`} - \n\n  * `showAnswer` {`boolean`} - \n\n  * `randomize` {`boolean`} - Randomize the display of the answers\n\n  * `hideButtons` {`boolean`} - flag to hide buttons\n\n  * `disabled` {`boolean`} - Support disabling interaction with the entire board\n\n  * `singleOption` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\n  * `media` {`string`} - \n\n  * `question` {`string`} - Question to ask\n\n  * `answers` {`any[]`} - Array of possible answers\n\n  * `displayedAnswers` {`any[]`} - Displayed Answer set.\n\n  * `correctText` {`string`} - \n\n  * `incorrectText` {`string`} - \n\n  * `quizName` {`string`} - Name of the quiz - hardcoded for now from HTML\n\n  * `edit` {`boolean`} - \n\n  * `schemaResourceID` {`string`} - \n\n  * `schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\n  * `t` - \n\n  * `isSafari` {`boolean`} - ",
      "attributes": [
        {
          "name": "related-resource",
          "description": "`related-resource` {`string`} - Related Resource ID\n\nProperty: relatedResource"
        },
        {
          "name": "max-attempts",
          "description": "`max-attempts` {`number`} - \n\nProperty: maxAttempts\n\nDefault: 0"
        },
        {
          "name": "attempts",
          "description": "`attempts` {`number`} - \n\nProperty: attempts\n\nDefault: 0"
        },
        {
          "name": "show-answer",
          "description": "`show-answer` {`boolean`} - \n\nProperty: showAnswer\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "randomize",
          "description": "`randomize` {`boolean`} - Randomize the display of the answers\n\nProperty: randomize\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-buttons",
          "description": "`hide-buttons` {`boolean`} - flag to hide buttons\n\nProperty: hideButtons\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Support disabling interaction with the entire board\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "single-option",
          "description": "`single-option` {`boolean`} - Simple option, otherwise allow multiple via checkbox\n\nProperty: singleOption\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "media",
          "description": "`media` {`string`} - \n\nProperty: media\n\nDefault: null"
        },
        {
          "name": "question",
          "description": "`question` {`string`} - Question to ask\n\nProperty: question\n\nDefault: "
        },
        {
          "name": "answers",
          "description": "`answers` {`any[]`} - Array of possible answers\n\nProperty: answers\n\nDefault: "
        },
        {
          "name": "displayedAnswers",
          "description": "`displayedAnswers` {`any[]`} - Displayed Answer set.\n\nProperty: displayedAnswers\n\nDefault: "
        },
        {
          "name": "quiz-name",
          "description": "`quiz-name` {`string`} - Name of the quiz - hardcoded for now from HTML\n\nProperty: quizName\n\nDefault: default"
        },
        {
          "name": "edit",
          "description": "`edit` {`boolean`} - \n\nProperty: edit\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "schemaMap",
          "description": "`schemaMap` - Schema Map for the element, used to generate a valid prefix on the fly\nProps set for Polymer compatibility\n\nProperty: schemaMap\n\nDefault: [object Object]"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t\n\nDefault: [object Object]"
        },
        {
          "name": "is-safari",
          "description": "`is-safari` {`boolean`} - \n\nProperty: isSafari",
          "valueSet": "v"
        },
        {
          "name": "onsimple-toast-hide",
          "description": "`simple-toast-hide` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "onsimple-toast-show",
          "description": "`simple-toast-show` {`CustomEvent<{ hat: string; fire: boolean; text: string; accentColor: string; duration: number; slot: HTMLElement; }>`} - "
        },
        {
          "name": "onuser-engagement",
          "description": "`user-engagement` {`CustomEvent<{ activityDisplay: string; objectName: string; resultSuccess: boolean; }>`} - "
        },
        {
          "name": "onplayaudio",
          "description": "`playaudio` {`CustomEvent<{ sound: any; }>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}