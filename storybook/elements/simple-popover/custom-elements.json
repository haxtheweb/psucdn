{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "simple-popover.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`simple-popover`\na popover alertdialog that is positioned next to a target element\n\n### Styling\n\n`<simple-popover>` provides the following custom properties\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-popover-border-radius` | popover border-radius | 3px\n`--simple-popover-color` | popover text color| #222\n`--simple-popover-padding` | popover padding | 10px\n`--simple-popover-background-color` | popover background-color | white\n`--simple-popover-border-color` | popover border-color | #bbb\n`--simple-popover-box-shadow` | popover box-shadow | rgba(60, 64, 67, 0.3) 0px 4px 8px 3px;",
          "name": "SimplePopover",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "Store the tag name to make it easier to obtain directly.",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_getMargins",
              "parameters": [
                {
                  "name": "positions",
                  "description": "object that contains postions for popover and target",
                  "type": {
                    "text": "object"
                  }
                }
              ],
              "description": "sets pointer position based on popover and target middles",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "number"
              },
              "default": "-10"
            },
            {
              "kind": "field",
              "name": "fitToVisibleBounds",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            }
          ],
          "superclass": {
            "name": "AbsolutePositionBehavior",
            "package": "@haxtheweb/absolute-position-behavior/absolute-position-behavior.js"
          },
          "tagName": "simple-popover",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SimplePopover",
            "module": "simple-popover.js"
          }
        },
        {
          "kind": "js",
          "name": "SimplePopover",
          "declaration": {
            "name": "SimplePopover",
            "module": "simple-popover.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/SimpleTourFinder.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "SimpleTourFinder",
          "members": [
            {
              "kind": "method",
              "name": "discoverSimpleTourStops"
            },
            {
              "kind": "field",
              "name": "tourName",
              "type": {
                "text": "string"
              },
              "default": "\"default\""
            }
          ],
          "parameters": [
            {
              "name": "SuperClass"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SimpleTourFinder",
          "declaration": {
            "name": "SimpleTourFinder",
            "module": "lib/SimpleTourFinder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/simple-popover-manager.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SimplePopoverManager",
          "members": [
            {
              "kind": "method",
              "name": "setPopover",
              "parameters": [
                {
                  "name": "context"
                },
                {
                  "name": "el"
                },
                {
                  "name": "opened",
                  "default": "null"
                },
                {
                  "name": "orientation",
                  "default": "\"tb\""
                },
                {
                  "name": "mode"
                }
              ],
              "description": "set target and optionally change content and open state"
            },
            {
              "kind": "field",
              "name": "popover",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "popover"
            },
            {
              "kind": "field",
              "name": "opened",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "opened"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "orientation",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"tb\"",
              "attribute": "orientation"
            },
            {
              "kind": "field",
              "name": "position",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"bottom\"",
              "attribute": "position"
            },
            {
              "kind": "field",
              "name": "__ignore",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            }
          ],
          "attributes": [
            {
              "name": "position",
              "type": {
                "text": "string"
              },
              "default": "\"bottom\"",
              "fieldName": "position"
            },
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "opened"
            },
            {
              "name": "orientation",
              "type": {
                "text": "string"
              },
              "default": "\"tb\"",
              "fieldName": "orientation"
            },
            {
              "name": "popover",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "popover"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "simple-popover-manager",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "simple-popover-manager",
          "declaration": {
            "name": "SimplePopoverManager",
            "module": "lib/simple-popover-manager.js"
          }
        },
        {
          "kind": "js",
          "name": "SimplePopoverManager",
          "declaration": {
            "name": "SimplePopoverManager",
            "module": "lib/simple-popover-manager.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/simple-popover-selection.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SimplePopoverSelection",
          "members": [
            {
              "kind": "method",
              "name": "openedToggle",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "openedChanged",
              "parameters": [
                {
                  "name": "state"
                }
              ]
            },
            {
              "kind": "method",
              "name": "managerReset",
              "description": "The manager called and its time to pack it up. We got a better offer from someone else\nto maintain the state of the singleton and thus, you no longer matter. Please pack up\nyour bags and don't let the door hit ya."
            },
            {
              "kind": "method",
              "name": "itemSelect",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "openPopover"
            },
            {
              "kind": "method",
              "name": "closePopover"
            },
            {
              "kind": "field",
              "name": "opened",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "opened",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "disabled state",
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "event",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "event activation type",
              "default": "\"click\"",
              "attribute": "event"
            }
          ],
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "simple-popover-selection-changed",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "opened"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "disabled state",
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "event",
              "type": {
                "text": "string"
              },
              "description": "event activation type",
              "default": "\"click\"",
              "fieldName": "event"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "simple-popover-selection",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "simple-popover-selection",
          "declaration": {
            "name": "SimplePopoverSelection",
            "module": "lib/simple-popover-selection.js"
          }
        },
        {
          "kind": "js",
          "name": "SimplePopoverSelection",
          "declaration": {
            "name": "SimplePopoverSelection",
            "module": "lib/simple-popover-selection.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/simple-tour.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SimpleTour",
          "members": [
            {
              "kind": "method",
              "name": "registerNewTourEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "registerNewTour",
              "parameters": [
                {
                  "name": "newTour"
                }
              ]
            },
            {
              "kind": "method",
              "name": "createTourStopEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "create tour stop via events"
            },
            {
              "kind": "method",
              "name": "createTourStop",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "target"
                },
                {
                  "name": "title"
                },
                {
                  "name": "description"
                },
                {
                  "name": "mode"
                }
              ],
              "description": "Create a tour stop, add to the stack, then return the stop object"
            },
            {
              "kind": "method",
              "name": "removeTarget",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "target"
                }
              ],
              "description": "It's possible we drop a target from the DOM and then\nhave to remove it from the tour"
            },
            {
              "kind": "method",
              "name": "addStops",
              "parameters": [
                {
                  "name": "name"
                },
                {
                  "name": "stops"
                }
              ],
              "description": "Add stops to the tour"
            },
            {
              "kind": "method",
              "name": "hasNext"
            },
            {
              "kind": "method",
              "name": "hasPrev"
            },
            {
              "kind": "method",
              "name": "nextStop",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Move ahead or back in the stack"
            },
            {
              "kind": "method",
              "name": "prevStop",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "startTour",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "stopTour",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "tourButtons",
              "description": "Render tour buttons as block"
            },
            {
              "kind": "method",
              "name": "scrollHere",
              "parameters": [
                {
                  "name": "node"
                }
              ],
              "description": "Simple utility to do nice scrolling or only scroll if we can't see it\nas that is better behavior but not in all browsers"
            },
            {
              "kind": "method",
              "name": "managerReset",
              "description": "The manager was called and he's pissed. Do not cross Go, do not collect $200 in tips.\nYou're fired. Me, you, every body. We're fired because someone just asked for the manager\nto do something else and we were already taking people on a tour and now the kitchen\nis on fire and someone must be blamed.\n\nAlso, global calls this to clean up local state when global is hijacked by another project\nthat also leverages the singleton and wants to ensure everyone cleans up after themselves\ninstead of flipping tables on their way out the door. We'll call this function pack up\non a Friday to avoid incidents."
            },
            {
              "kind": "field",
              "name": "stacks",
              "privacy": "public",
              "type": {
                "text": "object"
              },
              "default": "{}",
              "attribute": "stacks"
            },
            {
              "kind": "field",
              "name": "orientation",
              "type": {
                "text": "string"
              },
              "default": "\"lr\""
            },
            {
              "kind": "field",
              "name": "active",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "active"
            },
            {
              "kind": "field",
              "name": "tourInfo",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "activeElementDelay",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "500",
              "attribute": "activeElementDelay"
            },
            {
              "kind": "field",
              "name": "stop",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "attribute": "stop"
            }
          ],
          "events": [
            {
              "name": "tour-changed",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "stop",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "fieldName": "stop"
            },
            {
              "name": "active",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "active"
            },
            {
              "name": "stacks",
              "type": {
                "text": "object"
              },
              "default": "{}",
              "fieldName": "stacks"
            },
            {
              "name": "activeElementDelay",
              "type": {
                "text": "number"
              },
              "default": "500",
              "fieldName": "activeElementDelay"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "simple-tour",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "Simple Tour Stop object for consistency",
          "name": "TourStop",
          "members": [
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "\"Title\""
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "\"<p>Description</p>\""
            }
          ]
        },
        {
          "kind": "variable",
          "name": "SimpleTourManager"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "simple-tour",
          "declaration": {
            "name": "SimpleTour",
            "module": "lib/simple-tour.js"
          }
        },
        {
          "kind": "js",
          "name": "SimpleTour",
          "declaration": {
            "name": "SimpleTour",
            "module": "lib/simple-tour.js"
          }
        },
        {
          "kind": "js",
          "name": "TourStop",
          "declaration": {
            "name": "TourStop",
            "module": "lib/simple-tour.js"
          }
        },
        {
          "kind": "js",
          "name": "SimpleTourManager",
          "declaration": {
            "name": "SimpleTourManager",
            "module": "lib/simple-tour.js"
          }
        }
      ]
    }
  ]
}
