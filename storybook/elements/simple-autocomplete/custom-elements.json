{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "simple-autocomplete.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`simple-autocomplete`\n`auto complete either from an endpoint or local json array`",
          "name": "SimpleAutocomplete",
          "members": [
            {
              "kind": "method",
              "name": "setValue",
              "parameters": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "kind": "method",
              "name": "processInput",
              "parameters": [
                {
                  "name": "value"
                }
              ],
              "description": "Logic for processing input and ensuring list is filtered"
            },
            {
              "kind": "method",
              "name": "inputChanged",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "When input changes as in user types into the contenteditable area\nThen we need to open the autocomplete menu and start filtering"
            },
            {
              "kind": "method",
              "name": "a11yListKeys",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Accessibility enhancements for key presses while in the list of items"
            },
            {
              "kind": "method",
              "name": "hardStopEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "a11yInputKeys",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Accessibility enhancements when typing in order to move to the autocomplete list easily"
            },
            {
              "kind": "method",
              "name": "getSelection",
              "description": "Selection normalizer"
            },
            {
              "kind": "method",
              "name": "getRange",
              "description": "Get a normalized range based on current selection"
            },
            {
              "kind": "method",
              "name": "resetFocusOnInput",
              "description": "Reset focus back on the input area while closing the popover"
            },
            {
              "kind": "method",
              "name": "itemSelect",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "handle item selection and reset focus"
            },
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "Convention we use",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "itemLimit",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "default": "6",
              "attribute": "item-limit"
            },
            {
              "kind": "field",
              "name": "hideInput",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "hide-input"
            },
            {
              "kind": "field",
              "name": "selectionPosition",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "selection-position"
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "opened",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "opened",
              "reflects": true
            }
          ],
          "events": [
            {
              "name": "item-selected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "opened",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "opened"
            },
            {
              "name": "hide-input",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "hideInput"
            },
            {
              "name": "selection-position",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "selectionPosition"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "value"
            },
            {
              "name": "item-limit",
              "type": {
                "text": "number"
              },
              "default": "6",
              "fieldName": "itemLimit"
            }
          ],
          "mixins": [
            {
              "name": "SimpleFilterMixin",
              "package": "@haxtheweb/simple-filter/simple-filter.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "simple-autocomplete",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SimpleAutocomplete",
            "module": "simple-autocomplete.js"
          }
        },
        {
          "kind": "js",
          "name": "SimpleAutocomplete",
          "declaration": {
            "name": "SimpleAutocomplete",
            "module": "simple-autocomplete.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/simple-autocomplete-text-trigger.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SimpleAutocompleteTextTrigger",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "Convention we use",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "valueChanged",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "connectTargetEvents",
              "parameters": [
                {
                  "name": "enable",
                  "default": "true"
                }
              ],
              "description": "Manage events on the target which is external to this element"
            },
            {
              "kind": "method",
              "name": "getSelection",
              "description": "Selection normalizer"
            },
            {
              "kind": "method",
              "name": "getRange",
              "description": "Get a normalized range based on current selection"
            },
            {
              "kind": "method",
              "name": "targetKeyDownMonitor",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "process in the autocompletes handling of this"
            },
            {
              "kind": "method",
              "name": "targetKeyMonitor",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Monitor keys in the target to look for a tigger key so we can start paying attention"
            },
            {
              "kind": "method",
              "name": "setTargetValue",
              "parameters": [
                {
                  "name": "value"
                }
              ],
              "description": "Set target correctly between inputs and contenteditable"
            },
            {
              "kind": "method",
              "name": "getTargetValue",
              "description": "Resolve target value between contenteditable and native inputs"
            },
            {
              "kind": "field",
              "name": "windowControllers",
              "default": "new AbortController()"
            },
            {
              "kind": "field",
              "name": "haxUIElement",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "target",
              "privacy": "public",
              "type": {
                "text": "null"
              },
              "default": "null",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "triggers",
              "privacy": "public",
              "type": {
                "text": "object"
              },
              "default": "{}",
              "attribute": "triggers"
            },
            {
              "kind": "field",
              "name": "value",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "attribute": "value"
            }
          ],
          "attributes": [
            {
              "name": "target",
              "type": {
                "text": "null"
              },
              "default": "null",
              "fieldName": "target"
            },
            {
              "name": "triggers",
              "type": {
                "text": "object"
              },
              "default": "{}",
              "fieldName": "triggers"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SimpleAutocompleteTextTrigger",
          "declaration": {
            "name": "SimpleAutocompleteTextTrigger",
            "module": "lib/simple-autocomplete-text-trigger.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "SimpleAutocompleteTextTrigger",
            "module": "lib/simple-autocomplete-text-trigger.js"
          }
        }
      ]
    }
  ]
}
