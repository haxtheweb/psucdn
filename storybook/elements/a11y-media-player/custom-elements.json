{
  "version": 1,
  "tags": [
    {
      "name": "a11y-media-player",
      "description": "`a11y-media-player`\nan accessible video player\n\n### Styling\n`<a11y-media-player>` provides the following basic custom properties\nfor styling:\n\n#### Basic Styling\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-media-color` | default text color | `--simple-colors-default-theme-grey-11`\n`--a11y-media-bg-color` | default background color | `--simple-colors-default-theme-grey-2`\n`--a11y-media-border-color` | default border color | `--simple-colors-default-theme-grey-3`\n`--a11y-media-hover-color` | text color when hovering | `--simple-colors-default-theme-grey-12`\n`--a11y-media-hover-bg-color` | background color when hovering | `--simple-colors-default-theme-grey-2`\n`--a11y-media-accent-color` | accent color | `--simple-colors-default-theme-accent-9`\n`--a11y-media-faded-accent-color` | accent color when faded | `--simple-colors-default-theme-accent-8`\n`--a11y-media-disabled-color` | color for disabled items | `--simple-colors-default-theme-grey-5`\n`--a11y-media-transcript-color` | default text color of transcript | `--simple-colors-default-theme-grey-7`\n`--a11y-media-transcript-bg-color` | default background color of transcript | `--simple-colors-default-theme-grey-1`\n`--a11y-media-transcript-accent-color` | default accent color of transcript | `--simple-colors-default-theme-accent-8`\n`--a11y-media-transcript-faded-accent-color` | accent color of transcript, faded | `--simple-colors-default-theme-accent-10`\n`--a11y-media-transcript-cue-color` | text color of transcript cue | `--simple-colors-fixed-theme-grey-12`\n`--a11y-media-transcript-cue-bg-color` | background color of transcript cue  | `--simple-colors-fixed-theme-grey-1`\n`--a11y-media-transcript-active-cue-color` | text color of active transcript cue  | `--simple-colors-fixed-theme-grey-12`\n`--a11y-media-transcript-active-cue-bg-color` | background color of active transcript cue  | `--simple-colors-fixed-theme-accent-1`\n`--a11y-media-transcript-focused-cue-color` | text color of focused transcript cue  | `--simple-colors-fixed-theme-grey-12`\n`--a11y-media-transcript-focused-cue-bg-color` | background color of focused transcript cue  | `--simple-colors-fixed-theme-grey-2`\n`--a11y-media-transcript-match-color` | text color of matched term in transcript search  | `--simple-colors-fixed-theme-grey-1`\n`--a11y-media-transcript-match-bg-color` | background color of matched term in transcript search | `--simple-colors-fixed-theme-accent-10`\n`--a11y-media-transcript-match-border-color` | border color of matched term in transcript search | `--simple-colors-fixed-theme-accent-12`\n\n#### Controls\nCustom property | Description | Default \n----------------|-------------|----------\n`--a11y-media-scrollbar-width` | default width of scrollbars | `5px`\n`--a11y-media-controls-font-family` | font-family of controls\n\n#### Buttons\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-media-button-color` | button text color | `--a11y-media-color`\n`--a11y-media-button-bg-color` | button background color | `--a11y-media-bg-color`\n`--a11y-media-button-hover-color` | button text color when hovering | `--a11y-media-accent-color`\n`--a11y-media-button-hover-bg-color` | button background color when hovering | `--a11y-media-hover-bg-color`\n`--a11y-media-button-disabled-color` | button text color when disabled | `--a11y-media-disabled-color`\n`--a11y-media-button-toggle-color` | button text color when toggled | `--a11y-media-faded-accent-color`\n\n#### Sliders\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-range-input-active-color` | slider color when active | `--a11y-media-accent-color`\n`--simple-range-input-secondary-color` | slider color for buffering | `--a11y-media-faded-accent-color`\n`--simple-range-input-pin-color` | slider pin color | `--a11y-media-bg-color`\n`--simple-range-input-pin-start-color` | slider pin color in start position | `--a11y-media-bg-color`\n`--simple-range-input-pin-end-color` | slider pin color in end position | `--a11y-media-bg-color`\n`--simple-range-input-knob-color` | slider knob color | `--a11y-media-accent-color`\n`--simple-range-input-knob-start-color` | slider knob color in start position | `--a11y-media-accent-color`\n`--simple-range-input-knob-end-color` | slider knob color in end position | `--a11y-media-bg-accent-color`\n`--simple-range-input-knob-border-color` | slider knob border color | `--a11y-media-accent-color`\n`--simple-range-input-knob-start-border-color` | slider knob border color in start position | `--a11y-media-bg-color`\n`--simple-range-input-knob-end-border-color` | slider knob border color in end position | `--a11y-media-bg-color`\n\n#### Settings Menu\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-media-settings-menu-color` | settings menu text color | `--a11y-media-color`\n`--a11y-media-settings-menu-bg-color` | settings menu background color | `--a11y-media-bg-color`\n`--a11y-media-settings-menu-hover-color` | settings menu text color when hovering | `--a11y-media-hover-color`\n`--a11y-media-settings-menu-hover-bg-color` | settings menu background color when hovering | `--a11y-media-hover-bg-color`\n\n#### Link Sharing Toast\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-toast-color` | toast text color | `--a11y-media-color`\n`--simple-toast-background-color` | toast background color | `--a11y-media-bg-color`\n\nEvents:\n\n  * `mute-changed` {`CustomEvent<this>`} - Fires when closed caption is toggled\n\n  * `transcript-downloaded` {`CustomEvent<this>`} - Fires when transcript is downloaded\n\n  * `transcript-printed` {`CustomEvent<this>`} - Fires when transcript is printed\n\n  * `play` {`CustomEvent<this>`} - Fires when media plays\n\n  * `a11y-player-playing` {`CustomEvent<this>`} - DEPRECATED: Fires when media plays\n\n  * `pause` {`CustomEvent<this>`} - Fires when media pauses\n\n  * `stop` {`CustomEvent<this>`} - Fires when media stops\n\n  * `restart` {`CustomEvent<this>`} - Fires when media retarts\n\n  * `backward` {`CustomEvent<this>`} - Fires when media moves backward\n\n  * `forward` {`CustomEvent<this>`} - Fires when media moves forward\n\n  * `seek` {`CustomEvent<this>`} - Fires when media seeks\n\n  * `playback-rate-changed` {`CustomEvent<this>`} - Fires when video playback rate changes\n\n  * `volume-changed` {`CustomEvent<this>`} - Fires when video volume changes\n\n  * `cc-toggle` {`CustomEvent<this>`} - Fires when closed caption is toggled\n\n  * `fullscreen-toggle` {`CustomEvent<this>`} - Fires when fullscreen is toggled\n\n  * `loop-toggle` {`CustomEvent<this>`} - Fires when looping is toggled\n\n  * `play-toggle` {`CustomEvent<this>`} - Fires when play/pause is toggled\n\n  * `muted-toggle` {`CustomEvent<this>`} - Fires when mute is toggled\n\n  * `settings-toggled` {`CustomEvent<this>`} - Fires when video's settings menu is toggled\n\n  * `player-sticky` {`CustomEvent<this>`} - Fires when video's sticky behavior is toggled\n\n  * `transcript-toggle` {`CustomEvent<this>`} - Fires when transcript toggles\n\n  * `responsive-element` {`CustomEvent<{ element: this; attribute: string; relativeToParent: boolean; sm: number; md: number; lg: number; xl: number; }>`} - Fires player needs the size of parent container to add responsive styling\n\n  * `a11y-player` {`CustomEvent<this>`} - Fires when a new player is ready for a11y-media-state-manager\n\nAttributes:\n\n  * `crossorigin` {`string`} - crossorigin attribute for <video> and <audio> tags\n\n  * `height` {`string`} - The height of the media player.\n\n  * `source` {`string`} - \n\n  * `thumbnail-src` {`string`} - Source of optional thumbnail image\nHighly recommended for Safari.\n\n  * `__preloadedDuration` {`number`} - temporarily duration in seconds until fully loaded\n\n  * `currentTime` {`number`} - current time for video playback\n\n  * `__playerReady` {`boolean`} - \n\n  * `audio-only` {`boolean`} - Is this an audio file?\n\n  * `autoplay` {`boolean`} - autoplay is an option,\nbut generally not recommended for a11y\n\n  * `allow-concurrent` {`boolean`} - Allow this media to play concurrently with other a11y-media-players?\nDefault is to pause this a11y-media-player when other a11y-media-player starts playing.\n\n  * `cc` {`boolean`} - show closed captions\n\n  * `dark-transcript` {`boolean`} - Use dark theme on transcript? Default is false, even when player is dark.\n\n  * `disable-fullscreen` {`boolean`} - disable fullscreen option\n\n  * `disable-interactive` {`boolean`} - disable interactive mode that makes the transcript clickable\n\n  * `disable-print-button` {`boolean`} - disable transcript print button\n\n  * `disable-search` {`boolean`} - disable transcript search feature\n\n  * `disable-scroll` {`boolean`} - disable autoscrolling as transcript plays\n\n  * `disable-seek` {`boolean`} - disables seeking\n\n  * `hide-elapsed-time` {`boolean`} - Hide elapsed time?\n\n  * `hide-timestamps` {`boolean`} - show cue's start and end time\n\n  * `hide-transcript` {`boolean`} - initially hide the transcript?\n\n  * `id` {`string`} - initially hide the transcript?\n\n  * `lang` {`string`} - Language\n\n  * `learning-mode` {`boolean`} - Learning mode\n\n  * `linkable` {`boolean`} - has link button\n\n  * `localization` - custom localization settings\n\n  * `loop` {`boolean`} - Loop the video?\n\n  * `media-title` {`string`} - optional title of media (shows when printed)\n\n  * `media-lang` {`string`} - Dash.js manifest source?\n/\n\"manifest\": {\n\"attribute\": \"manifest\",\n\"type\": String\n},\n/**\nthe language of the media (if different from user interface language)\n\n  * `muted` {`boolean`} - Is audio muted?\n\n  * `hide-youtube-link` {`boolean`} - Open on YouTube button\n\n  * `preload` {`string`} - Preload `none`, `metadata`, or `auto`.\n\n  * `playback-rate` {`number`} - Playback rate where `1` is normal speed, `0.`5 is half-speed, and `2` is double speed\n\n  * `search` - the search tool for the transcript\n\n  * `stand-alone` {`boolean`} - Is stand-alone player (without transcript)?\n\n  * `responsive-size` {`string`} - Size of the a11y media element for responsive styling\n\n  * `captions-track` - the selected track\n\n  * `transcript-track` - the selected track for the transcript\n\n  * `sources` {`any[]`} - DEPRECATED: array ouf sources\n\n  * `stacked-layout` {`boolean`} - stacked layout instead of side-by-side?\n\n  * `sticky` {`boolean`} - Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n\n  * `sticky-corner` {`string`} - When playing but scrolled off screen, to which corner does it \"stick\":\ntop-left, top-right, bottom-left, bottom-right, or none?\nDefault is \"top-right\". \"None\" disables stickiness.\n\n  * `tracks` {`any[]`} - DEPRECATED: array of tracks.\n\n  * `volume` {`number`} - Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n\n  * `width` {`string`} - The width of the media player.\n\n  * `youtube-id` {`string`} - the id for the video\n\n  * `__cues` {`any[]`} - array of cues provided to readOnly `get cues`\n\n  * `__currentTime` {`number`} - current playback in seconds\n\n  * `__captionsOption` {`number`} - the index of the selected closed captions\n\n  * `__loadedTracks` - media captions/transcript tracks array  provided to readOnly `get loadedTracks`\n\n  * `__playing` {`boolean`} - media playing status readOnly `get playing`\n\n  * `__settingsOpen` {`boolean`} - Is settings menu toggle open?\n\n  * `__transcriptOption` {`number`} - the index of the selected transcript\n\n  * `fullscreen` {`boolean`} - \n\n  * `fullscreen-enabled` {`boolean`} - \n\n  * `is-safari` {`boolean`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `crossorigin` {`string`} - crossorigin attribute for <video> and <audio> tags\n\n  * `height` {`string`} - The height of the media player.\n\n  * `source` {`string`} - \n\n  * `thumbnailSrc` {`string`} - Source of optional thumbnail image\nHighly recommended for Safari.\n\n  * `__preloadedDuration` {`number`} - temporarily duration in seconds until fully loaded\n\n  * `anchor` {`number`} - gets anchors from page and uses their timecodes\n\n  * `aspect` {`number`} - the aspect ratio of the media, or if unknown, `16/9`\n\n  * `audioNoThumb` {`boolean`} - returns true if an attribute is set to a value\n\n  * `buffered` {`number`} - returns buffered media\n\n  * `captionCues` {`any[]`} - gets caption cues that should be visible for custom captions\n\n  * `captionsPicker` - gets options for captions picker\n\n  * `captionsTrackKey` {`number`} - `key` of selected textTrack based on `captionsTrack` and `cc` values\n\n  * `cues` - returns cues array\n\n  * `duration` {`number`} - returns media duration\n\n  * `flexLayout` {`boolean`} - determines if player is in flex-layout mode\n\n  * `fullFlex` {`boolean`} - determines if parent is wide enough for full flex-layout mode\n\n  * `fullscreenButton` {`boolean`} - whether or not the fullscreen mode is be disabled\n\n  * `hasCaptions` {`boolean`} - whether the media has any tracks\n\n  * `isYoutube` {`boolean`} - whether media is YouTube\n\n  * `loadedTracks` - HTML `audio` or `video` tag where textTracks, if any, can be found\n\n  * `localizationDefaults` - object that contains default localization\n\n  * `media` - media used for playback\n\n  * `mediaCaption` {`string`} - gets media caption\n\n  * `mediaEnd` {`number`} - gets media media time if set\n\n  * `mediaMaxWidth` {`string`} - `style` for `#player-and-controls`\n\n  * `mediaSeekable` {`boolean`} - whether media has a seekable time range\n\n  * `mediaStart` {`number`} - gets media start time\n\n  * `playing` {`boolean`} - whether media is currently playing\n\n  * `playerStyle` {`string`} - `style` for `#player`\n\n  * `poster` {`string`} - `poster`  image for video\n\n  * `printCaption` {`string`} - gets print caption\n\n  * `currentTime` {`number`} - current time for video playback\n\n  * `shareLink` {`string`} - gets the link for sharing the video at a specific timecode\n\n  * `showCustomCaptions` {`boolean`} - Show custom CC (for audio and YouTube)?\n\n  * `status` {`string`} - gets playback status text\n\n  * `stickyMode` {`boolean`} - Show custom CC (for audio and YouTube)?\n\n  * `t` {`any[]`} - gets initial timecode parameter\n\n  * `transcriptCues` {`any[]`} - gets transcript cues that should be visible\n\n  * `transcriptPicker` - gets options for transcript picker\n\n  * `transcriptTrackKey` {`number`} - `key` of selected textTrack based on `transcriptTrack` and `hide-transcript` values\n\n  * `videoData` - \n\n  * `videoId` - \n\n  * `youtube` - youtube embed element\n\n  * `__playerReady` {`boolean`} - \n\n  * `audioOnly` {`boolean`} - Is this an audio file?\n\n  * `autoplay` {`boolean`} - autoplay is an option,\nbut generally not recommended for a11y\n\n  * `allowConcurrent` {`boolean`} - Allow this media to play concurrently with other a11y-media-players?\nDefault is to pause this a11y-media-player when other a11y-media-player starts playing.\n\n  * `cc` {`boolean`} - show closed captions\n\n  * `darkTranscript` {`boolean`} - Use dark theme on transcript? Default is false, even when player is dark.\n\n  * `disableFullscreen` {`boolean`} - disable fullscreen option\n\n  * `disableInteractive` {`boolean`} - disable interactive mode that makes the transcript clickable\n\n  * `disablePrintButton` {`boolean`} - disable transcript print button\n\n  * `disableSearch` {`boolean`} - disable transcript search feature\n\n  * `disableScroll` {`boolean`} - disable autoscrolling as transcript plays\n\n  * `disableSeek` {`boolean`} - disables seeking\n\n  * `hideElapsedTime` {`boolean`} - Hide elapsed time?\n\n  * `hideTimestamps` {`boolean`} - show cue's start and end time\n\n  * `hideTranscript` {`boolean`} - initially hide the transcript?\n\n  * `id` {`string`} - initially hide the transcript?\n\n  * `lang` {`string`} - Language\n\n  * `learningMode` {`boolean`} - Learning mode\n\n  * `linkable` {`boolean`} - has link button\n\n  * `localization` - custom localization settings\n\n  * `loop` {`boolean`} - Loop the video?\n\n  * `mediaTitle` {`string`} - optional title of media (shows when printed)\n\n  * `mediaLang` {`string`} - Dash.js manifest source?\n/\n\"manifest\": {\n\"attribute\": \"manifest\",\n\"type\": String\n},\n/**\nthe language of the media (if different from user interface language)\n\n  * `muted` {`boolean`} - Is audio muted?\n\n  * `hideYoutubeLink` {`boolean`} - Open on YouTube button\n\n  * `preload` {`string`} - Preload `none`, `metadata`, or `auto`.\n\n  * `playbackRate` {`number`} - Playback rate where `1` is normal speed, `0.`5 is half-speed, and `2` is double speed\n\n  * `search` - the search tool for the transcript\n\n  * `standAlone` {`boolean`} - Is stand-alone player (without transcript)?\n\n  * `responsiveSize` {`string`} - Size of the a11y media element for responsive styling\n\n  * `captionsTrack` - the selected track\n\n  * `transcriptTrack` - the selected track for the transcript\n\n  * `sources` {`any[]`} - DEPRECATED: array ouf sources\n\n  * `stackedLayout` {`boolean`} - stacked layout instead of side-by-side?\n\n  * `sticky` {`boolean`} - Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n\n  * `stickyCorner` {`string`} - When playing but scrolled off screen, to which corner does it \"stick\":\ntop-left, top-right, bottom-left, bottom-right, or none?\nDefault is \"top-right\". \"None\" disables stickiness.\n\n  * `tracks` {`any[]`} - DEPRECATED: array of tracks.\n\n  * `volume` {`number`} - Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n\n  * `width` {`string`} - The width of the media player.\n\n  * `youtubeId` {`string`} - the id for the video\n\n  * `__cues` {`any[]`} - array of cues provided to readOnly `get cues`\n\n  * `__currentTime` {`number`} - current playback in seconds\n\n  * `__captionsOption` {`number`} - the index of the selected closed captions\n\n  * `__loadedTracks` - media captions/transcript tracks array  provided to readOnly `get loadedTracks`\n\n  * `__playing` {`boolean`} - media playing status readOnly `get playing`\n\n  * `__settingsOpen` {`boolean`} - Is settings menu toggle open?\n\n  * `__transcriptOption` {`number`} - the index of the selected transcript\n\n  * `fullscreenTarget` - element to make fullscreen, can be overidden\n\n  * `fullscreen` {`boolean`} - \n\n  * `fullscreenEnabled` {`boolean`} - \n\n  * `onfullscreenchange` - \n\n  * `isSafari` {`boolean`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "crossorigin",
          "description": "`crossorigin` {`string`} - crossorigin attribute for <video> and <audio> tags\n\nProperty: crossorigin"
        },
        {
          "name": "height",
          "description": "`height` {`string`} - The height of the media player.\n\nProperty: height"
        },
        {
          "name": "source",
          "description": "`source` {`string`} - \n\nProperty: source"
        },
        {
          "name": "thumbnail-src",
          "description": "`thumbnail-src` {`string`} - Source of optional thumbnail image\nHighly recommended for Safari.\n\nProperty: thumbnailSrc"
        },
        {
          "name": "__preloadedDuration",
          "description": "`__preloadedDuration` {`number`} - temporarily duration in seconds until fully loaded\n\nProperty: __preloadedDuration"
        },
        {
          "name": "currentTime",
          "description": "`currentTime` {`number`} - current time for video playback\n\nProperty: currentTime"
        },
        {
          "name": "__playerReady",
          "description": "`__playerReady` {`boolean`} - \n\nProperty: __playerReady\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "audio-only",
          "description": "`audio-only` {`boolean`} - Is this an audio file?\n\nProperty: audioOnly\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "autoplay",
          "description": "`autoplay` {`boolean`} - autoplay is an option,\nbut generally not recommended for a11y\n\nProperty: autoplay\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "allow-concurrent",
          "description": "`allow-concurrent` {`boolean`} - Allow this media to play concurrently with other a11y-media-players?\nDefault is to pause this a11y-media-player when other a11y-media-player starts playing.\n\nProperty: allowConcurrent\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "cc",
          "description": "`cc` {`boolean`} - show closed captions\n\nProperty: cc\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "dark-transcript",
          "description": "`dark-transcript` {`boolean`} - Use dark theme on transcript? Default is false, even when player is dark.\n\nProperty: darkTranscript\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disable-fullscreen",
          "description": "`disable-fullscreen` {`boolean`} - disable fullscreen option\n\nProperty: disableFullscreen\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disable-interactive",
          "description": "`disable-interactive` {`boolean`} - disable interactive mode that makes the transcript clickable\n\nProperty: disableInteractive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disable-print-button",
          "description": "`disable-print-button` {`boolean`} - disable transcript print button\n\nProperty: disablePrintButton\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disable-search",
          "description": "`disable-search` {`boolean`} - disable transcript search feature\n\nProperty: disableSearch\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disable-scroll",
          "description": "`disable-scroll` {`boolean`} - disable autoscrolling as transcript plays\n\nProperty: disableScroll\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disable-seek",
          "description": "`disable-seek` {`boolean`} - disables seeking\n\nProperty: disableSeek\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-elapsed-time",
          "description": "`hide-elapsed-time` {`boolean`} - Hide elapsed time?\n\nProperty: hideElapsedTime\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-timestamps",
          "description": "`hide-timestamps` {`boolean`} - show cue's start and end time\n\nProperty: hideTimestamps\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-transcript",
          "description": "`hide-transcript` {`boolean`} - initially hide the transcript?\n\nProperty: hideTranscript\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "`id` {`string`} - initially hide the transcript?\n\nProperty: id\n\nDefault: null"
        },
        {
          "name": "lang",
          "description": "`lang` {`string`} - Language\n\nProperty: lang\n\nDefault: en"
        },
        {
          "name": "learning-mode",
          "description": "`learning-mode` {`boolean`} - Learning mode\n\nProperty: learningMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "linkable",
          "description": "`linkable` {`boolean`} - has link button\n\nProperty: linkable\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "localization",
          "description": "`localization` - custom localization settings\n\nProperty: localization\n\nDefault: [object Object]"
        },
        {
          "name": "loop",
          "description": "`loop` {`boolean`} - Loop the video?\n\nProperty: loop\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "media-title",
          "description": "`media-title` {`string`} - optional title of media (shows when printed)\n\nProperty: mediaTitle\n\nDefault: "
        },
        {
          "name": "media-lang",
          "description": "`media-lang` {`string`} - Dash.js manifest source?\n/\n\"manifest\": {\n\"attribute\": \"manifest\",\n\"type\": String\n},\n/**\nthe language of the media (if different from user interface language)\n\nProperty: mediaLang\n\nDefault: en"
        },
        {
          "name": "muted",
          "description": "`muted` {`boolean`} - Is audio muted?\n\nProperty: muted\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-youtube-link",
          "description": "`hide-youtube-link` {`boolean`} - Open on YouTube button\n\nProperty: hideYoutubeLink\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "preload",
          "description": "`preload` {`string`} - Preload `none`, `metadata`, or `auto`.\n\nProperty: preload\n\nDefault: metadata"
        },
        {
          "name": "playback-rate",
          "description": "`playback-rate` {`number`} - Playback rate where `1` is normal speed, `0.`5 is half-speed, and `2` is double speed\n\nProperty: playbackRate\n\nDefault: 1"
        },
        {
          "name": "search",
          "description": "`search` - the search tool for the transcript\n\nProperty: search\n\nDefault: null"
        },
        {
          "name": "stand-alone",
          "description": "`stand-alone` {`boolean`} - Is stand-alone player (without transcript)?\n\nProperty: standAlone\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - Size of the a11y media element for responsive styling\n\nProperty: responsiveSize\n\nDefault: sm"
        },
        {
          "name": "captions-track",
          "description": "`captions-track` - the selected track\n\nProperty: captionsTrack\n\nDefault: null"
        },
        {
          "name": "transcript-track",
          "description": "`transcript-track` - the selected track for the transcript\n\nProperty: transcriptTrack\n\nDefault: null"
        },
        {
          "name": "sources",
          "description": "`sources` {`any[]`} - DEPRECATED: array ouf sources\n\nProperty: sources\n\nDefault: "
        },
        {
          "name": "stacked-layout",
          "description": "`stacked-layout` {`boolean`} - stacked layout instead of side-by-side?\n\nProperty: stackedLayout\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "sticky",
          "description": "`sticky` {`boolean`} - Is the video currently sticky, i.e. it is fixed to the corner when playing but scrolled off screen?\n\nProperty: sticky\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "sticky-corner",
          "description": "`sticky-corner` {`string`} - When playing but scrolled off screen, to which corner does it \"stick\":\ntop-left, top-right, bottom-left, bottom-right, or none?\nDefault is \"top-right\". \"None\" disables stickiness.\n\nProperty: stickyCorner\n\nDefault: top-right"
        },
        {
          "name": "tracks",
          "description": "`tracks` {`any[]`} - DEPRECATED: array of tracks.\n\nProperty: tracks\n\nDefault: "
        },
        {
          "name": "volume",
          "description": "`volume` {`number`} - Range is 0 to 100. Default should not be loud enough to overpower screen readers.\n\nProperty: volume\n\nDefault: 70"
        },
        {
          "name": "width",
          "description": "`width` {`string`} - The width of the media player.\n\nProperty: width\n\nDefault: null"
        },
        {
          "name": "youtube-id",
          "description": "`youtube-id` {`string`} - the id for the video\n\nProperty: youtubeId\n\nDefault: null"
        },
        {
          "name": "__cues",
          "description": "`__cues` {`any[]`} - array of cues provided to readOnly `get cues`\n\nProperty: __cues\n\nDefault: "
        },
        {
          "name": "__currentTime",
          "description": "`__currentTime` {`number`} - current playback in seconds\n\nProperty: __currentTime\n\nDefault: 0"
        },
        {
          "name": "__captionsOption",
          "description": "`__captionsOption` {`number`} - the index of the selected closed captions\n\nProperty: __captionsOption\n\nDefault: -1"
        },
        {
          "name": "__loadedTracks",
          "description": "`__loadedTracks` - media captions/transcript tracks array  provided to readOnly `get loadedTracks`\n\nProperty: __loadedTracks\n\nDefault: null"
        },
        {
          "name": "__playing",
          "description": "`__playing` {`boolean`} - media playing status readOnly `get playing`\n\nProperty: __playing\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__settingsOpen",
          "description": "`__settingsOpen` {`boolean`} - Is settings menu toggle open?\n\nProperty: __settingsOpen\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__transcriptOption",
          "description": "`__transcriptOption` {`number`} - the index of the selected transcript\n\nProperty: __transcriptOption\n\nDefault: -1"
        },
        {
          "name": "fullscreen",
          "description": "`fullscreen` {`boolean`} - \n\nProperty: fullscreen\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "fullscreen-enabled",
          "description": "`fullscreen-enabled` {`boolean`} - \n\nProperty: fullscreenEnabled\n\nDefault: fullscreenEnabled",
          "valueSet": "v"
        },
        {
          "name": "is-safari",
          "description": "`is-safari` {`boolean`} - \n\nProperty: isSafari",
          "valueSet": "v"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onmute-changed",
          "description": "`mute-changed` {`CustomEvent<this>`} - Fires when closed caption is toggled"
        },
        {
          "name": "ontranscript-downloaded",
          "description": "`transcript-downloaded` {`CustomEvent<this>`} - Fires when transcript is downloaded"
        },
        {
          "name": "ontranscript-printed",
          "description": "`transcript-printed` {`CustomEvent<this>`} - Fires when transcript is printed"
        },
        {
          "name": "onplay",
          "description": "`play` {`CustomEvent<this>`} - Fires when media plays"
        },
        {
          "name": "ona11y-player-playing",
          "description": "`a11y-player-playing` {`CustomEvent<this>`} - DEPRECATED: Fires when media plays"
        },
        {
          "name": "onpause",
          "description": "`pause` {`CustomEvent<this>`} - Fires when media pauses"
        },
        {
          "name": "onstop",
          "description": "`stop` {`CustomEvent<this>`} - Fires when media stops"
        },
        {
          "name": "onrestart",
          "description": "`restart` {`CustomEvent<this>`} - Fires when media retarts"
        },
        {
          "name": "onbackward",
          "description": "`backward` {`CustomEvent<this>`} - Fires when media moves backward"
        },
        {
          "name": "onforward",
          "description": "`forward` {`CustomEvent<this>`} - Fires when media moves forward"
        },
        {
          "name": "onseek",
          "description": "`seek` {`CustomEvent<this>`} - Fires when media seeks"
        },
        {
          "name": "onplayback-rate-changed",
          "description": "`playback-rate-changed` {`CustomEvent<this>`} - Fires when video playback rate changes"
        },
        {
          "name": "onvolume-changed",
          "description": "`volume-changed` {`CustomEvent<this>`} - Fires when video volume changes"
        },
        {
          "name": "oncc-toggle",
          "description": "`cc-toggle` {`CustomEvent<this>`} - Fires when closed caption is toggled"
        },
        {
          "name": "onfullscreen-toggle",
          "description": "`fullscreen-toggle` {`CustomEvent<this>`} - Fires when fullscreen is toggled"
        },
        {
          "name": "onloop-toggle",
          "description": "`loop-toggle` {`CustomEvent<this>`} - Fires when looping is toggled"
        },
        {
          "name": "onplay-toggle",
          "description": "`play-toggle` {`CustomEvent<this>`} - Fires when play/pause is toggled"
        },
        {
          "name": "onmuted-toggle",
          "description": "`muted-toggle` {`CustomEvent<this>`} - Fires when mute is toggled"
        },
        {
          "name": "onsettings-toggled",
          "description": "`settings-toggled` {`CustomEvent<this>`} - Fires when video's settings menu is toggled"
        },
        {
          "name": "onplayer-sticky",
          "description": "`player-sticky` {`CustomEvent<this>`} - Fires when video's sticky behavior is toggled"
        },
        {
          "name": "ontranscript-toggle",
          "description": "`transcript-toggle` {`CustomEvent<this>`} - Fires when transcript toggles"
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ element: this; attribute: string; relativeToParent: boolean; sm: number; md: number; lg: number; xl: number; }>`} - Fires player needs the size of parent container to add responsive styling"
        },
        {
          "name": "ona11y-player",
          "description": "`a11y-player` {`CustomEvent<this>`} - Fires when a new player is ready for a11y-media-state-manager"
        }
      ]
    },
    {
      "name": "a11y-media-button",
      "description": "`a11y-media-button`\na button used in a11y-media-controls and a11y-media-transcript-controls.\n\nEvents:\n\n  * `button-click` {`CustomEvent<this>`} - Fires when button is clicked\n\nAttributes:\n\n  * `action` {`string`} - is button action to send as an event\n\n  * `icon` {`string`} - simple-icon type\n\n  * `label` {`string`} - button label\n\n  * `accent-color` {`string`} - \n\n  * `dark` {`boolean`} - \n\n  * `controls` {`string`} - id of element button controls\n\n  * `disabled` {`boolean`} - Is it disabled?\n\n  * `toggle` {`boolean`} - Is it toggled on?\n\n  * `tooltip-position` {`string`} - Is it disabled?\n\nProperties:\n\n  * `action` {`string`} - is button action to send as an event\n\n  * `icon` {`string`} - simple-icon type\n\n  * `label` {`string`} - button label\n\n  * `accentColor` {`string`} - \n\n  * `dark` {`boolean`} - \n\n  * `controls` {`string`} - id of element button controls\n\n  * `disabled` {`boolean`} - Is it disabled?\n\n  * `toggle` {`boolean`} - Is it toggled on?\n\n  * `tooltipPosition` {`string`} - Is it disabled?",
      "attributes": [
        {
          "name": "action",
          "description": "`action` {`string`} - is button action to send as an event\n\nProperty: action"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - simple-icon type\n\nProperty: icon"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - button label\n\nProperty: label"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - \n\nProperty: accentColor\n\nDefault: red"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - \n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "controls",
          "description": "`controls` {`string`} - id of element button controls\n\nProperty: controls\n\nDefault: video"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Is it disabled?\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "toggle",
          "description": "`toggle` {`boolean`} - Is it toggled on?\n\nProperty: toggle\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "tooltip-position",
          "description": "`tooltip-position` {`string`} - Is it disabled?\n\nProperty: tooltipPosition\n\nDefault: bottom"
        },
        {
          "name": "onbutton-click",
          "description": "`button-click` {`CustomEvent<this>`} - Fires when button is clicked"
        }
      ]
    },
    {
      "name": "a11y-media-play-button",
      "description": "`a11y-media-play-button`\na giant play button that overlays the media in a11y-media-player.\n```\nCustom styles:\n--a11y-play-button-bg-color: overlay background color, default is #000000\n--a11y-play-button-focus-bg-color: overlay background color, default is --a11y-play-button-bg-color```\n\nEvents:\n\n  * `button-click` {`CustomEvent<this>`} - Fires when button is clicked\n\nAttributes:\n\n  * `youtube-id` {`string`} - \n\n  * `action` {`string`} - is button action to send as an event\n\n  * `icon` {`string`} - simple-icon type\n\n  * `label` {`string`} - button label\n\n  * `accent-color` {`string`} - \n\n  * `dark` {`boolean`} - \n\n  * `controls` {`string`} - id of element button controls\n\n  * `disabled` {`boolean`} - Is it disabled?\n\n  * `toggle` {`boolean`} - Is it toggled on?\n\n  * `tooltip-position` {`string`} - Is it disabled?\n\nProperties:\n\n  * `youtubeId` {`string`} - \n\n  * `action` {`string`} - is button action to send as an event\n\n  * `icon` {`string`} - simple-icon type\n\n  * `label` {`string`} - button label\n\n  * `accentColor` {`string`} - \n\n  * `dark` {`boolean`} - \n\n  * `controls` {`string`} - id of element button controls\n\n  * `disabled` {`boolean`} - Is it disabled?\n\n  * `toggle` {`boolean`} - Is it toggled on?\n\n  * `tooltipPosition` {`string`} - Is it disabled?",
      "attributes": [
        {
          "name": "youtube-id",
          "description": "`youtube-id` {`string`} - \n\nProperty: youtubeId\n\nDefault: null"
        },
        {
          "name": "action",
          "description": "`action` {`string`} - is button action to send as an event\n\nProperty: action"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - simple-icon type\n\nProperty: icon"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - button label\n\nProperty: label"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - \n\nProperty: accentColor\n\nDefault: red"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - \n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "controls",
          "description": "`controls` {`string`} - id of element button controls\n\nProperty: controls\n\nDefault: video"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - Is it disabled?\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "toggle",
          "description": "`toggle` {`boolean`} - Is it toggled on?\n\nProperty: toggle\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "tooltip-position",
          "description": "`tooltip-position` {`string`} - Is it disabled?\n\nProperty: tooltipPosition\n\nDefault: bottom"
        },
        {
          "name": "onbutton-click",
          "description": "`button-click` {`CustomEvent<this>`} - Fires when button is clicked"
        }
      ]
    },
    {
      "name": "a11y-media-state-manager",
      "description": "`a11y-media-state-manager`\nA utility that manages the state of multiple a11y-media-players on a single page.\n\nAttributes:\n\n  * `activePlayer` - Manages which player is currently active.\n\n  * `players` {`any[]`} - Stores an array of all the players on the page.\n\nProperties:\n\n  * `activePlayer` - Manages which player is currently active.\n\n  * `observer` - active player observer\n\n  * `windowControllers` - \n\n  * `players` {`any[]`} - Stores an array of all the players on the page.\n\n  * `__stickyManager` - \n\n  * `__fullscreenManager` - \n\n  * `__playerLoader` - ",
      "attributes": [
        {
          "name": "activePlayer",
          "description": "`activePlayer` - Manages which player is currently active.\n\nProperty: activePlayer"
        },
        {
          "name": "players",
          "description": "`players` {`any[]`} - Stores an array of all the players on the page.\n\nProperty: players\n\nDefault: "
        }
      ]
    },
    {
      "name": "a11y-media-transcript-cue",
      "description": "`a11y-media-transcript-cue`\na single cue in a11y-media-transcriptas static text or as an button that controls media.\n\nCustom styles:\n```--a11y-media-transcript-bg-color: background color of the transcript, default is #ffffff\n--a11y-media-transcript-text-color: color of the transcript text, default is #000000```\n   \nCustom styles for focused cue:\n```--a11y-media-transcript-focused-cue-text: color of the focused cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-focused-cue-bg: background color of the focused cue, default is --a11y-media-transcript-bg-color\n--a11y-media-transcript-focused-cue-weight: font-weight of the focused cue, default is bold```\n   \nCustom styles for active cue:\n```--a11y-media-transcript-active-cue-text: color of the active cue text, default is --a11y-media-transcript-text-color\n--a11y-media-transcript-active-cue-bg: background color of the active cue, default is #ccfffd\n--a11y-media-transcript-active-cue-weight: font-weight of the active cue, default is normal```\n\nEvents:\n\n  * `active-changed` {`CustomEvent<{ element: this; oldValue: any; value: true; }>`} - \n\nAttributes:\n\n  * `active` {`boolean`} - whether to hide the timestamps\n\n  * `disabled` {`boolean`} - whether to hide the timestamps\n\n  * `hide-timestamps` {`boolean`} - whether to hide the timestamps\n\n  * `start` {`string`} - cue start time\n\n  * `end` {`string`} - cue end time\n\nProperties:\n\n  * `active` {`boolean`} - whether to hide the timestamps\n\n  * `disabled` {`boolean`} - whether to hide the timestamps\n\n  * `hideTimestamps` {`boolean`} - whether to hide the timestamps\n\n  * `start` {`string`} - cue start time\n\n  * `end` {`string`} - cue end time",
      "attributes": [
        {
          "name": "active",
          "description": "`active` {`boolean`} - whether to hide the timestamps\n\nProperty: active\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - whether to hide the timestamps\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hide-timestamps",
          "description": "`hide-timestamps` {`boolean`} - whether to hide the timestamps\n\nProperty: hideTimestamps\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "start",
          "description": "`start` {`string`} - cue start time\n\nProperty: start\n\nDefault: "
        },
        {
          "name": "end",
          "description": "`end` {`string`} - cue end time\n\nProperty: end\n\nDefault: "
        },
        {
          "name": "onactive-changed",
          "description": "`active-changed` {`CustomEvent<{ element: this; oldValue: any; value: true; }>`} - "
        }
      ]
    },
    {
      "name": "a11y-media-youtube",
      "description": "`a11y-media-youtube`\nuses YouTubeAPI to create and control an embedded YouTube video.\n\nEvents:\n\n  * `mediastatechange` {`CustomEvent<any>`} - \n\n  * `loadedmetadata` {`CustomEvent<this>`} - \n\n  * `timeupdate` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `id` {`string`} - a11y-media-youtube unique id\n\n  * `t` {`number`} - youTube's unique identifier for the video\n\n  * `video-id` {`string`} - youTube's unique identifier for the video\n\n  * `autoplay` {`boolean`} - video loops back to start\n\n  * `height` {`string`} - height of the embedded video\n\n  * `loop` {`boolean`} - video loops back to start\n\n  * `playback-rate` {`number`} - video playback rate\n\n  * `preload` {`string`} - preload settings\n\n  * `muted` {`boolean`} - video muted\n\n  * `volume` {`number`} - volume between 0 and 100\n\n  * `width` {`string`} - width of the embedded video\n\n  * `__video` - video object\n\n  * `__yt` - youtube object\n\nProperties:\n\n  * `id` {`string`} - a11y-media-youtube unique id\n\n  * `t` {`number`} - youTube's unique identifier for the video\n\n  * `videoId` {`string`} - youTube's unique identifier for the video\n\n  * `api` - single instance of YouTube iframe script\n\n  * `buffered` {`number`} - returns buffered media\n\n  * `currentTime` {`number`} - elapsed time of video\n\n  * `duration` {`number`} - duration of video\n\n  * `paused` {`boolean`} - whether video playback is paused\n\n  * `seekable` - seekable range of video\n\n  * `autoplay` {`boolean`} - video loops back to start\n\n  * `height` {`string`} - height of the embedded video\n\n  * `loop` {`boolean`} - video loops back to start\n\n  * `playbackRate` {`number`} - video playback rate\n\n  * `preload` {`string`} - preload settings\n\n  * `muted` {`boolean`} - video muted\n\n  * `volume` {`number`} - volume between 0 and 100\n\n  * `width` {`string`} - width of the embedded video\n\n  * `__video` - video object\n\n  * `__yt` - youtube object",
      "attributes": [
        {
          "name": "id",
          "description": "`id` {`string`} - a11y-media-youtube unique id\n\nProperty: id"
        },
        {
          "name": "t",
          "description": "`t` {`number`} - youTube's unique identifier for the video\n\nProperty: t"
        },
        {
          "name": "video-id",
          "description": "`video-id` {`string`} - youTube's unique identifier for the video\n\nProperty: videoId"
        },
        {
          "name": "autoplay",
          "description": "`autoplay` {`boolean`} - video loops back to start\n\nProperty: autoplay\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "`height` {`string`} - height of the embedded video\n\nProperty: height\n\nDefault: 100%"
        },
        {
          "name": "loop",
          "description": "`loop` {`boolean`} - video loops back to start\n\nProperty: loop\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "playback-rate",
          "description": "`playback-rate` {`number`} - video playback rate\n\nProperty: playbackRate\n\nDefault: 1"
        },
        {
          "name": "preload",
          "description": "`preload` {`string`} - preload settings\n\nProperty: preload\n\nDefault: metadata"
        },
        {
          "name": "muted",
          "description": "`muted` {`boolean`} - video muted\n\nProperty: muted\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "volume",
          "description": "`volume` {`number`} - volume between 0 and 100\n\nProperty: volume\n\nDefault: 0.7"
        },
        {
          "name": "width",
          "description": "`width` {`string`} - width of the embedded video\n\nProperty: width\n\nDefault: 100%"
        },
        {
          "name": "__video",
          "description": "`__video` - video object\n\nProperty: __video\n\nDefault: null"
        },
        {
          "name": "__yt",
          "description": "`__yt` - youtube object\n\nProperty: __yt\n\nDefault: null"
        },
        {
          "name": "onmediastatechange",
          "description": "`mediastatechange` {`CustomEvent<any>`} - "
        },
        {
          "name": "onloadedmetadata",
          "description": "`loadedmetadata` {`CustomEvent<this>`} - "
        },
        {
          "name": "ontimeupdate",
          "description": "`timeupdate` {`CustomEvent<this>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}