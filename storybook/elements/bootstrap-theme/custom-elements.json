{
  "version": 1,
  "tags": [
    {
      "name": "bootstrap-theme",
      "description": "`bootstrap-theme`\n`Hax bootstrap themeing`\n\nEvents:\n\n  * `super-daemon-define-option` {`CustomEvent<{ title: any; icon: string; tags: string[]; value: { target: this; method: string; }; context: string; eventName: string; path: string; }>`} - \n\n  * `popstate` {`PopStateEvent`} - \n\n  * `content-container-changed` {`CustomEvent<any>`} - \n\n  * `is-logged-in-changed` {`CustomEvent<any>`} - \n\n  * `edit-mode-changed` {`CustomEvent<any>`} - \n\n  * `resize` {`Event`} - \n\n  * `haxcms-active-item-changed` {`CustomEvent<{}>`} - \n\n  * `responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - \n\n  * `responsive-element-deleted` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `searchTerm` {`string`} - \n\n  * `dark-mode` {`boolean`} - \n\n  * `hideUserStylesMenu` {`boolean`} - \n\n  * `font-size` {`number`} - \n\n  * `font-family` {`number`} - \n\n  * `color-theme` {`string`} - \n\n  * `is-horizontal` {`boolean`} - \n\n  * `is-flex` {`boolean`} - \n\n  * `menu-open` {`boolean`} - \n\n  * `t` - \n\n  * `hex-color` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `is-safari` {`boolean`} - \n\n  * `edit-mode` {`boolean`} - editting state for the page\n\n  * `is-logged-in` {`boolean`} - editting state for the page\n\n  * `responsive-width` {`number`} - width in pixels\n\n  * `responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disable-responsive` {`boolean`} - \n\nProperties:\n\n  * `_themeElements` {`never[]`} - \n\n  * `searchTerm` {`string`} - \n\n  * `__siteTitle` {`string`} - \n\n  * `___pageTitle` {`string`} - \n\n  * `__siteImage` {`string`} - \n\n  * `darkMode` {`boolean`} - \n\n  * `hideUserStylesMenu` {`boolean`} - \n\n  * `fontSize` {`number`} - \n\n  * `fontFamily` {`number`} - \n\n  * `colorTheme` {`string`} - \n\n  * `_bootstrapPath` {`string`} - \n\n  * `isHorizontal` {`boolean`} - \n\n  * `isFlex` {`boolean`} - \n\n  * `menuOpen` {`boolean`} - \n\n  * `HAXCMSI18NMixinBase` {`string`} - \n\n  * `t` - \n\n  * `hexColor` {`string`} - Class for the color\n\n  * `color` {`string`} - Color class work to apply\n\n  * `contentContainer` - DOM node that wraps the slot\n\n  * `_location` - location as object\n\n  * `isSafari` {`boolean`} - \n\n  * `editMode` {`boolean`} - editting state for the page\n\n  * `isLoggedIn` {`boolean`} - editting state for the page\n\n  * `windowControllers` - \n\n  * `HAXCMSThemeSettings` - \n\n  * `__disposer` - \n\n  * `HAXCMSThemeWiring` - \n\n  * `responsiveWidth` {`number`} - width in pixels\n\n  * `responsiveSize` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disableResponsive` {`boolean`} - ",
      "attributes": [
        {
          "name": "searchTerm",
          "description": "`searchTerm` {`string`} - \n\nProperty: searchTerm\n\nDefault: "
        },
        {
          "name": "dark-mode",
          "description": "`dark-mode` {`boolean`} - \n\nProperty: darkMode",
          "valueSet": "v"
        },
        {
          "name": "hideUserStylesMenu",
          "description": "`hideUserStylesMenu` {`boolean`} - \n\nProperty: hideUserStylesMenu\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "font-size",
          "description": "`font-size` {`number`} - \n\nProperty: fontSize\n\nDefault: 1"
        },
        {
          "name": "font-family",
          "description": "`font-family` {`number`} - \n\nProperty: fontFamily\n\nDefault: 0"
        },
        {
          "name": "color-theme",
          "description": "`color-theme` {`string`} - \n\nProperty: colorTheme\n\nDefault: 0"
        },
        {
          "name": "is-horizontal",
          "description": "`is-horizontal` {`boolean`} - \n\nProperty: isHorizontal\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "is-flex",
          "description": "`is-flex` {`boolean`} - \n\nProperty: isFlex\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "menu-open",
          "description": "`menu-open` {`boolean`} - \n\nProperty: menuOpen\n\nDefault: true",
          "valueSet": "v"
        },
        {
          "name": "t",
          "description": "`t` - \n\nProperty: t"
        },
        {
          "name": "hex-color",
          "description": "`hex-color` {`string`} - Class for the color\n\nProperty: hexColor"
        },
        {
          "name": "color",
          "description": "`color` {`string`} - Color class work to apply\n\nProperty: color"
        },
        {
          "name": "contentContainer",
          "description": "`contentContainer` - DOM node that wraps the slot\n\nProperty: contentContainer"
        },
        {
          "name": "_location",
          "description": "`_location` - location as object\n\nProperty: _location"
        },
        {
          "name": "is-safari",
          "description": "`is-safari` {`boolean`} - \n\nProperty: isSafari",
          "valueSet": "v"
        },
        {
          "name": "edit-mode",
          "description": "`edit-mode` {`boolean`} - editting state for the page\n\nProperty: editMode\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "is-logged-in",
          "description": "`is-logged-in` {`boolean`} - editting state for the page\n\nProperty: isLoggedIn\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "responsive-width",
          "description": "`responsive-width` {`number`} - width in pixels\n\nProperty: responsiveWidth"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - size for responsive styling: xs, sm, md, lg, xl\n\nProperty: responsiveSize\n\nDefault: xs"
        },
        {
          "name": "sm",
          "description": "`sm` {`number`} - Miniumum value for small breakpoint\n\nProperty: sm\n\nDefault: 600"
        },
        {
          "name": "md",
          "description": "`md` {`number`} - Miniumum value for medium breakpoint\n\nProperty: md\n\nDefault: 900"
        },
        {
          "name": "lg",
          "description": "`lg` {`number`} - Miniumum value for large breakpoint\n\nProperty: lg\n\nDefault: 1200"
        },
        {
          "name": "xl",
          "description": "`xl` {`number`} - Miniumum value for extra-large breakpoint\n\nProperty: xl\n\nDefault: 1500"
        },
        {
          "name": "disable-responsive",
          "description": "`disable-responsive` {`boolean`} - \n\nProperty: disableResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onsuper-daemon-define-option",
          "description": "`super-daemon-define-option` {`CustomEvent<{ title: any; icon: string; tags: string[]; value: { target: this; method: string; }; context: string; eventName: string; path: string; }>`} - "
        },
        {
          "name": "onpopstate",
          "description": "`popstate` {`PopStateEvent`} - "
        },
        {
          "name": "oncontent-container-changed",
          "description": "`content-container-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onis-logged-in-changed",
          "description": "`is-logged-in-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onedit-mode-changed",
          "description": "`edit-mode-changed` {`CustomEvent<any>`} - "
        },
        {
          "name": "onresize",
          "description": "`resize` {`Event`} - "
        },
        {
          "name": "onhaxcms-active-item-changed",
          "description": "`haxcms-active-item-changed` {`CustomEvent<{}>`} - "
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - "
        },
        {
          "name": "onresponsive-element-deleted",
          "description": "`responsive-element-deleted` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "bootstrap-breadcrumb",
      "description": "`bootstrap-breadcrumb`\n`Breadcrumb element for bootstrap theme`\n\nAttributes:\n\n  * `color-theme` {`string`} - \n\n  * `items` {`any[]`} - \n\n  * `homeItem` - \n\nProperties:\n\n  * `colorTheme` {`string`} - \n\n  * `items` {`any[]`} - \n\n  * `_activeItem` - \n\n  * `homeItem` - \n\n  * `_bootstrapPath` {`string`} - \n\n  * `__disposer` - ",
      "attributes": [
        {
          "name": "color-theme",
          "description": "`color-theme` {`string`} - \n\nProperty: colorTheme"
        },
        {
          "name": "items",
          "description": "`items` {`any[]`} - \n\nProperty: items\n\nDefault: "
        },
        {
          "name": "homeItem",
          "description": "`homeItem` - \n\nProperty: homeItem\n\nDefault: [object Object]"
        }
      ]
    },
    {
      "name": "bootstrap-footer",
      "description": "Attributes:\n\n  * `color-theme` {`string`} - \n\n  * `_forwardItem` - \n\n  * `_backwardItem` - \n\nProperties:\n\n  * `colorTheme` {`string`} - \n\n  * `_bootstrapPath` {`string`} - \n\n  * `_forwardItem` - \n\n  * `_backwardItem` - \n\n  * `_activeItemIndex` {`number`} - \n\n  * `_routerManifest` - \n\n  * `__disposer` - ",
      "attributes": [
        {
          "name": "color-theme",
          "description": "`color-theme` {`string`} - \n\nProperty: colorTheme"
        },
        {
          "name": "_forwardItem",
          "description": "`_forwardItem` - \n\nProperty: _forwardItem\n\nDefault: [object Object]"
        },
        {
          "name": "_backwardItem",
          "description": "`_backwardItem` - \n\nProperty: _backwardItem\n\nDefault: [object Object]"
        }
      ]
    },
    {
      "name": "bootstrap-search",
      "description": "Events:\n\n  * `search-changed` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `color-theme` {`string`} - \n\n  * `searchText` {`string`} - \n\nProperties:\n\n  * `colorTheme` {`string`} - \n\n  * `_bootstrapPath` {`string`} - \n\n  * `searchText` {`string`} - ",
      "attributes": [
        {
          "name": "color-theme",
          "description": "`color-theme` {`string`} - \n\nProperty: colorTheme"
        },
        {
          "name": "searchText",
          "description": "`searchText` {`string`} - \n\nProperty: searchText\n\nDefault: "
        },
        {
          "name": "onsearch-changed",
          "description": "`search-changed` {`CustomEvent<this>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}