{
  "version": 1,
  "tags": [
    {
      "name": "place-holder",
      "description": "`place-holder`\n\nEvents:\n\n  * `place-holder-replace` {`CustomEvent<string>`} - \n\n  * `place-holder-file-drop` {`CustomEvent<any>`} - \n\nAttributes:\n\n  * `calcText` {`string`} - Calculate text based on the type in the event we have no default.\n\n  * `text` {`string`} - Text place holder for describing this place holder element.\n\n  * `iconFromType` {`string`} - calculate an icon based on the type that was used\n\n  * `type` {`string`} - A media type to visualize and also bubble events off of.\n\n  * `drag-over` {`boolean`} - Bind dragging state to a variable so we can apply CSS.\n\n  * `directions` {`string`} - \n\n  * `accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\nProperties:\n\n  * `calcText` {`string`} - Calculate text based on the type in the event we have no default.\n\n  * `text` {`string`} - Text place holder for describing this place holder element.\n\n  * `iconFromType` {`string`} - calculate an icon based on the type that was used\n\n  * `type` {`string`} - A media type to visualize and also bubble events off of.\n\n  * `dragOver` {`boolean`} - Bind dragging state to a variable so we can apply CSS.\n\n  * `directions` {`string`} - \n\n  * `accentColor` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\n  * `dark` {`boolean`} - make the default theme dark?\n\n  * `colors` - ",
      "attributes": [
        {
          "name": "calcText",
          "description": "`calcText` {`string`} - Calculate text based on the type in the event we have no default.\n\nProperty: calcText"
        },
        {
          "name": "text",
          "description": "`text` {`string`} - Text place holder for describing this place holder element.\n\nProperty: text\n\nDefault: "
        },
        {
          "name": "iconFromType",
          "description": "`iconFromType` {`string`} - calculate an icon based on the type that was used\n\nProperty: iconFromType\n\nDefault: editor:format-align-left"
        },
        {
          "name": "type",
          "description": "`type` {`string`} - A media type to visualize and also bubble events off of.\n\nProperty: type\n\nDefault: text"
        },
        {
          "name": "drag-over",
          "description": "`drag-over` {`boolean`} - Bind dragging state to a variable so we can apply CSS.\n\nProperty: dragOver\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "directions",
          "description": "`directions` {`string`} - \n\nProperty: directions\n\nDefault: Drag and drop file to replace"
        },
        {
          "name": "accent-color",
          "description": "`accent-color` {`string`} - a selected accent-\"color\": grey, red, pink, purple, etc.\n\nProperty: accentColor\n\nDefault: grey"
        },
        {
          "name": "dark",
          "description": "`dark` {`boolean`} - make the default theme dark?\n\nProperty: dark\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "onplace-holder-replace",
          "description": "`place-holder-replace` {`CustomEvent<string>`} - "
        },
        {
          "name": "onplace-holder-file-drop",
          "description": "`place-holder-file-drop` {`CustomEvent<any>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}