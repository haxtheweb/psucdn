{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "lrndesign-chart.js",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "LrndesignChart",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "Store the tag name to make it easier to obtain directly.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "axisTitles",
              "description": "gets axis title options",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "lineBarHaxProperties",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "lineBarProperties",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "lineBarOptions",
              "description": "override this with type-specific options",
              "return": {
                "type": {
                  "text": "object"
                }
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "options",
              "description": "\noverride this with type-specific options",
              "return": {
                "type": {
                  "text": "object"
                }
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setProperties",
              "description": "Sets properties for chart.\nSpecific chart types can extend this function\nwith type-specific properties."
            },
            {
              "kind": "method",
              "name": "setBarLineProperties",
              "description": "Sets properties specific to bar and line charts.\nBar and line charts can include this function\nin their extended setProperties function."
            },
            {
              "kind": "field",
              "name": "accentColor",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "attribute": "accent-color",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dark",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "attribute": "dark",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "height",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "height"
            },
            {
              "kind": "field",
              "name": "reverseData",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "attribute": "reverse-data"
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "width"
            }
          ],
          "attributes": [
            {
              "name": "accent-color",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "fieldName": "accentColor"
            },
            {
              "name": "dark",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "fieldName": "dark"
            },
            {
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "height"
            },
            {
              "name": "reverse-data",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "fieldName": "reverseData"
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "width"
            }
          ],
          "mixins": [
            {
              "name": "ChartistRenderSuper",
              "package": "@haxtheweb/chartist-render/chartist-render.js"
            }
          ],
          "parameters": [
            {
              "name": "SuperClass"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LrndesignChart",
          "declaration": {
            "name": "LrndesignChart",
            "module": "lrndesign-chart.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/lrndesign-bar.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`lrndesign-bar`\na bar chart",
          "name": "LrndesignBar",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "Store the tag name to make it easier to obtain directly.",
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "options",
              "description": "gets options as an array",
              "return": {
                "type": {
                  "text": "array"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "method",
              "name": "setProperties",
              "description": "Overrides default properties with bar-specific properties.",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "axisXOnlyInteger",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Use only integer values (whole numbers) for the scale steps",
              "attribute": "axis-x-only-integer"
            },
            {
              "kind": "field",
              "name": "axisXScaleMinSpace",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "TODO",
              "attribute": "axis-x-min-space"
            },
            {
              "kind": "field",
              "name": "distributeSeries",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If set to true then each bar will represent a series and\nthe data array is expected to be a one dimensional array\nof data values rather than a series array of series.\nThis is useful if the bar chart should represent\na profile rather than some data over time.",
              "attribute": "distribute-series"
            },
            {
              "kind": "field",
              "name": "horizontalBars",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Inverts the axes of the bar chart in order to draw\na horizontal bar chart. Be aware that you also need\nto invert your axis settings as the Y Axis will now display\nthe labels and the X Axis the values.",
              "attribute": "horizontal-bars"
            },
            {
              "kind": "field",
              "name": "referenceValue",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Unless low/high are explicitly set, bar chart will be\ncentered at zero by default. Set referenceValue to null to auto scale.",
              "attribute": "reference-value"
            },
            {
              "kind": "field",
              "name": "seriesBarDistance",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Specify the distance in pixel of bars in a group.",
              "attribute": "series-bar-distance"
            },
            {
              "kind": "field",
              "name": "stackBars",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If set to true this property will cause the series bars\nto be stacked. Check the \"stackMode\" option\nfor further stacking options.",
              "attribute": "stack-bars"
            },
            {
              "kind": "field",
              "name": "stackMode",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If set to \"true\" this property will form a total\nfor each series point. This will also influence\nthe y-axis and the overall bounds of the chart.\nIf set to \"false\" this property will force\nthe stacked bars to draw from the zero line.\nIn stacked mode the \"seriesBarDistance\" property will have no effect.",
              "attribute": "stack-mode"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "axisTitles",
              "description": "gets axis title options",
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarHaxProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarOptions",
              "description": "override this with type-specific options",
              "return": {
                "type": {
                  "text": "object"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "method",
              "name": "setBarLineProperties",
              "description": "Sets properties specific to bar and line charts.\nBar and line charts can include this function\nin their extended setProperties function.",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "accentColor",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "attribute": "accent-color",
              "reflects": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "dark",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "attribute": "dark",
              "reflects": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "height",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "reverseData",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "attribute": "reverse-data",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "width",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "axis-x-only-integer",
              "type": {
                "text": "boolean"
              },
              "description": "Use only integer values (whole numbers) for the scale steps",
              "fieldName": "axisXOnlyInteger"
            },
            {
              "name": "axis-x-min-space",
              "type": {
                "text": "number"
              },
              "description": "TODO",
              "fieldName": "axisXScaleMinSpace"
            },
            {
              "name": "distribute-series",
              "type": {
                "text": "boolean"
              },
              "description": "If set to true then each bar will represent a series and\nthe data array is expected to be a one dimensional array\nof data values rather than a series array of series.\nThis is useful if the bar chart should represent\na profile rather than some data over time.",
              "fieldName": "distributeSeries"
            },
            {
              "name": "horizontal-bars",
              "type": {
                "text": "boolean"
              },
              "description": "Inverts the axes of the bar chart in order to draw\na horizontal bar chart. Be aware that you also need\nto invert your axis settings as the Y Axis will now display\nthe labels and the X Axis the values.",
              "fieldName": "horizontalBars"
            },
            {
              "name": "reference-value",
              "type": {
                "text": "number"
              },
              "description": "Unless low/high are explicitly set, bar chart will be\ncentered at zero by default. Set referenceValue to null to auto scale.",
              "fieldName": "referenceValue"
            },
            {
              "name": "series-bar-distance",
              "type": {
                "text": "number"
              },
              "description": "Specify the distance in pixel of bars in a group.",
              "fieldName": "seriesBarDistance"
            },
            {
              "name": "stack-bars",
              "type": {
                "text": "boolean"
              },
              "description": "If set to true this property will cause the series bars\nto be stacked. Check the \"stackMode\" option\nfor further stacking options.",
              "fieldName": "stackBars"
            },
            {
              "name": "stack-mode",
              "type": {
                "text": "boolean"
              },
              "description": "If set to \"true\" this property will form a total\nfor each series point. This will also influence\nthe y-axis and the overall bounds of the chart.\nIf set to \"false\" this property will force\nthe stacked bars to draw from the zero line.\nIn stacked mode the \"seriesBarDistance\" property will have no effect.",
              "fieldName": "stackMode"
            },
            {
              "name": "accent-color",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "fieldName": "accentColor",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "dark",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "fieldName": "dark",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "height",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "reverse-data",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "fieldName": "reverseData",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "width",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            }
          ],
          "mixins": [
            {
              "name": "LrndesignChart",
              "module": "/lrndesign-chart.js"
            }
          ],
          "superclass": {
            "name": "SimpleColors",
            "package": "@haxtheweb/simple-colors/simple-colors.js"
          },
          "tagName": "lrndesign-bar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "LrndesignBar",
            "module": "lib/lrndesign-bar.js"
          }
        },
        {
          "kind": "js",
          "name": "LrndesignBar",
          "declaration": {
            "name": "LrndesignBar",
            "module": "lib/lrndesign-bar.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/lrndesign-line.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`lrndesign-line`\na line chart",
          "name": "LrndesignLine",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "Store the tag name to make it easier to obtain directly.",
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "options",
              "description": "gets options as an array",
              "return": {
                "type": {
                  "text": "array"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "pointLabels",
              "description": "gets axis title options",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "setProperties",
              "description": "Overrides default properties with line-specific properties.",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "areaBase",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "The base for the area chart that will be used\nto close the area shape (is normally 0).",
              "attribute": "area-base"
            },
            {
              "kind": "field",
              "name": "fullWidth",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "When set to true, the last grid line on the x-axis\nis not drawn and the chart elements will expand\nto the full available width of the chart.\nFor the last label to be drawn correctly\nyou might need to add chart padding or offset the\nlast label with a draw event handler.",
              "attribute": "full-width"
            },
            {
              "kind": "field",
              "name": "lineSmooth",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Specify if the lines should be smoothed.\nThis value can be true or false where true\nwill result in smoothing using the default\nsmoothing interpolation function Chartist.\nInterpolation.cardinal and false results in\nChartist.Interpolation.none.\nYou can also choose other smoothing /\ninterpolation functions available in the Chartist.\nInterpolation module, or write your own\ninterpolation function. Check the examples\nfor a brief description..",
              "attribute": "line-smooth"
            },
            {
              "kind": "field",
              "name": "showArea",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If the line chart should draw an area.",
              "attribute": "show-area"
            },
            {
              "kind": "field",
              "name": "showLine",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If the line should be drawn or not.",
              "attribute": "show-line"
            },
            {
              "kind": "field",
              "name": "showPoint",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If the line should be drawn or not.",
              "attribute": "show-point"
            },
            {
              "kind": "field",
              "name": "showPointLabels",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Optional point labels",
              "attribute": "show-point-labels"
            },
            {
              "kind": "field",
              "name": "pointLabelsAnchor",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Optional anchor for point labels",
              "attribute": "point-labels-anchor"
            },
            {
              "kind": "field",
              "name": "pointLabelsOffsetX",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Optional x-offset for point labels",
              "attribute": "point-labels-offset-x"
            },
            {
              "kind": "field",
              "name": "pointLabelsOffsetY",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Optional y-offset for point labels",
              "attribute": "point-labels-offset-y"
            },
            {
              "kind": "field",
              "name": "pointLabelFunction",
              "privacy": "public",
              "description": "Optional interpolation function for point labels",
              "attribute": "pointLabelFunction"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "axisTitles",
              "description": "gets axis title options",
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarHaxProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarOptions",
              "description": "override this with type-specific options",
              "return": {
                "type": {
                  "text": "object"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "method",
              "name": "setBarLineProperties",
              "description": "Sets properties specific to bar and line charts.\nBar and line charts can include this function\nin their extended setProperties function.",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "accentColor",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "attribute": "accent-color",
              "reflects": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "dark",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "attribute": "dark",
              "reflects": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "height",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "reverseData",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "attribute": "reverse-data",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "width",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "area-base",
              "type": {
                "text": "number"
              },
              "description": "The base for the area chart that will be used\nto close the area shape (is normally 0).",
              "fieldName": "areaBase"
            },
            {
              "name": "full-width",
              "type": {
                "text": "boolean"
              },
              "description": "When set to true, the last grid line on the x-axis\nis not drawn and the chart elements will expand\nto the full available width of the chart.\nFor the last label to be drawn correctly\nyou might need to add chart padding or offset the\nlast label with a draw event handler.",
              "fieldName": "fullWidth"
            },
            {
              "name": "line-smooth",
              "type": {
                "text": "boolean"
              },
              "description": "Specify if the lines should be smoothed.\nThis value can be true or false where true\nwill result in smoothing using the default\nsmoothing interpolation function Chartist.\nInterpolation.cardinal and false results in\nChartist.Interpolation.none.\nYou can also choose other smoothing /\ninterpolation functions available in the Chartist.\nInterpolation module, or write your own\ninterpolation function. Check the examples\nfor a brief description..",
              "fieldName": "lineSmooth"
            },
            {
              "name": "show-area",
              "type": {
                "text": "boolean"
              },
              "description": "If the line chart should draw an area.",
              "fieldName": "showArea"
            },
            {
              "name": "show-line",
              "type": {
                "text": "boolean"
              },
              "description": "If the line should be drawn or not.",
              "fieldName": "showLine"
            },
            {
              "name": "show-point",
              "type": {
                "text": "boolean"
              },
              "description": "If the line should be drawn or not.",
              "fieldName": "showPoint"
            },
            {
              "name": "show-point-labels",
              "type": {
                "text": "boolean"
              },
              "description": "Optional point labels",
              "fieldName": "showPointLabels"
            },
            {
              "name": "point-labels-anchor",
              "type": {
                "text": "string"
              },
              "description": "Optional anchor for point labels",
              "fieldName": "pointLabelsAnchor"
            },
            {
              "name": "point-labels-offset-x",
              "type": {
                "text": "number"
              },
              "description": "Optional x-offset for point labels",
              "fieldName": "pointLabelsOffsetX"
            },
            {
              "name": "point-labels-offset-y",
              "type": {
                "text": "number"
              },
              "description": "Optional y-offset for point labels",
              "fieldName": "pointLabelsOffsetY"
            },
            {
              "name": "pointLabelFunction",
              "description": "Optional interpolation function for point labels",
              "fieldName": "pointLabelFunction"
            },
            {
              "name": "accent-color",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "fieldName": "accentColor",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "dark",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "fieldName": "dark",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "height",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "reverse-data",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "fieldName": "reverseData",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "width",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            }
          ],
          "mixins": [
            {
              "name": "LrndesignChart",
              "module": "/lrndesign-chart.js"
            }
          ],
          "superclass": {
            "name": "SimpleColors",
            "package": "@haxtheweb/simple-colors/simple-colors.js"
          },
          "tagName": "lrndesign-line",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "LrndesignLine",
            "module": "lib/lrndesign-line.js"
          }
        },
        {
          "kind": "js",
          "name": "LrndesignLine",
          "declaration": {
            "name": "LrndesignLine",
            "module": "lib/lrndesign-line.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "lib/lrndesign-pie.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`lrndesign-pie`\na pie chart",
          "name": "LrndesignPie",
          "members": [
            {
              "kind": "field",
              "name": "tag",
              "static": true,
              "description": "Store the tag name to make it easier to obtain directly.",
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "haxProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "options",
              "description": "gets options as an array",
              "return": {
                "type": {
                  "text": "array"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "method",
              "name": "setProperties",
              "description": "Overrides default properties with pie-specific properties.",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "chartPadding",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Padding of chart drawing area to container element and labels",
              "attribute": "chartPadding"
            },
            {
              "kind": "field",
              "name": "donut",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Displays chart as donut instead of pie.",
              "attribute": "donut"
            },
            {
              "kind": "field",
              "name": "donutSolid",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Draw donut segments as shapes instead of strokes.",
              "attribute": "donutSolid"
            },
            {
              "kind": "field",
              "name": "donutWidth",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Donut stroke width, currently done in javascript.",
              "attribute": "donutWidth"
            },
            {
              "kind": "field",
              "name": "ignoreEmptyValues",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Empty values will be ignored to avoid drawing\nunncessary slices and labels",
              "attribute": "ignoreEmptyValues"
            },
            {
              "kind": "field",
              "name": "labelDirection",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Label direction can be 'neutral', 'explode' or 'implode'.\nThe labels anchor will be positioned based on those settings\nas well as the fact if the labels are on the right or\nleft side of the center of the chart.\nUsually explode is useful when labels are positioned\nfar away from the center.",
              "attribute": "labelDirection"
            },
            {
              "kind": "field",
              "name": "labelOffset",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Label position offset from the standard position\nwhich is half distance of the radius.\nThis value can be either positive or negative.\nPositive values will position the label away from the center.",
              "attribute": "labelOffset"
            },
            {
              "kind": "field",
              "name": "labelPosition",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "This option can be set to 'inside', 'outside' or 'center'.\nPositioned with 'inside' the labels will be placed on half the distance\nof the radius to the border of the Pie by respecting the 'labelOffset'.\nThe 'outside' option will place the labels at the border of the pie\nand 'center' will place the labels in the absolute center point\nof the chart. The 'center' option only makes sense\nin conjunction with the 'labelOffset' option.",
              "attribute": "label-position",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showLabel",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "If a label should be shown.",
              "attribute": "showLabel"
            },
            {
              "kind": "field",
              "name": "startAngle",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Start angle of the pie chart in degrees where 0 points north.\nA higher value offsets the start angle clockwise..",
              "attribute": "startAngle"
            },
            {
              "kind": "field",
              "name": "total",
              "privacy": "public",
              "type": {
                "text": "number"
              },
              "description": "Optional total you can specify. By specifying a total value,\nthe sum of the values in the series must be this total in order\nto draw a full pie. You can use this parameter to draw only parts\nof a pie or gauge charts.",
              "attribute": "total"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "properties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "axisTitles",
              "description": "gets axis title options",
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarHaxProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarProperties",
              "static": true,
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "lineBarOptions",
              "description": "override this with type-specific options",
              "return": {
                "type": {
                  "text": "object"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "method",
              "name": "setBarLineProperties",
              "description": "Sets properties specific to bar and line charts.\nBar and line charts can include this function\nin their extended setProperties function.",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "accentColor",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "attribute": "accent-color",
              "reflects": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "dark",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "attribute": "dark",
              "reflects": true,
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "height",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "height",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "reverseData",
              "privacy": "public",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "attribute": "reverse-data",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "kind": "field",
              "name": "width",
              "privacy": "public",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "attribute": "width",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            }
          ],
          "attributes": [
            {
              "name": "chartPadding",
              "type": {
                "text": "number"
              },
              "description": "Padding of chart drawing area to container element and labels",
              "fieldName": "chartPadding"
            },
            {
              "name": "donut",
              "type": {
                "text": "boolean"
              },
              "description": "Displays chart as donut instead of pie.",
              "fieldName": "donut"
            },
            {
              "name": "donutSolid",
              "type": {
                "text": "boolean"
              },
              "description": "Draw donut segments as shapes instead of strokes.",
              "fieldName": "donutSolid"
            },
            {
              "name": "donutWidth",
              "type": {
                "text": "number"
              },
              "description": "Donut stroke width, currently done in javascript.",
              "fieldName": "donutWidth"
            },
            {
              "name": "ignoreEmptyValues",
              "type": {
                "text": "boolean"
              },
              "description": "Empty values will be ignored to avoid drawing\nunncessary slices and labels",
              "fieldName": "ignoreEmptyValues"
            },
            {
              "name": "labelDirection",
              "type": {
                "text": "string"
              },
              "description": "Label direction can be 'neutral', 'explode' or 'implode'.\nThe labels anchor will be positioned based on those settings\nas well as the fact if the labels are on the right or\nleft side of the center of the chart.\nUsually explode is useful when labels are positioned\nfar away from the center.",
              "fieldName": "labelDirection"
            },
            {
              "name": "labelOffset",
              "type": {
                "text": "number"
              },
              "description": "Label position offset from the standard position\nwhich is half distance of the radius.\nThis value can be either positive or negative.\nPositive values will position the label away from the center.",
              "fieldName": "labelOffset"
            },
            {
              "name": "label-position",
              "type": {
                "text": "string"
              },
              "description": "This option can be set to 'inside', 'outside' or 'center'.\nPositioned with 'inside' the labels will be placed on half the distance\nof the radius to the border of the Pie by respecting the 'labelOffset'.\nThe 'outside' option will place the labels at the border of the pie\nand 'center' will place the labels in the absolute center point\nof the chart. The 'center' option only makes sense\nin conjunction with the 'labelOffset' option.",
              "fieldName": "labelPosition"
            },
            {
              "name": "showLabel",
              "type": {
                "text": "boolean"
              },
              "description": "If a label should be shown.",
              "fieldName": "showLabel"
            },
            {
              "name": "startAngle",
              "type": {
                "text": "number"
              },
              "description": "Start angle of the pie chart in degrees where 0 points north.\nA higher value offsets the start angle clockwise..",
              "fieldName": "startAngle"
            },
            {
              "name": "total",
              "type": {
                "text": "number"
              },
              "description": "Optional total you can specify. By specifying a total value,\nthe sum of the values in the series must be this total in order\nto draw a full pie. You can use this parameter to draw only parts\nof a pie or gauge charts.",
              "fieldName": "total"
            },
            {
              "name": "accent-color",
              "type": {
                "text": "string"
              },
              "description": "Location of the CSV file.",
              "fieldName": "accentColor",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "dark",
              "type": {
                "text": "boolean"
              },
              "description": "Location of the CSV file.",
              "fieldName": "dark",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "height",
              "type": {
                "text": "string"
              },
              "description": "Fixed height for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "height",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "reverse-data",
              "type": {
                "text": "boolean"
              },
              "description": "Reverse data including labels, the series order as well as\nthe whole series data arrays.",
              "fieldName": "reverseData",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            },
            {
              "name": "width",
              "type": {
                "text": "string"
              },
              "description": "Fixed width for the chart as a string (i.e. '100px' or '50%').",
              "fieldName": "width",
              "inheritedFrom": {
                "name": "LrndesignChart",
                "module": "lrndesign-chart.js"
              }
            }
          ],
          "mixins": [
            {
              "name": "LrndesignChart",
              "module": "/lrndesign-chart.js"
            }
          ],
          "superclass": {
            "name": "SimpleColors",
            "package": "@haxtheweb/simple-colors/simple-colors.js"
          },
          "tagName": "lrndesign-pie",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "declaration": {
            "name": "LrndesignPie",
            "module": "lib/lrndesign-pie.js"
          }
        },
        {
          "kind": "js",
          "name": "LrndesignPie",
          "declaration": {
            "name": "LrndesignPie",
            "module": "lib/lrndesign-pie.js"
          }
        }
      ]
    }
  ]
}
