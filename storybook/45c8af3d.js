System.register(["./be7cca87.js"],(function(e){"use strict";var n,t,i,a,o,s,r,d,l,h,c,u,p,g,m,v,f,w,y,b,x,k,I,S,M;return{setters:[function(e){n=e.aA,t=e.v,i=e.M,a=e.a,o=e.c,s=e.N,r=e.aE,d=e.aF,l=e.p,h=e.t,c=e._,u=e.f,p=e.g,g=e.i,m=e.b,v=e.e,f=e.k,w=e.aZ,y=e.d,b=e.j,x=e.l,k=e.q,I=e.bb,S=e.ba,M=e.h}],execute:function(){n({enforceActions:!1}),t(["haxcms"]),i.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});var C=function(){return a((function e(){var n=this;o(this,e),this.buttonIcon="hax:wizard-hat",this.buttonLabel="Merlin-AI",this.chatLog=[],this.context="phys211",this.currentSuggestions=[],this.darkMode=null,void 0!==s.darkMode?this.darkMode=s.darkMode:this.darkMode=!1,this.dataCollectionEnabled=!0,this.developerModeEnabled=!1,void 0!==s.editMode?this.editMode=s.editMode:this.editMode=!1,this.engine="alfred",this.isFullView=!1,this.isInterfaceHidden=!0,this.isLoading=null,this.merlinIndex=0,this.merlinTypeWriterSpeed=2,this.messageIndex=0,this.promptCharacterLimit,this.promptPlaceholder="Enter your prompt here...",this.userIndex=0,this.userTypeWriterSpeed=0,void 0!==s.userData.userName?this.userName=s.userData.userName:this.userName="guest",this.date=new Date,this.month=this.date.getMonth()+1,this.day=this.date.getDate(),r(this,{buttonIcon:d,chatLog:d,context:d,darkMode:d,dataCollectionEnabled:d,developerModeEnabled:d,editMode:d,engine:d,isFullView:d,isInterfaceHidden:d,isLoading:d,merlinIndex:d,messageIndex:d,userIndex:d}),l((function(){h(n.buttonIcon),h(n.chatLog),h(n.context);var e=h(s.darkMode);h(n.dataCollectionEnabled),h(n.developerModeEnabled);var t=h(s.editMode);h(n.engine),h(n.isFullView),h(n.isInterfaceHidden);var i=h(n.isLoading);h(n.merlinIndex),h(n.messageIndex),h(n.userIndex),n.buttonIcon=i?"hax:loading":"hax:wizard-hat",n.darkMode=!!e,n.editMode=!!t}))}),[{key:"startAI",value:function(){this.handleMessage("merlin","Hello! My name is Merlin. I am currently in beta, and may not yet be feature complete, so you may encounter some bugs. I can currently only answer questions related to physics. How can I assist you today?"),2===this.month&&12===this.day||6===this.month&&6===this.day||7===this.month&&27===this.day||8===this.month&&15===this.day||9===this.month&&19===this.day||10===this.month&&1===this.day||10===this.month&&5===this.day||12===this.month&&5===this.day||12===this.month&&18===this.day?this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"What can you do for me?",type:"help"},{suggestion:"How do I use you?",type:"help"},{suggestion:"Why is my character wearing a hat?",type:"hax"}]:this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"What can you do for me?",type:"help"},{suggestion:"How do I use you?",type:"help"}],document.querySelector("chat-agent").shadowRoot.querySelector("chat-interface").shadowRoot.querySelector("chat-message").shadowRoot.querySelectorAll("chat-suggestion").forEach((function(e){e.hasAttribute("disabled")&&e.removeAttribute("disabled"),e.hasAttribute("chosen-prompt")&&e.removeAttribute("chosen-prompt")}))}},{key:"handleMessage",value:function(e,n){var t;switch(this.devStatement('Writing message "'.concat(n,'" by ').concat(e," to chatLog."),"info"),this.messageIndex++,e){case"merlin":this.merlinIndex++,t=this.merlinIndex;break;case this.userName:this.userIndex++,t=this.userIndex}var i=new Date,a={messageID:this.messageIndex,author:e,message:n,authorMessageIndex:t,timestamp:i.toString().replace(/\s/g,"-")};this.chatLog.push(a),e===this.userName&&this.handleInteraction(n)}},{key:"handleInteraction",value:function(e){var n=this;switch(this.devStatement("Prompt sent to: ".concat(this.engine,". Prompt sent: ").concat(e),"info"),this.currentSuggestions=[],e){case"Who are you?":this.currentSuggestions=[{suggestion:"What can you do for me?",type:"help"},{suggestion:"How do I use you?",type:"help"}],this.handleMessage("merlin","I am Merlin. I was created for use within HAX websites as an assistant to help you with your questions. How may I help you today?");break;case"What can you do for me?":this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"How do I use you?",type:"help"}],this.handleMessage("merlin","I can answer questions and chat with you about information relevant to the website you are navigating. How can I help you?");break;case"How do I use you?":this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"What can you do for me?",type:"help"}],this.handleMessage("merlin","I support numerous functions. You can ask me questions, as well as download our chat log and reset our chat. You can start asking me questions by clicking on one of the suggested prompts, or by typing a prompt in the input box below and pressing the send button or pressing the enter key on your keyboard. Here are some of the keyboard controls you can utilize: \n 1. Tab Key - Navigates you through the numerous usable buttons. \n 2. Enter Key (in text area) - Will submit the prompt you wrote. \n 3. Enter key (When focusing on a button) - Will act in the same way as clicking the button. \n 4. Up & Down Arrow Keys (in text area) - will navigate you through previously sent prompts so you can send them again.");break;case"Why is my character wearing a hat?":this.currentSuggestions=[{suggestion:"Who are you?",type:"hax"},{suggestion:"What can you do for me?",type:"help"},{suggestion:"How do I use you?",type:"help"}],this.handleMessage("merlin","Your character is wearing a hat because today is either a special (hat related) holiday, or another special occassion!");break;case"Why can't you connect?":this.currentSuggestions=[{suggestion:"How do I fix this connection issue?",type:"network"}],this.handleMessage("merlin","I am either unable to connect to the internet, or a service I connect to is not available, meaning I cannot research how to respond to your prompt.");break;case"How do I fix this connection issue?":this.currentSuggestions=[{suggestion:"Why can't you connect?",type:"network"}],this.handleMessage("merlin","Please ensure you are connected to the internet. I cannot respond to (most of) your questions if you are not connected to the internet. If you are connected, it is likely one of my connected services is having an issue, I will try to fix that and be back to help you soon.");break;default:globalThis.document.querySelector("base")&&globalThis.document.querySelector("base").href;var t={site:{file:"https://haxtheweb.org/site.json"},type:"site",question:e,engine:this.engine,context:this.context};this.isLoading=!0,i.call("@haxcms/aiChat",t).then((function(e){200==e.status&&(n.answers=[e.data.answers],n.question=e.data.question,n.currentSuggestions=[]),n.isLoading=!1,n.handleMessage("merlin",e.data.answers)})).catch((function(e){n.isLoading=!1,n.currentSuggestions=[{suggestion:"Why can't you connect?",type:"network"},{suggestion:"How do I fix this connection issue?",type:"network"}],n.handleMessage("merlin","I'm sorry, I'm having trouble connecting right now. Please try again soon. If you'd like to learn more, please click on one of the suggested prompts."),console.error(e)}))}}},{key:"handleDownload",value:function(e){if(this.devStatement("Downloading chatlog as ".concat(e,"."),"info"),0!==this.chatLog.length){var n=JSON.stringify(this.chatLog,void 0,2),t=new Date,i="".concat(this.userName,"-chat-log-").concat(t.toString().replace(/\s/g,"-"),".").concat(e),a=document.createElement("a");a.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(n)),a.setAttribute("download",i),a.click(),a.remove()}}},{key:"devStatement",value:function(e,n){if(this.developerModeEnabled)switch(n){case"log":console.log("CHAT-AGENT-DEV-MODE: ".concat(e));break;case"info":console.info("CHAT-AGENT-DEV-MODE: ".concat(e));break;case"warn":console.warn("CHAT-AGENT-DEV-MODE: ".concat(e));break;case"error":console.error("CHAT-AGENT-DEV-MODE: ".concat(e));break;default:console.error("No devStatement type specified")}}}])}();globalThis.ChatAgentStore=globalThis.ChatAgentStore||{},globalThis.ChatAgentStore.requestAvailability=function(){return globalThis.ChatAgentStore.instance||(globalThis.ChatAgentStore.instance=document.createElement("chat-agent-store"),document.body.appendChild(globalThis.ChatAgentStore.instance)),globalThis.ChatAgentStore.instance};var A,E,L,q,T,D=new C,H={url:new URL("./elements/chat-agent/lib/chat-button.js",document.baseURI).href},P=function(e){function n(){var e;return o(this,n),(e=y(this,n)).buttonIcon=null,e.darkMode=null,e.isFullView=null,e.isInterfaceHidden=null,l((function(){e.buttonIcon=h(D.buttonIcon),e.darkMode=h(D.darkMode),e.isFullView=h(D.isFullView),e.isInterfaceHidden=h(D.isInterfaceHidden)})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(A||(A=m(['\n      <div\n        class="chat-button-wrapper"\n        @click=',"\n        @keypress=",'\n        tabindex="0"\n        aria-label="','"\n      >\n        <div class="icon-wrapper">\n          <simple-icon-lite icon="','"></simple-icon-lite>\n        </div>\n        <div class="label-wrapper" unselectable="on">\n          <slot name="label">',"</slot>\n        </div>\n      </div>\n    "])),this.handleChatButton,this.keyPress,this.isInterfaceHidden?"Open Interface":"Close Interface",this.buttonIcon,D.buttonLabel)}},{key:"keyPress",value:function(e){"Enter"===e.key&&(e.preventDefault(),D.devStatement("Chat button pressed using Enter key.","log"),this.handleChatButton())}},{key:"handleChatButton",value:function(){D.devStatement("Chat button pressed.","log"),D.isInterfaceHidden=!this.isInterfaceHidden}}],[{key:"tag",get:function(){return"chat-button"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(E||(E=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          z-index: 999998;\n        }\n\n        .chat-button-wrapper {\n          align-items: center;\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          border-color: light-dark(\n            var(--ddd-theme-default-coalyGray),\n            var(--ddd-theme-default-white)\n          );\n          border-radius: var(--ddd-radius-lg);\n          border-style: solid;\n          border-width: 0.75px;\n          box-shadow: 0 4px rgba(0, 3, 33, 0.4);\n          cursor: pointer;\n          display: flex;\n          flex-direction: column;\n          height: 96px;\n          justify-content: center;\n          width: 96px;\n        }\n\n        .chat-button-wrapper:hover,\n        .chat-button-wrapper:focus-visible {\n          box-shadow: 0 6px rgba(0, 3, 33, 0.4);\n          transform: translateY(-2px);\n        }\n\n        /* TODO Figure out how to get this to work with enter key */\n        .chat-button-wrapper:active {\n          box-shadow: 0 1px rgba(0, 3, 33, 0.4);\n          transform: translateY(3px);\n        }\n\n        :host([is-full-view]:not([is-interface-hidden])) .chat-button-wrapper {\n          display: none;\n        }\n\n        .chat-button-wrapper:hover .label-wrapper,\n        .chat-button-wrapper:focus-visible .label-wrapper {\n          text-decoration: underline;\n        }\n\n        .icon-wrapper {\n          align-items: center;\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-circle);\n          display: flex;\n          height: 56px;\n          justify-content: center;\n          margin-bottom: var(--ddd-spacing-1);\n          width: 56px;\n        }\n\n        simple-icon-lite {\n          --simple-icon-height: var(--ddd-icon-md);\n          --simple-icon-width: var(--ddd-icon-md);\n          color: var(--data-theme-primary, var(--ddd-primary-13));\n        }\n\n        .label-wrapper {\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-xs);\n          color: var(--ddd-theme-default-coalyGray);\n          font-size: var(--ddd-font-size-4xs);\n          font-weight: var(--ddd-font-weight-medium);\n          max-width: var(--ddd-spacing-19);\n          overflow: hidden;\n          padding: var(--ddd-spacing-1);\n          text-align: center;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n\n          /* Prevent text highlighting in button */\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          user-select: none;\n        }\n\n        :host([dark-mode]) .label-wrapper {\n          background-color: var(--ddd-theme-default-coalyGray);\n          color: var(--ddd-theme-default-white);\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{buttonIcon:{type:String,attribute:"button-icon"},darkMode:{type:Boolean,attribute:"dark-mode",reflect:!0},isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0},isInterfaceHidden:{type:Boolean,attribute:"is-interface-hidden",reflect:!0}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),H.url).href}}])}(w);globalThis.customElements.define(P.tag,P);var R,V,B={url:new URL("./elements/chat-agent/lib/chat-control-bar.js",document.baseURI).href},j=function(e){function n(){var e;return o(this,n),(e=y(this,n)).dataCollectionEnabled=null,e.isFullView=null,e.isInterfaceHidden=null,l((function(){e.dataCollectionEnabled=h(D.dataCollectionEnabled),e.isFullView=h(D.isFullView),e.isInterfaceHidden=h(D.isInterfaceHidden)})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(L||(L=m(['\n      \x3c!-- https://open-apis.hax.cloud/?path=/story/media-icons--hax-iconset-story --\x3e\n\n      <div class="chat-control-bar-wrapper">\n        <div class="left-side">\n          <button\n            id="download-button"\n            @click=','\n            aria-label="Download Log as txt"\n          >\n            <simple-icon-lite icon="icons:file-download"></simple-icon-lite>\n          </button>\n          <simple-tooltip\n            for="download-button"\n            position="','"\n            >Download Chat Log</simple-tooltip\n          >\n\n          <button\n            id="reset-button"\n            @click=','\n            aria-label="Reset Chat"\n          >\n            <simple-icon-lite icon="icons:refresh"></simple-icon-lite>\n          </button>\n          <simple-tooltip\n            for="reset-button"\n            position="','"\n            >Reset Chat</simple-tooltip\n          >\n\n          <button\n            id="data-collection-button"\n            @click=','\n            aria-label="Toggle Data Collection"\n          >\n            <simple-icon-lite\n              icon="lrn:data_usage"\n              class="data-collection-icon"\n            ></simple-icon-lite>\n            <span class="data-collection-label">Data Collection</span>\n          </button>\n          <simple-tooltip\n            for="data-collection-button"\n            position="','"\n            >Toggle Data Collection</simple-tooltip\n          >\n\n          <button\n            id="dev-mode-button"\n            @click=','\n            aria-label="Toggle Developer Mode"\n          >\n            <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n          </button>\n          <simple-tooltip\n            for="dev-mode-button"\n            position="','"\n            >Toggle Developer Mode</simple-tooltip\n          >\n        </div>\n        <div class="right-side">\n          <button\n            id="view-button"\n            @click=','\n            aria-label="','"\n          >\n            <simple-icon-lite\n              icon="','"\n            ></simple-icon-lite>\n          </button>\n          <simple-tooltip\n            for="view-button"\n            position="','"\n            >',"</simple-tooltip\n          >\n\n          ","\n        </div>\n      </div>\n    "])),this.handleDownloadLogButton,this.isFullView?"right":"top",this.handleResetButton,this.isFullView?"right":"top",this.handleDataCollectionButton,this.isFullView?"right":"top",this.handleDevModeButton,this.isFullView?"right":"top",this.handleViewButton,this.isFullView?"Exit Full View":"Enter Full View",this.isFullView?"icons:fullscreen-exit":"icons:fullscreen",this.isFullView?"left":"top",this.isFullView?"Exit Full View":"Enter Full View",this.isFullView?f(q||(q=m(['\n                <button\n                  id="hide-button"\n                  @click=','\n                  aria-label="Hide Interface"\n                >\n                  <simple-icon-lite icon="remove"></simple-icon-lite>\n                </button>\n                <simple-tooltip\n                  for="hide-button"\n                  position="','"\n                  >Hide Interface</simple-tooltip\n                >\n              '])),this.handleHideButton,this.isFullView?"left":"top"):"")}},{key:"handleDownloadLogButton",value:function(){D.devStatement("Download log button pressed.","log"),this.downloadChatLog()}},{key:"handleResetButton",value:function(){D.devStatement("Reset button pressed.","log"),confirm("Reset the chat?")&&(confirm("Download the chat log before you reset?")?(D.devStatement("Download chat log before reset confirmed.","info"),this.downloadChatLog()):D.devStatement("Download chat log before reset denied.","warning"),this.resetChat())}},{key:"handleDataCollectionButton",value:function(){D.dataCollectionEnabled=!D.dataCollectionEnabled,this.dataCollectionEnabled?alert("Your conversations will be used to train our AI models"):alert("Your conversations will not be used to train our AI models")}},{key:"handleDevModeButton",value:function(){D.developerModeEnabled=!D.developerModeEnabled}},{key:"handleViewButton",value:function(){D.devStatement("View switch button pressed.","log"),D.isFullView=!this.isFullView,this.requestUpdate(),D.devStatement("View switched to: "+(D.isFullView?"full":"standard"),"info")}},{key:"handleHideButton",value:function(){D.devStatement("Hide button pressed.","log"),this.isInterfaceHidden||(D.isInterfaceHidden=!0)}},{key:"downloadChatLog",value:function(){D.devStatement("Calling download function...","info"),D.handleDownload("txt")}},{key:"resetChat",value:function(){D.devStatement("Resetting chat...","info"),D.chatLog=[],D.merlinIndex=0,D.messageIndex=0,D.userIndex=0,D.startAI()}}],[{key:"tag",get:function(){return"chat-control-bar"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(T||(T=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          container-type: inline-size;\n          display: block;\n        }\n\n        .chat-control-bar-wrapper {\n          align-items: center;\n          display: flex;\n          justify-content: space-between;\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-0);\n        }\n\n        button {\n          background-color: #2b2a33;\n          border-radius: var(--ddd-radius-sm);\n          color: var(--ddd-theme-default-white);\n        }\n\n        button:hover,\n        button:focus-visible {\n          background-color: #52525e;\n        }\n\n        button > simple-icon-lite {\n          --simple-icon-color: var(--ddd-theme-default-white);\n        }\n\n        simple-tooltip {\n          --simple-tooltip-delay-in: 1000ms;\n        }\n\n        .data-collection-icon {\n          --simple-icon-color: var(--ddd-theme-default-original87Pink);\n        }\n\n        .data-collection-label {\n          font: var(--ddd-font-primary);\n          font-size: 12px;\n        }\n\n        :host([data-collection-enabled]) .data-collection-icon {\n          --simple-icon-color: var(--ddd-theme-default-futureLime);\n        }\n\n        /* Phones */\n        @media only screen and (max-width: 425px),\n          only screen and (max-height: 616px) {\n          #view-button {\n            display: none;\n          }\n        }\n\n        @container (max-width: 330px) {\n          .data-collection-label {\n            display: none;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{dataCollectionEnabled:{type:Boolean,attribute:"data-collection-enabled",reflect:!0}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),B.url).href}}])}(w);globalThis.customElements.define(j.tag,j);var F,U,W={url:new URL("./elements/chat-agent/lib/chat-developer-panel.js",document.baseURI).href},N=function(e){function n(){var e;return o(this,n),(e=y(this,n)).chatLog=[],e.context=null,e.engine=null,e.isFullView=null,l((function(){e.chatLog=h(D.chatLog),e.context=h(D.context),e.engine=h(D.engine),e.isFullView=h(D.isFullView)})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(R||(R=m(['\n      <div class="chat-developer-panel-wrapper">\n        <div class="console-table">\n          \x3c!-- Maybe convert buttons to simple-cta --\x3e\n          <button\n            id="console-table-user"\n            @click=','\n            aria-label="Console table user chat log"\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="lrn:user"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() user chat log</span>\n            </div>\n          </button>\n          <simple-tooltip\n            for="console-table-user"\n            position="','"\n            >Print User Chat Log as Table to Console</simple-tooltip\n          >\n\n          <button\n            id="console-table-merlin"\n            @click=','\n            aria-label="Console table merlin chat log"\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="hax:wizard-hat"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() merlin chat log</span>\n            </div>\n          </button>\n          <simple-tooltip\n            for="console-table-merlin"\n            position="','"\n            >Print Merlin Chat Log as Table to Console</simple-tooltip\n          >\n\n          <button\n            id="console-table-all"\n            @click=','\n            aria-label="Console table entire chat log"\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="hax:console-line"></simple-icon-lite>\n              <simple-icon-lite icon="book"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">console.table() entire chat log</span>\n            </div>\n          </button>\n          <simple-tooltip\n            for="console-table-all"\n            position="','"\n            >Print Entire Chat Log as Table to Console</simple-tooltip\n          >\n\n          <button\n            id="download-as-json"\n            @click=','\n            aria-label="Download chat log as .json"\n          >\n            <div class="button-icon">\n              <simple-icon-lite icon="icons:file-download"></simple-icon-lite>\n              <simple-icon-lite icon="hax:code-json"></simple-icon-lite>\n            </div>\n            <div class="button-text">\n              <span class="btn-txt">Download chat log as .json</span>\n            </div>\n          </button>\n          <simple-tooltip\n            for="download-as-json"\n            position="','"\n            >Download Chat Log as .json</simple-tooltip\n          >\n        </div>\n\n        <div class="switches">\n          <select\n            name="select-engine"\n            id="engine-selection"\n            @change=','\n          >\n            <option value="alfred">Alfred (OpenAI)</option>\n            <option value="robin">Robin (Anthropic)</option>\n            <option value="Catwoman">Catwoman (ChatGPT)</option>\n          </select>\n\n          <select\n            name="select-context"\n            id="context-selection"\n            @change=','\n          >\n            <option value="phys211">Phys 211</option>\n            <option value="haxcellence">HAX Docs</option>\n            <option value="astro130">Astro 130</option>\n            <option value="staxpython">Intro to Python</option>\n            <option value="janetlaw">Janet Law</option>\n            <option value="udni">UDNI</option>\n            <option value="epubcyber440">Cyber 440</option>\n            <option value="ciscopdfs">ciscopdfs</option>\n          </select>\n        </div>\n      </div>\n    '])),this.handleConsoleTableButton,this.isFullView?"right":"top",this.handleConsoleTableButton,this.isFullView?"right":"top",this.handleConsoleTableButton,this.isFullView?"left":"top",this.handleDownloadAsJsonButton,this.isFullView?"left":"top",this.handleSwitchEngine,this.handleContextChange)}},{key:"firstUpdated",value:function(e){var t=this;u(p(n.prototype),"firstUpdated",this)&&u(p(n.prototype),"firstUpdated",this).call(this,e);var i=this.shadowRoot.querySelectorAll("#engine-selection option"),a=this.shadowRoot.querySelectorAll("#context-selection option");i.forEach((function(e){e.value===t.engine&&(e.selected=!0)})),a.forEach((function(e){e.value===D.context&&(e.selected=!0)}))}},{key:"handleConsoleTableButton",value:function(e){var n=e.currentTarget.id;switch(console.info("HAX-DEV-MODE: ".concat(n," button pressed.")),n){case"console-table-user":console.table(this.compileChatLog(D.userName));break;case"console-table-merlin":console.table(this.compileChatLog("merlin"));break;case"console-table-all":console.table(this.chatLog)}}},{key:"compileChatLog",value:function(e){D.devStatement('Compiling "'.concat(e,'" chat log...'),"info");var n=[];return this.chatLog.forEach((function(t){t.author===e&&n.push(t)})),n}},{key:"handleDownloadAsJsonButton",value:function(){D.devStatement("Calling download funtion...","info"),D.handleDownload("json")}},{key:"handleSwitchEngine",value:function(){D.engine=this.shadowRoot.querySelector("#engine-selection").value,D.devStatement("Engine switched to ".concat(D.engine),"info")}},{key:"handleContextChange",value:function(){D.context=this.shadowRoot.querySelector("#context-selection").value,D.devStatement("Context switched to ".concat(D.context),"info")}}],[{key:"tag",get:function(){return"chat-developer-panel"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(V||(V=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          container-type: inline-size;\n          display: block;\n        }\n\n        .chat-developer-panel-wrapper {\n          background-color: var(--ddd-theme-default-keystoneYellow);\n          border-radius: var(--ddd-radius-sm);\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-2);\n          padding: var(--ddd-spacing-1) var(--ddd-spacing-1);\n        }\n\n        .console-table {\n          align-items: center;\n          display: flex;\n          gap: var(--ddd-spacing-1);\n          justify-content: space-between;\n        }\n\n        .switches {\n          align-items: center;\n          display: flex;\n          justify-content: center;\n          gap: var(--ddd-spacing-1);\n        }\n\n        button,\n        select {\n          align-items: center;\n          background-color: #2b2a33;\n          border-radius: var(--ddd-radius-sm);\n          color: var(--ddd-theme-default-white);\n          cursor: pointer;\n          display: flex;\n          gap: var(--ddd-spacing-1);\n          justify-content: center;\n          font: var(--ddd-font-primary);\n          font-size: 12px;\n        }\n\n        label {\n          background-color: var(--ddd-theme-default-coalyGray);\n          color: var(--ddd-theme-default-white);\n          font-size: 14px;\n          padding: var(--ddd-spacing-2);\n        }\n\n        button:hover,\n        button:focus-visible {\n          background-color: #52525e;\n        }\n\n        button > simple-icon-lite {\n          --simple-icon-color: var(--ddd-theme-default-white);\n        }\n\n        simple-tooltip {\n          --simple-tooltip-delay-in: 1000ms;\n        }\n\n        @container (max-width: 500px) {\n          .btn-txt {\n            display: none;\n          }\n        }\n\n        @container (max-width: 180px) {\n          .console-table {\n            flex-wrap: wrap;\n            justify-content: center;\n          }\n        }\n\n        @media only screen and (max-height: 575px) {\n          :host {\n            display: none;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),W.url).href}}])}(w);globalThis.customElements.define(N.tag,N);var z,G,O,Y,X={url:new URL("./elements/chat-agent/lib/chat-input.js",document.baseURI).href},K=function(e){function n(){var e;return o(this,n),(e=y(this,n)).chatLog=[],e.darkMode=null,e.messageIndex=null,e.userIndex=null,e.previousMessagesIndex=null,e.userName=null,l((function(){e.chatLog=h(D.chatLog),e.darkMode=h(D.darkMode),e.messageIndex=h(D.messageIndex),e.userIndex=h(D.userIndex),e.previousMessagesIndex=h(e.messageIndex),e.userName=h(D.userName)})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(F||(F=m(['\n      <div class="chat-input-wrapper">\n        <textarea\n          name="prompt-input"\n          id="user-input"\n          placeholder="','"\n          @keydown=','\n        ></textarea>\n        <div class="up-down-btns">\n          <button id="input-up-btn" @click=','>\n            <simple-icon-lite\n              icon="hardware:keyboard-arrow-up"\n            ></simple-icon-lite>\n          </button>\n          <button id="input-down-btn" @click=','>\n            <simple-icon-lite\n              icon="hardware:keyboard-arrow-down"\n            ></simple-icon-lite>\n          </button>\n        </div>\n        <div\n          class="send-button"\n          id="send-button"\n          @click=','\n          tabindex="0"\n          aria-label="Send Prompt"\n        >\n          <simple-icon-lite icon="icons:send"></simple-icon-lite>\n        </div>\n        <simple-tooltip for="send-button" position="left"\n          >Send Prompt to Merlin</simple-tooltip\n        >\n      </div>\n    '])),D.promptPlaceholder,this.handleKeyPress,this.handleDirectionButtons,this.handleDirectionButtons,this.handleSendButton)}},{key:"handleKeyPress",value:function(e){switch(e.key){case"Enter":e.preventDefault(),this.handleSendButton();break;case"ArrowUp":e.preventDefault(),this.displayPreviousMessages("up");break;case"ArrowDown":e.preventDefault(),this.displayPreviousMessages("down")}}},{key:"handleDirectionButtons",value:function(e){var n=e.currentTarget.id;switch(D.devStatement("".concat(n," button pressed."),"info"),n){case"input-up-btn":this.displayPreviousMessages("up");break;case"input-down-btn":this.displayPreviousMessages("down")}}},{key:"handleSendButton",value:function(){var e=this.shadowRoot.querySelector("#user-input").value;D.promptCharacterLimit>0&&e.length>D.promptCharacterLimit&&alert("Please shorten your prompt to no more than ".concat(D.promptCharacterLimit," characters.")),""!==e?(D.devStatement('Send function activated. "'.concat(e,'" sent to Merlin.'),"info"),D.handleMessage(D.userName,e),this.shadowRoot.querySelector("#user-input").value=""):D.devStatement("Send button activated. No prompt to send.","warn")}},{key:"displayPreviousMessages",value:function(e){var n=this.shadowRoot.querySelector("#user-input");switch(e){case"up":if(this.previousMessagesIndex>1){for(this.previousMessagesIndex--,D.devStatement("Arrow Up pressed. Previous message index = ".concat(this.previousMessagesIndex," and message index = ").concat(this.messageIndex),"info");this.chatLog[this.previousMessagesIndex].author!==this.userName&&this.previousMessagesIndex>=1;)if(this.previousMessagesIndex--,this.previousMessagesIndex<1){this.previousMessagesIndex++;break}n.value=this.chatLog[this.previousMessagesIndex].message}break;case"down":if(this.previousMessagesIndex<this.messageIndex){for(this.previousMessagesIndex++;this.chatLog[this.previousMessagesIndex].author!==this.userName&&this.previousMessagesIndex<this.messageIndex;)if(this.previousMessagesIndex++,this.previousMessagesIndex>this.messageIndex){this.previousMessagesIndex=this.messageIndex;break}this.previousMessagesIndex>=this.messageIndex?n.value="":n.value=this.chatLog[this.previousMessagesIndex].message}else n.value="";D.devStatement("Arrow Down pressed. Previous message index = ".concat(this.previousMessagesIndex," and message index = ").concat(this.messageIndex),"info");break;default:D.devStatement("Unknown direction: ".concat(e,"."),"error")}}},{key:"firstUpdated",value:function(e){u(p(n.prototype),"firstUpdated",this)&&u(p(n.prototype),"firstUpdated",this).call(this,e),D.promptCharacterLimit>0&&this.shadowRoot.querySelector("#user-input").setAttribute("maxlength","".concat(D.promptCharacterLimit))}}],[{key:"tag",get:function(){return"chat-input"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(U||(U=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          font-family: var(--ddd-font-primary);\n        }\n\n        .chat-input-wrapper {\n          align-items: center;\n          display: flex;\n          gap: var(--ddd-spacing-3);\n          justify-content: center;\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n          border-radius: var(--ddd-radius-lg);\n        }\n\n        :host([dark-mode]) .chat-input-wrapper {\n          background-color: var(--ddd-theme-default-coalyGray);\n          color: var(--ddd-theme-default-white);\n        }\n\n        #user-input {\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-lg);\n          color: var(--ddd-theme-default-coalyGray);\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n          resize: none;\n          scrollbar-width: none;\n          width: 85%;\n        }\n\n        :host([dark-mode]) #user-input {\n          background-color: var(--ddd-theme-default-coalyGray);\n          color: var(--ddd-theme-default-white);\n        }\n\n        button {\n          align-items: center;\n          background-color: #2b2a33;\n          border-radius: var(--ddd-radius-sm);\n          color: var(--ddd-theme-default-white);\n          cursor: pointer;\n          display: flex;\n          gap: var(--ddd-spacing-1);\n          justify-content: center;\n        }\n\n        button:hover,\n        button:focus-visible {\n          background-color: #52525e;\n        }\n\n        .send-button {\n          align-items: center;\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          border-radius: var(--ddd-radius-circle);\n          box-shadow: 0 4px rgba(0, 3, 33, 0.2);\n          cursor: pointer;\n          display: flex;\n          height: 52px;\n          justify-content: center;\n          width: 52px;\n        }\n\n        .send-button:hover,\n        .send-button:focus-visible {\n          box-shadow: 0 6px rgba(0, 3, 33, 0.2);\n          transform: translateY(-2px);\n        }\n\n        .send-button:active {\n          box-shadow: 0 1px rgba(0, 3, 33, 0.2);\n          transform: translateY(3px);\n        }\n\n        simple-icon-lite {\n          color: var(\n            --lowContrast-override,\n            var(--ddd-theme-bgContrast, white)\n          );\n        }\n\n        simple-tooltip {\n          --simple-tooltip-delay-in: 1000ms;\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{darkMode:{type:Boolean,attribute:"dark-mode",reflect:!0}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),X.url).href}}])}(w);globalThis.customElements.define(K.tag,K);var J,Q,_,Z,$,ee=function(e){function n(){var e;return o(this,n),(e=y(this,n)).chatLog=[],e.darkMode=!1,e.developerModeEnabled=null,e.isFullView=null,e.isInterfaceHidden=null,e.hasEditorUI=null,l((function(){e.chatLog=h(D.chatLog),e.darkMode=h(D.darkMode),e.developerModeEnabled=h(D.developerModeEnabled),e.isFullView=h(D.isFullView),e.isInterfaceHidden=h(D.isInterfaceHidden);var n=document.querySelector("#site");window.innerHeight>1e3?e.isFullView&&!e.isInterfaceHidden?n.style.width="65%":n.style.width="100%":e.isFullView&&!e.isInterfaceHidden?n.style.width="75%":n.style.width="100%",document.querySelector("haxcms-site-editor-ui")?e.hasEditorUI=!0:e.hasEditorUI=!1})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(z||(z=m(['\n      <div class="chat-interface-wrapper">\n        <div class="chat-wrapper">\n          ','\n          <div class="main-wrapper">\n            <chat-control-bar></chat-control-bar>\n            <div class="chat-container">\n              <div class="chat-messages">\n                ','\n              </div>\n              <chat-input\n                placeholder="','"\n              ></chat-input>\n            </div>\n          </div>\n        </div>\n      </div>\n    '])),D.developerModeEnabled?f(G||(G=m([" <chat-developer-panel></chat-developer-panel> "]))):"",this.chatLog.map((function(e){return f(O||(O=m(['\n                    <chat-message\n                      message="','"\n                      ?sent-prompt="','"\n                      ?suggested-prompts="','"\n                    ></chat-message>\n                  '])),e.message,e.author===D.userName,D.currentSuggestions.length>0)})),D.promptPlaceholder)}},{key:"updated",value:(t=b(x().mark((function e(t){var i;return x().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(u(p(n.prototype),"updated",this)&&u(p(n.prototype),"updated",this).call(this,t),this.developerModeEnabled&&console.table(t),!t.has("chatLog")||t.has("darkMode")||t.has("developerModeEnabled")||t.has("hasEditorUI")||t.has("isInterfaceHidden")){e.next=6;break}return e.next=5,this.updateComplete;case 5:this.chatLog.length>1?(i=this.shadowRoot.querySelector(".chat-messages")).scrollTo(0,i.scrollHeight):SCROLLABLE_ELEMENT.scrollTop(0);case 6:case"end":return e.stop()}}),e,this)}))),function(e){return t.apply(this,arguments)})}],[{key:"tag",get:function(){return"chat-interface"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(Y||(Y=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          display: block;\n          width: 100%;\n          z-index: 999999;\n        }\n\n        /* Chat Interface Wrapper */\n        .chat-interface-wrapper {\n          background-color: transparent;\n        }\n\n        :host([is-full-view]) .chat-interface-wrapper {\n          background-color: var(--ddd-theme-default-potentialMidnight);\n          height: 100vh;\n          padding: var(--ddd-spacing-3);\n        }\n\n        :host([is-interface-hidden]) .chat-interface-wrapper {\n          display: none;\n        }\n\n        /* Chat Wrapper */\n        .chat-wrapper {\n          background-color: var(--data-theme-primary, var(--ddd-primary-1));\n          border-radius: var(--ddd-radius-sm);\n          border-style: solid;\n          box-shadow: var(--ddd-boxShadow-xl);\n          padding: var(--ddd-spacing-0) var(--ddd-spacing-2)\n            var(--ddd-spacing-2) var(--ddd-spacing-2);\n          border-width: 0.75px;\n          border-color: light-dark(\n            var(--ddd-theme-default-coalyGray, #000),\n            var(--ddd-theme-default-white, #fff)\n          );\n        }\n\n        :host([is-full-view]) .chat-wrapper {\n          height: 94%;\n          margin: var(--ddd-spacing-6) var(--ddd-spacing-0) var(--ddd-spacing-6)\n            var(--ddd-spacing-0);\n\n          border-color: transparent;\n          border-radius: var(--ddd-radius-sm);\n          border-style: none;\n          border-width: 0;\n        }\n\n        :host([is-full-view][has-editor-ui]) .chat-wrapper {\n          height: 87%;\n          margin: var(--ddd-spacing-18) var(--ddd-spacing-0)\n            var(--ddd-spacing-0) var(--ddd-spacing-0);\n        }\n\n        :host([developer-mode]),\n        .chat-wrapper {\n          padding-top: var(--ddd-spacing-1);\n        }\n\n        /* Main Wrapper */\n        .main-wrapper {\n          display: flex;\n          flex-direction: column;\n        }\n\n        :host([is-full-view]) .main-wrapper {\n          height: 100%;\n        }\n\n        :host([is-full-view][developer-mode]) .main-wrapper {\n          height: 88%;\n        }\n\n        /* Chat Container */\n        .chat-container {\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-sm);\n          display: flex;\n          flex-direction: column;\n          width: 100%;\n        }\n\n        :host([dark-mode]) .chat-container {\n          background-color: var(--ddd-theme-default-coalyGray);\n        }\n\n        :host([is-full-view]) .chat-container {\n          height: 92%;\n        }\n\n        :host([is-full-view][developer-mode]) .chat-container {\n          height: 90%;\n        }\n\n        /* Chat Messages */\n        .chat-messages {\n          max-height: 300px;\n          overflow-x: hidden;\n          overflow-y: auto;\n          scrollbar-width: thin;\n        }\n\n        :host([is-full-view]) .chat-messages {\n          height: 100%;\n          max-height: 100%;\n        }\n\n        /* TODO test the media queries for quality assurance, and test without editor ui & without developer mode */\n        /* This should cover a lot of horizontal monitors */\n        @media only screen and (min-width: 1081px) {\n          @media only screen and (min-height: 1201px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 98%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 105.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 101%;\n            }\n          }\n\n          @media only screen and (max-height: 1200px) and (min-height: 1001px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 102%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 94%;\n            }\n          }\n\n          @media only screen and (max-height: 1001px) and (min-height: 940px) {\n            /* Modify more for even bigger screen sizes -_- */\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 102%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 96%;\n            }\n          }\n\n          @media only screen and (max-height: 939px) and (min-height: 880px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 91%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 99%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 95%;\n            }\n          }\n\n          @media only screen and (max-height: 879px) and (min-height: 780px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 90%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 90%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 97%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 93%;\n            }\n          }\n\n          @media only screen and (max-height: 779px) and (min-height: 752px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 89%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 89%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 92%;\n            }\n          }\n\n          @media only screen and (max-height: 751px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 91%;\n            }\n          }\n\n          @media only screen and (max-height: 748px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 88%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 100%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 89%;\n            }\n          }\n        }\n\n        /* This should cover a lot of vertical monitors */\n        @media only screen and (max-width: 1080px) {\n          @media only screen and (min-height: 1720px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 98%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 105.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 103%;\n            }\n          }\n\n          @media only screen and (max-height: 1719px) and (min-height: 1600px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 97.5%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 105%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 102.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1599px) and (min-height: 1500px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 97%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 104.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 102%;\n            }\n          }\n\n          @media only screen and (max-height: 1499px) and (min-height: 1440px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96.5%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 103.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 101.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1439px) and (min-height: 1420px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 95%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 103%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 101%;\n            }\n          }\n\n          @media only screen and (max-height: 1419px) and (min-height: 1400px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 94.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 102.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 100.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1399px) and (min-height: 1300px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 94%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 101.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 100%;\n            }\n          }\n\n          @media only screen and (max-height: 1299px) and (min-height: 1220px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 93.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 101%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 99.5%;\n            }\n          }\n\n          @media only screen and (max-height: 1219px) and (min-height: 1160px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 93%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 100.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 99%;\n            }\n          }\n\n          @media only screen and (max-height: 1159px) and (min-height: 1100px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 92.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 100%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 98%;\n            }\n          }\n\n          @media only screen and (max-height: 1099px) and (min-height: 1050px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 92%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 99.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 97%;\n            }\n          }\n\n          @media only screen and (max-height: 1049px) and (min-height: 1000px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 92%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 99.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 94%;\n            }\n          }\n\n          @media only screen and (max-height: 999px) and (min-height: 880px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 99%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 88%;\n            }\n          }\n\n          @media only screen and (max-height: 879px) and (min-height: 800px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 91%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 98.5%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 87%;\n            }\n          }\n\n          @media only screen and (max-height: 799px) and (min-height: 750px) {\n            :host([is-full-view]) .chat-wrapper {\n              height: 96%;\n            }\n\n            :host([is-full-view][has-editor-ui]) .chat-wrapper {\n              height: 90.5%;\n            }\n\n            :host([is-full-view]) .main-wrapper {\n              height: 98%;\n            }\n\n            :host([is-full-view][developer-mode]) .main-wrapper {\n              height: 86%;\n            }\n          }\n        }\n\n        @media only screen and (max-height: 749px) and (min-height: 720px) {\n          :host([is-full-view]) .chat-wrapper {\n            height: 96%;\n          }\n\n          :host([is-full-view][has-editor-ui]) .chat-wrapper {\n            height: 90%;\n          }\n\n          :host([is-full-view]) .main-wrapper {\n            height: 98%;\n          }\n\n          :host([is-full-view][developer-mode]) .main-wrapper {\n            height: 85%;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{chatLog:{type:Array},darkMode:{type:Boolean,attribute:"dark-mode",reflect:!0},developerModeEnabled:{type:Boolean,attribute:"developer-mode",reflect:!0},hasEditorUI:{type:Boolean,attribute:"has-editor-ui",reflect:!0},isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0},isInterfaceHidden:{type:Boolean,attribute:"is-interface-hidden",reflect:!0}})}}]);var t}(w);globalThis.customElements.define(ee.tag,ee);var ne,te,ie={url:new URL("./elements/chat-agent/lib/chat-message.js",document.baseURI).href},ae=function(e){function n(){var e;return o(this,n),(e=y(this,n)).darkMode=null,e.editMode=null,e.hasSuggestedPrompts=!1,e.isSentPrompt=!1,e.message="",e.messageWasSuggestedPrompt=!1,e.suggestedPrompts=D.currentSuggestions,e.hat="none",l((function(){e.darkMode=h(D.darkMode),e.editMode=h(D.editMode)})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(J||(J=m(['\n      <div class="chat-message-wrapper">\n        ',"\n      </div>\n    "])),this.isSentPrompt?this.renderSentMessage():this.renderReceivedMessage())}},{key:"renderReceivedMessage",value:function(){var e=this;return f(Q||(Q=m(['\n      <div class="received-chat-message">\n        <div class="message">\n          <div class="author-icon">\n            <simple-icon-lite icon="hax:wizard-hat"></simple-icon-lite>\n          </div>\n          <type-writer\n            class="message-content"\n            text="','"\n            speed="','"\n          ></type-writer>\n        </div>\n        <div class="suggested-prompts">\n          ',"\n        </div>\n      </div>\n    "])),this.message,D.merlinTypeWriterSpeed,this.suggestedPrompts.map((function(n){return f(_||(_=m(['\n              <chat-suggestion\n                suggestion="','"\n                prompt-type="','"\n                @click=',"\n                @keypress=","\n              ></chat-suggestion>\n            "])),n.suggestion,n.type,e.disableSuggestions,e.disableSuggestions)})))}},{key:"renderSentMessage",value:function(){return f(Z||(Z=m(['\n      <div class="sent-chat-message">\n        <p class="message-content">','</p>\n        <div class="author-icon">\n          <rpg-character\n            seed="','"\n            hat="','"\n          ></rpg-character>\n        </div>\n      </div>\n    '])),this.message,D.userName,this.hat)}},{key:"firstUpdated",value:function(){this.pickHat()}},{key:"pickHat",value:function(){2===D.month&&12===D.day?this.hat="party":6===D.month&&6===D.day?this.hat="cowboy":7===D.month&&27===D.day?this.hat="bunny":8===D.month&&15===D.day?this.hat="watermelon":9===D.month&&19===D.day?this.hat="pirate":10===D.month&&1===D.day?this.hat="coffee":10===D.month&&5===D.day?this.hat="education":12===D.month&&5===D.day?this.hat="ninja":12===D.month&&18===D.day?this.hat="knight":this.hat="none",this.editMode&&(this.hat="construction"),this.requestUpdate()}},{key:"disableSuggestions",value:function(e){var n=this.shadowRoot.querySelectorAll("chat-suggestion");if(D.devStatement("Disabling previous suggestions.","info"),n.forEach((function(e){e.hasAttribute("disabled")||e.setAttribute("disabled","")})),!e.currentTarget.hasAttribute("chosen-prompt")){var t=!1;n.forEach((function(e){e.hasAttribute("chosen-prompt")&&(t=!0)})),t||e.currentTarget.setAttribute("chosen-prompt","")}}}],[{key:"tag",get:function(){return"chat-message"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g($||($=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          container-type: inline-size;\n          display: block;\n        }\n\n        .chat-message-wrapper {\n          border-bottom-style: dashed;\n          border-bottom: var(--ddd-border-md);\n          padding: var(--ddd-spacing-2) var(--ddd-spacing-3);\n        }\n\n        .sent-chat-message,\n        .message {\n          align-items: center;\n          display: flex;\n          flex-direction: row;\n          gap: var(--ddd-spacing-3);\n        }\n\n        .received-chat-message {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .author-icon {\n          align-items: center;\n          background-color: var(--ddd-theme-default-white);\n          border-radius: var(--ddd-radius-circle);\n          border: var(--ddd-border-md);\n          border-color: var(--ddd-theme-default-coalyGray);\n          display: flex;\n          height: var(--ddd-spacing-18);\n          justify-content: center;\n          width: var(--ddd-spacing-18);\n        }\n\n        :host([dark-mode]) .author-icon {\n          border-color: var(--ddd-theme-default-slateGray);\n        }\n\n        .received-chat-message .author-icon {\n          border-radius: var(--ddd-radius-xl);\n        }\n\n        simple-icon-lite {\n          color: var(--data-theme-primary, var(--ddd-primary-13));\n          --simple-icon-height: var(--ddd-icon-md);\n          --simple-icon-width: var(--ddd-icon-md);\n        }\n\n        rpg-character {\n          height: var(--ddd-spacing-12);\n          margin-bottom: var(--ddd-spacing-3);\n          width: var(--ddd-spacing-12);\n        }\n\n        .message-content {\n          border-radius: var(--ddd-radius-sm);\n          border: var(--ddd-border-md);\n          border-color: var(--ddd-theme-default-coalyGray);\n          color: var(--ddd-theme-default-coalyGray);\n          font: var(--ddd-font-primary);\n          font-size: var(--ddd-font-size-4xs);\n          margin: var(--ddd-spacing-0);\n          padding: var(--ddd-spacing-2);\n          width: 80%;\n        }\n\n        :host([dark-mode]) .message-content {\n          border-color: var(--ddd-theme-default-slateGray);\n          color: var(--ddd-theme-default-white);\n          background-color: var(--ddd-theme-default-coalyGray);\n        }\n\n        .suggested-prompts {\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-2);\n          justify-content: center;\n          padding-top: var(--ddd-spacing-3);\n        }\n\n        @container (max-width: 190px) {\n          .author-icon {\n            display: none;\n          }\n\n          .received-chat-message .message-content {\n            background: rgba(73, 29, 112, 0.1);\n          }\n\n          .message {\n            align-items: center;\n            display: flex;\n            justify-content: center;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{darkMode:{type:Boolean,attribute:"dark-mode",reflect:!0},hasSuggestedPrompts:{type:Boolean,attribute:"suggested-prompts"},isSentPrompt:{type:Boolean,attribute:"sent-prompt"},message:{type:String},messageWasSuggestedPrompt:{type:Boolean,attribute:"suggested-message"},suggestedPrompts:{type:Array}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),ie.url).href}}])}(w);globalThis.customElements.define(ae.tag,ae);var oe,se,re={url:new URL("./elements/chat-agent/lib/chat-suggestion.js",document.baseURI).href},de=function(e){function n(){var e;return o(this,n),(e=y(this,n)).chosenPrompt=!1,e.disabled=!1,e.promptType="",e.suggestion="",e.messageIndex=null,e.userIndex=null,l((function(){e.messageIndex=h(D.messageIndex),e.userIndex=h(D.userIndex)})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(ne||(ne=m(['\n      <div\n        class="chat-suggestion-wrapper"\n        @click=',"\n        @keypress=",'\n        tabindex="0"\n        aria-label=\'Send suggestion "','" to Merlin\'\n      >\n        <div class="suggestion-icon">\n          <div class="circle-wrapper">\n            <simple-icon-lite></simple-icon-lite>\n          </div>\n        </div>\n        <div class="suggestion-text">\n          <p class="chat-suggestion">',"</p>\n        </div>\n      </div>\n    "])),this.handleSuggestion,this.handleSuggestion,this.suggestion,this.suggestion)}},{key:"handleSuggestion",value:function(){this.disabled?D.devStatement("Suggestion buttons disabled, ignoring request","warn"):(D.devStatement("Suggestion button pressed. Suggested prompt to send to Merlin: ".concat(this.suggestion),"info"),D.handleMessage(D.userName,this.suggestion))}},{key:"firstUpdated",value:function(e){u(p(n.prototype),"firstUpdated",this)&&u(p(n.prototype),"firstUpdated",this).call(this,e);var t=this.shadowRoot.querySelector("simple-icon-lite");switch(this.promptType){case"suggestion":t.setAttribute("icon","question-answer"),t.style.color="var(--data-theme-primary, var(--ddd-primary-13))";break;case"network":t.setAttribute("icon","device:signal-cellular-connected-no-internet-0-bar"),t.style.color="var(--ddd-theme-default-coalyGray)";break;case"help":t.setAttribute("icon","help-outline"),t.style.color="var(--ddd-theme-default-original87Pink)";break;case"hax":t.setAttribute("icon","hax:hax2022"),t.style.color="var(--data-theme-primary, var(--ddd-primary-13))";break;default:t.setAttribute("icon","lrn:info"),t.style.color="var(--ddd-theme-default-skyBlue)"}}},{key:"updated",value:function(e){u(p(n.prototype),"updated",this)&&u(p(n.prototype),"updated",this).call(this,e),this.disabled&&this.shadowRoot.querySelector(".chat-suggestion-wrapper").removeAttribute("tabindex")}}],[{key:"tag",get:function(){return"chat-suggestion"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(te||(te=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          container-type: inline-size;\n          display: block;\n        }\n\n        .chat-suggestion-wrapper {\n          align-items: center;\n          border: var(--ddd-border-sm);\n          background-color: var(--ddd-theme-default-successLight);\n          border-color: var(--ddd-theme-default-potentialMidnight);\n          border-radius: var(--ddd-radius-xl);\n          box-shadow: var(--ddd-boxShadow-xl);\n          cursor: pointer;\n          display: flex;\n          flex-direction: row;\n          justify-content: center;\n          opacity: 1;\n        }\n\n        .suggestion-icon {\n          align-items: center;\n          border-right-style: solid;\n          border-right: var(--ddd-border-md);\n          display: flex;\n          justify-content: center;\n          width: 20%;\n        }\n\n        .circle-wrapper {\n          background-color: white;\n          border-radius: var(--ddd-radius-circle);\n          padding: var(--ddd-spacing-2);\n          margin: var(--ddd-spacing-1) var(--ddd-spacing-0);\n        }\n\n        simple-icon-lite {\n          --simple-icon-height: var(--ddd-icon-xxs);\n          --simple-icon-width: var(--ddd-icon-xxs);\n        }\n\n        .suggestion-text {\n          align-items: center;\n          display: flex;\n          justify-content: center;\n          width: 80%;\n\n          /* Prevent text highlighting in button */\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none;\n          user-select: none;\n        }\n\n        :host([disabled]) .chat-suggestion-wrapper {\n          background-color: var(--ddd-theme-default-discoveryCoral);\n          cursor: default;\n          opacity: 0.6;\n        }\n\n        :host([chosen-prompt]) .chat-suggestion-wrapper {\n          background-color: var(--ddd-theme-default-futureLime);\n        }\n\n        .chat-suggestion-wrapper:hover,\n        .chat-suggestion-wrapper:focus {\n          background-color: var(--ddd-theme-default-futureLime);\n        }\n\n        .chat-suggestion-wrapper:hover p,\n        .chat-suggestion-wrapper:focus p {\n          text-decoration: underline;\n        }\n\n        :host([disabled]) p {\n          text-decoration: none;\n        }\n\n        p {\n          color: var(--ddd-theme-default-potentialMidnight);\n          font-family: var(--ddd-font-primary);\n          font-size: var(--ddd-font-size-4xs);\n          text-align: center;\n          width: 80%;\n          margin: 0px;\n        }\n\n        @container (max-width: 216px) {\n          .suggestion-icon {\n            display: none;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{chosenPrompt:{type:Boolean,attribute:"chosen-prompt"},disabled:{type:Boolean},promptType:{type:String,attribute:"prompt-type"},suggestion:{type:String}})}},{key:"haxProperties",get:function(){return new URL("./lib/".concat(this.tag,".haxProperties.json"),re.url).href}}])}(w);globalThis.customElements.define(de.tag,de),n({enforceActions:!1}),t(["haxcms"]),i.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});var le,he=function(e){function n(){var e;return o(this,n),(e=y(this,n)).isFullView=null,e.isInterfaceHidden=null,l((function(){e.isFullView=h(D.isFullView),e.isInterfaceHidden=h(D.isInterfaceHidden)})),e}return c(n,e),a(n,[{key:"render",value:function(){return f(oe||(oe=m(['\n      <div class="chat-agent-wrapper">\n        <div class="agent-interface-wrapper">\n          <chat-interface></chat-interface>\n        </div>\n        <div class="agent-button-wrapper">\n          <chat-button>\n            <span slot="label">',"</span>\n          </chat-button>\n        </div>\n      </div>\n    "])),D.buttonLabel)}},{key:"firstUpdated",value:function(e){u(p(n.prototype),"firstUpdated",this)&&u(p(n.prototype),"firstUpdated",this).call(this,e),D.startAI()}}],[{key:"tag",get:function(){return"chat-agent"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(se||(se=m(["\n        /* https://oer.hax.psu.edu/bto108/sites/haxcellence/documentation/ddd */\n\n        :host {\n          container-type: normal;\n          display: block;\n        }\n\n        .chat-agent-wrapper {\n          bottom: var(--ddd-spacing-2);\n          display: flex;\n          flex-direction: column;\n          gap: var(--ddd-spacing-2);\n          position: fixed;\n          right: var(--ddd-spacing-2);\n          width: 35%;\n        }\n\n        :host([is-full-view]) .chat-agent-wrapper {\n          bottom: var(--ddd-spacing-0);\n          gap: var(--ddd-spacing-0);\n          right: var(--ddd-spacing-0);\n          width: 25%;\n          @media only screen and (min-height: 1000px) {\n            width: 35%;\n          }\n        }\n\n        :host([is-full-view]:host([is-interface-hidden])) .chat-agent-wrapper {\n          bottom: var(--ddd-spacing-2);\n          gap: var(--ddd-spacing-2);\n          right: var(--ddd-spacing-2);\n        }\n\n        .agent-interface-wrapper {\n          display: flex;\n          justify-content: right;\n        }\n\n        .agent-button-wrapper {\n          display: flex;\n          justify-content: right;\n        }\n\n        @container (max-width: 600px) {\n          .chat-agent-wrapper {\n            width: 30%;\n          }\n        }\n\n        @media only screen and (max-width: 425px) {\n          .chat-agent-wrapper {\n            width: 90%;\n          }\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{isFullView:{type:Boolean,attribute:"is-full-view",reflect:!0},isInterfaceHidden:{type:Boolean,attribute:"is-interface-hidden",reflect:!0}})}}])}(w);customElements.define(he.tag,he),globalThis.ChatAgentStore=globalThis.ChatAgentStore||{},globalThis.ChatAgentStore.requestAvailability=function(){return globalThis.ChatAgentStore.instance||(globalThis.ChatAgentStore.instance=document.createElement("chat-agent"),document.body.appendChild(globalThis.ChatAgentStore.instance)),globalThis.ChatAgentStore.instance},globalThis.ChatAgentStore.requestAvailability(),t(["haxcms"]),i.add({endpoint:"/api/apps/haxcms/aiChat",name:"@haxcms/aiChat",title:"AI Chat",description:"AI based chat agent that can answer questions about a site",params:{site:"location of the HAXcms site OR site.json data",type:"site for site.json or link for remote loading",question:"Question to ask of the AI",engine:"which engine to use as we test multiple",context:"context to query based on. Course typical"}});var ce=e("SiteAiChat",function(e){function n(){var e;return o(this,n),(e=y(this,n)).opened=!1,e.question=null,e.answers=[],e.loading=!1,e.context=h(s.manifest.metadata.site.name),e.engine="alfred",e.dataPulse="1",e}return c(n,e),a(n,[{key:"askQuestion",value:function(e){e.preventDefault(),this.engine=e.target.getAttribute("name"),this.context=this.shadowRoot.querySelector("#context").value,this.question=this.shadowRoot.querySelector("#question").value,this.requestAIFeedback()}},{key:"updated",value:function(e){u(p(n.prototype),"updated",this)&&u(p(n.prototype),"updated",this).call(this,e),e.has("opened")&&(this.opened?this.shadowRoot.querySelector("dialog").showModal():this.shadowRoot.querySelector("dialog").close())}},{key:"requestAIFeedback",value:function(){var e=this,n=h(s.manifest),t="";globalThis.document.querySelector("base")&&(t=globalThis.document.querySelector("base").href);var a={site:{file:t+"site.json",metadata:n.metadata},type:"site",question:this.question,engine:this.engine,context:this.context};this.loading=!0,i.call("@haxcms/aiChat",a).then((function(n){200==n.status&&(e.answers=k(n.data.answers),e.question=n.data.question),e.loading=!1})).catch((function(n){e.loading=!1,console.error(n)}))}},{key:"closeChat",value:function(){this.opened=!1}},{key:"openChat",value:function(){var e=this;this.opened=!0,setTimeout((function(){e.shadowRoot.querySelector("#question").focus(),e.shadowRoot.querySelector("#question").select()}),300)}}],[{key:"tag",get:function(){return"site-ai-chat"}},{key:"styles",get:function(){return[u(p(n),"styles",this),g(le||(le=m(["\n        :host {\n          display: block;\n        }\n      "])))]}},{key:"properties",get:function(){return v(v({},u(p(n),"properties",this)),{},{engine:{type:String},question:{type:String},context:{type:String},answers:{type:Array},opened:{type:Boolean,reflect:!0},loading:{type:Boolean,reflect:!0}})}}])}(I(S(M))));globalThis.customElements.define(ce.tag,ce)}}}));
